// Theme Map Keys
// Avoids excessive use of strings for each time color theme is used
$text-1: 'text-1';
$text-2: 'text-2';
$text-3: 'text-3';
$text-4: 'text-4';
$accent-1: 'accent-1';
$accent-2: 'accent-2';
$input-default: 'input-default';
$input-focus: 'input-focus';
$input-focus-border: 'input-focus-border';
$checkbox-default: 'checkbox-default';
$border-bottom: 'border-bottom';
$background: 'background';
$background-component: 'background-component';
$background-nav: 'background-nav';

// Torch Red
$torch-red-50: #f9dfe3;
$torch-red-100: #f9b6c0;
$torch-red-200: #f9889b;
$torch-red-300: #f95b75;
$torch-red-400: #f93857;
$torch-red-500: #ff0039;
$torch-red-600: #da0031;
$torch-red-700: #cb002d;
$torch-red-800: #ab0026;
$torch-red-900: #8b001f;
$torch-red: $torch-red-500;

// Light Grey
$light-grey-50: #f5f9fb;
$light-grey-100: #e5ebf0;
$light-grey-200: #bccad0;
$light-grey-300: #94a7af;
$light-grey-400: #758993;
$light-grey-500: #5d6c76;
$light-grey-600: #4e5d67;
$light-grey-700: #3f4c55;
$light-grey-800: #282d33;
$light-grey-900: #212428;
$light-grey: $light-grey-500;

// Blue Ribbon
$blue-ribbon-50: #dce5f9;
$blue-ribbon-100: #b0c6fa;
$blue-ribbon-200: #7fa3fb;
$blue-ribbon-300: #4f81fc;
$blue-ribbon-400: #2965fc;
$blue-ribbon-500: #0149ff;
$blue-ribbon-600: #0047e9;
$blue-ribbon-700: #0041cf;
$blue-ribbon-800: #003cb7;
$blue-ribbon-900: #00328c;
$blue-ribbon: $blue-ribbon-500;

// Dark Grey
$dark-grey-50: #c5c6cd;
$dark-grey-100: #a1a2a9;
$dark-grey-200: #61646a;
$dark-grey-300: #3e4046;
$dark-grey-400: #1d1e23;
$dark-grey-500: #1a1b1f;
$dark-grey-600: #15161a;
$dark-grey-700: #121317;
$dark-grey-800: #0d0e11;
$dark-grey-900: #000;
$dark-grey: $blue-ribbon-500;

// Neutral
$neutral-white: #fff;
$neutral-black: $dark-grey-900;

// Feedback
$feedback-alert: #ffb201;
$feedback-error: #f00;
$feedback-success: #00e65a;

// Input States
$input-error-border: $feedback-error;
$input-success-border: $feedback-success;

// Theme Map
$themes: (
  // Defaults Dark Mode
  dark: (
    text-1: $neutral-white,
    text-2: $light-grey-200,
    text-3: $light-grey-500,
    text-4: $dark-grey-700,
    accent-1: $torch-red,
    accent-2: $blue-ribbon,
    input-default: $light-grey-900,
    input-focus: $light-grey-900,
    input-focus-border: $light-grey-500,
    checkbox-default: $light-grey-900,
    border-bottom: #93a8b3,
    background: #18191d,
    background-component: $dark-grey-400,
    background-nav: $dark-grey-700,
  ),
  light: (
    text-1: $dark-grey-700,
    text-2: $light-grey-500,
    text-3: $light-grey-200,
    text-4: $neutral-white,
    accent-1: $blue-ribbon,
    accent-2: $torch-red,
    input-default: $neutral-white,
    input-focus: #f4f7f8,
    input-focus-border: #dde9ee,
    checkbox-default: #e7eff2,
    border-bottom: $light-grey-100,
    background: #f5f9fb,
    background-component: $neutral-white,
    background-nav: $neutral-white,
  ),
);

// Theme Mixin
// Finds correct color within map based on key
@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

// Theme Function
// Used for accessing theme colors
@function theme($key) {
  @return map-get($theme-map, $key);
}

/*
  Usage:
  .class {
    @include themed() {
      background: theme($background);
    }
  }
*/
