{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\views\\Analysis\\ArtistAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\views\\Analysis\\ArtistAnalysis.vue","mtime":1574131483925},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ArtistAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"main-flex\" class=\"artistanalysis\">\r\n    <NavBar/>    \r\n    <div id=\"main\" :style=\"{'--red': + red, '--green': + green, '--blue': + blue, '--alpha': + alpha}\">\r\n      <ArtistHeader @changeTab=\"changeTab\" :savedProcessed=\"savedProcessed\" :color=\"color\" :artistData=\"artistData\"/>\r\n      <div class=\"page\" id=\"overview\" v-if=\"tab == 0\">\r\n        <ArtistTopTracks :topTracks=\"topTracksLoaded\" :override=\"topProcessed\" :color=\"color\"/>\r\n        <!-- Top Track Analysis -->\r\n        <!-- Genres -->\r\n      </div>\r\n      <div class=\"page\" id=\"likedtracks\" v-if=\"tab == 1\">\r\n        \r\n\r\n\r\n      </div>\r\n\r\n      <div class=\"page\" id=\"comparison\" v-if=\"tab == 2\">\r\n\r\n      \r\n      </div>\r\n<!-- \r\n      <div class=\"windows\">\r\n        \r\n        <div class=\"window\" :style=\"{'--delay': 0}\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" :style=\"{backgroundImage: 'url(\\'' + artistData.image + '\\')'}\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">{{artistData.name}}</h1>\r\n                <h2>{{Math.round(artistData.popularity)}} / 100 Popularity</h2>\r\n                <h2>{{formatNumber(artistData.followers)}} Followers</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': 1}\" v-if=\"progress.tracks\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" class=\"library\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">Liked Songs:</h1>\r\n                <h2 v-if=\"timelineReady && !noneTimeline\">First Liked: {{oldestLiked}}</h2>\r\n                <h2 v-if=\"progress.tracks && !noneTimeline\">{{songsSaved}}</h2>\r\n                <h2 v-if=\"!progress.tracks\">Finding Saved Songs...</h2>\r\n                <h4 id=\"nosongs\" v-if=\"noneTimeline\">No Songs Liked</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <FeaturedTracks type=\"track\" secondary=\"popularity\" :style=\"{'--delay': + 4}\" class=\"featuredtracks\" :saved=\"false\" :none=\"false\" :override=\"topTracksReady\" title=\"Artist Top Tracks:\" :ids=\"topTracks\"/>\r\n\r\n        <FeaturedTracks type=\"genre\" secondary=\"\" :style=\"{'--delay': + 5}\" class=\"featuredtracks\" :saved=\"false\" :none=\"false\" :override=\"artistData != null\" title=\"Artist Genres:\" :ids=\"genresComputed\"/>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 2}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Top Track's Characteristics:</h3>\r\n          <div v-if=\"topTracksReady\">\r\n            <div>\r\n              <PercentBar title=\"Happiness\" :percent=\"sumTop('valence')\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"sumTop('energy')\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"sumTop('danceability')\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <Timeline :none=\"noneTimeline\" :small=\"true\" :override=\"timelineReady\" title=\"When You Liked Tracks:\" instructions=\"\" :max=\"-1\" :delay=\"3\" :bars=\"datesAdded\" y_axis=\"Number of Songs\" :color=\"{red: 74, green: 189, blue: 180}\"/>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 6}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Liked Track's Characteristics:</h3>\r\n          <div v-if=\"audioFeaturesReady\">\r\n            <div v-if=\"!none\">\r\n              <PercentBar title=\"Happiness\" :percent=\"artistData.valence\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"artistData.energy\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"artistData.danceability\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n            <h4 v-else>No Songs Liked</h4>\r\n          </div>\r\n          <Loading class=\"displace\" v-else/>\r\n        </div>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracks\" title=\"Liked Tracks Happiness:\" :delay=\"7\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.valence)\" max_tag=\"Happy\" min_tag=\"Sad\" y_axis=\"Number of Songs\" :color=\"audioFeatures.valence.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracks\" title=\"Liked Tracks Energy:\" :delay=\"8\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.energy)\" max_tag=\"Hyper\" min_tag=\"Peaceful\" y_axis=\"Number of Songs\" :color=\"audioFeatures.energy.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracks\" title=\"Liked Tracks Danceability:\" :delay=\"9\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.danceability)\" max_tag=\"Let's dance!\" min_tag=\"Couch Potato\" y_axis=\"Number of Songs\" :color=\"audioFeatures.danceability.color\"/>\r\n\r\n        <FeaturedTracks type=\"track\" secondary=\"date\" :style=\"{'--delay': + 11}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"Recently Liked Tracks:\" :ids=\"newestTracks\"/>\r\n\r\n        <FeaturedTracks type=\"track\" secondary=\"date\" :style=\"{'--delay': + 10}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"Oldest Liked Tracks:\" :ids=\"oldestTracks\"/>\r\n\r\n        \r\n        \r\n\r\n      </div> -->\r\n\r\n      <Progress v-if=\"inicialized && progress.processed < progress.total\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios');\r\nimport analyze from 'rgbaster';\r\n\r\nimport NavBar from '@/components/Navigation/NavBar.vue'\r\nimport Progress from '@/components/General/Progress.vue'\r\nimport ArtistHeader from '@/components/Artist/ArtistHeader.vue'\r\nimport ArtistTopTracks from '@/components/Artist/ArtistTopTracks.vue'\r\n\r\nexport default {\r\n  name: 'artistanalysis',\r\n  components: {\r\n      NavBar,\r\n      ArtistHeader,\r\n      ArtistTopTracks,\r\n      Progress,\r\n  },\r\n  data() {\r\n      return {\r\n        artistData: null,\r\n\r\n        color: {r: 0, g: 0, b: 0, a: 0},\r\n\r\n        audioFeaturesGraphs: {\r\n          valence: [0,0,0,0,0,0,0,0,0,0],\r\n          energy: [0,0,0,0,0,0,0,0,0,0],\r\n          danceability: [0,0,0,0,0,0,0,0,0,0],\r\n        },\r\n\r\n        artistProcessed: false,\r\n        topProcessed: false,\r\n        savedProcessed: false,\r\n\r\n        tab: 0,\r\n        interval: null,\r\n      }\r\n  },\r\n  methods: {\r\n    changeTab(val) {\r\n      console.log(this.artistData);\r\n      this.tab = val;\r\n    },\r\n    async dominantColor(image) {\r\n      let result = await analyze(image);\r\n      let re = RegExp(/\\d+/i, 'g');\r\n      this.color.r = parseInt(re.exec(result[0].color), 10);\r\n      this.color.g = parseInt(re.exec(result[0].color), 10);\r\n      this.color.b = parseInt(re.exec(result[0].color), 10);\r\n      this.color.a = .4;\r\n    },\r\n    async retrieveArtistData() {\r\n      let spotifyData = await this.$store.dispatch(\"getArtist\", this.$route.params.id);\r\n      if ('images' in spotifyData && spotifyData.images.length > 0)\r\n        this.dominantColor(spotifyData.images[0].url);\r\n      let discogsData = await axios.get('/api/discogs/artist/' + spotifyData.name);\r\n      this.artistData = await this.processArtist(spotifyData, discogsData.data);\r\n      this.artistProcessed = true;\r\n      await this.getTopTracks();\r\n      this.topProcessed = true;\r\n      this.interval = setInterval(this.checkTracks, 500);\r\n    },\r\n    processArtist(artist, discogs) {\r\n      console.log(artist);\r\n      console.log(discogs);\r\n      let artistObject = Object.assign({}, artist);\r\n      artistObject.images = [artistObject.images[0].url];\r\n      if ('images' in discogs)\r\n        if (discogs.images.length > 0)\r\n          for (let i = 0; i < discogs.images.length; i++) {\r\n            artistObject.images.push(discogs.images[i].resource_url);\r\n          }\r\n      artistObject.members = [];\r\n      if ('members' in discogs)\r\n        artistObject.members = discogs.members;\r\n      artistObject.namevariations = [];\r\n      if ('namevariations' in discogs);\r\n        artistObject.namevariations = discogs.namevariations;\r\n      artistObject.profile = \"\";\r\n      if ('profile' in discogs);\r\n        artistObject.profile = discogs.profile;\r\n      artistObject.realname = \"\";\r\n      if ('realname' in discogs);\r\n        artistObject.realname = discogs.realname;\r\n      artistObject.website = \"\";\r\n      artistObject.facebook = \"\";\r\n      artistObject.instagram = \"\";\r\n      artistObject.youtube = \"\";\r\n      if ('urls' in discogs)\r\n        for (let i = 0; i < discogs.urls.length; i++) {\r\n          if (discogs.urls[i].includes('facebook'))\r\n            artistObject.facebook = discogs.urls[i];\r\n          else if (discogs.urls[i].includes('instagram'))\r\n            artistObject.instagram = discogs.urls[i];\r\n          else if (discogs.urls[i].includes('youtube'))\r\n            artistObject.youtube = discogs.urls[i];\r\n          else if (i == 0) \r\n            artistObject.website = discogs.urls[i];\r\n        }\r\n      artistObject.timeline = [];\r\n      artistObject.oldest = [];\r\n      artistObject.newest = [];\r\n      artistObject.savedTracks = {tracks: [], energy: 0, valence: 0, danceability: 0};\r\n      artistObject.topTracks = {tracks: [], energy: 0, valence: 0, danceability: 0};\r\n      \r\n      return artistObject;\r\n    },\r\n    async checkTracks() {\r\n      if (this.progress.tracks) {\r\n        clearInterval(this.interval);\r\n        this.artistData.savedTracks.tracks = await this.artistTracks();\r\n        await this.processTracks();\r\n        this.savedProcessed = true;\r\n      }\r\n    },\r\n    async artistTracks() {\r\n      if (!(this.artistData.id in this.$store.state.artists))\r\n        return [];\r\n      let ids = this.$store.state.artists[this.artistData.id].tracks;\r\n      let tracks = [];\r\n\r\n      let now = new Date();\r\n      let nowTime = now.getTime();\r\n      const MONTH = 2626560000;\r\n\r\n      let orderByDate = [];\r\n      for (let i = 0; i < ids.length; i++) {\r\n          tracks.push(this.$store.state.tracks[ids[i]]);\r\n          let date = new Date(tracks[i].date);\r\n          let dateTime = date.getTime();\r\n          let diff = nowTime - dateTime;\r\n          let diffMonth = Math.floor(diff / MONTH);\r\n          orderByDate.push({id: tracks[i], time: dateTime, month: diffMonth});\r\n          if (diffMonth >= this.artistData.timeline.length) {\r\n              while (diffMonth >= this.artistData.timeline.length) {\r\n                  this.artistData.timeline.push(0);\r\n              }\r\n          }\r\n          this.artistData.timeline[diffMonth] += 1;\r\n      }\r\n      orderByDate.sort((a, b) => (a.time > b.time) ? 1 : -1);\r\n      let num = orderByDate.length;\r\n      if (orderByDate.length > 10) \r\n        num = 10;\r\n      \r\n      this.artistData.oldest = orderByDate.slice(0, num);\r\n      this.artistData.newest = orderByDate.slice(orderByDate.length - num, orderByDate.length);\r\n      while (this.artistData.timeline.length < this.$store.state.dateAdded.length) {\r\n          this.artistData.timeline.push(0);\r\n      }\r\n      return tracks;\r\n    },\r\n    async processTracks() { \r\n      let ids = this.artistData.savedTracks.tracks.map(value => value.id);\r\n      let keys = ['valence', 'danceability', 'energy'];\r\n\r\n      while (ids.length > 0) {\r\n        let newIds = ids.splice(0, 50);\r\n        let audioFeatures = await this.$store.dispatch('getAudioFeaturesForTracks', newIds);\r\n        for (let i = 0; i < audioFeatures.length; i++) {\r\n          for (let j = 0; j < keys.length; j++) {\r\n            this.artistData.savedTracks[keys[j]] += audioFeatures[i][keys[j]];\r\n            this.audioFeaturesGraphs[keys[j]][Math.floor(audioFeatures[i][keys[j]] * 10)] += 1;\r\n          }\r\n        }\r\n      }\r\n      for ( let i = 0; i < keys.length; i++) {\r\n        this.artistData.savedTracks[keys[i]] = this.artistData.savedTracks[keys[i]] / this.artistData.savedTracks.tracks.length;\r\n      }\r\n    },\r\n    async artistTopTracks() {\r\n        let tracks = await this.$store.dispatch('getArtistTopTracks', this.$route.params.id);\r\n        let ids = [];\r\n        for (let i = 0; i < tracks.length; i++) {\r\n            if (tracks[i].album.images.length > 1)\r\n                tracks[i].image = tracks[i].album.images[0].url;\r\n            ids.push(tracks[i].id);\r\n        }\r\n        let audioFeatures = await this.$store.dispatch('getAudioFeaturesForTracks', ids);\r\n        for (let i = 0; i < tracks.length; i++) {\r\n            tracks[i].valence = audioFeatures[i].valence;\r\n            tracks[i].energy = audioFeatures[i].energy;\r\n            tracks[i].danceability = audioFeatures[i].danceability;\r\n        }\r\n        return tracks;\r\n    },\r\n\r\n    async getTopTracks() {\r\n      let tracks = await this.artistTopTracks();\r\n      for (let i = 0; i < tracks.length; i++) {\r\n        this.artistData.topTracks.tracks.push(tracks[i]);\r\n        this.artistData.topTracks.valence += tracks[i].valence;\r\n        this.artistData.topTracks.energy += tracks[i].energy;\r\n        this.artistData.topTracks.danceability += tracks[i].danceability;\r\n        this.artistData.topTracks.tracks[i].image = this.artistData.topTracks.tracks[i].album.images[0].url;\r\n      }\r\n      this.artistData.topTracks.valence /= this.artistData.topTracks.tracks.length;\r\n      this.artistData.topTracks.energy /= this.artistData.topTracks.tracks.length;\r\n      this.artistData.topTracks.danceability /= this.artistData.topTracks.tracks.length;\r\n      this.topTracksReady = true;\r\n    },\r\n\r\n    cleanGraphDataForwards(bars) {\r\n      let graphData = [];\r\n      for (let i = 0; i < bars.length; i++) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    formatNumber(num) {\r\n      let millions = Math.floor(num / 1000000);\r\n      let thousands = Math.floor(num / 1000) % 1000;\r\n      let remainder = num % 1000;\r\n      let zeros = \"\";\r\n      let zeros2 = \"\";\r\n      if (thousands < 100)\r\n          zeros2 += \"0\"\r\n      if (thousands < 10)\r\n          zeros2 += \"0\"\r\n      if (remainder < 100)\r\n          zeros += \"0\"\r\n      if (remainder < 10)\r\n          zeros += \"0\"\r\n      if (millions > 0)\r\n        return millions + \",\" + zeros2 + thousands + \",\" + zeros + remainder;\r\n      if (thousands > 0) \r\n          return thousands + \",\" + zeros + remainder;\r\n      return remainder;\r\n    },\r\n\r\n    sumTop(type) {\r\n      let sum = 0;\r\n      for (let i = 0; i < this.artistData.topTracks.length; i++) {\r\n        sum += this.artistData.topTracks[i][type];\r\n      }\r\n      return sum / this.artistData.topTracks.length;\r\n    },\r\n    cleanGraphData(bars) {\r\n      let graphData = [];\r\n      for (let i = bars.length - 1; i >= 0; i--) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    reverse(arr) {\r\n      let newArr = [];\r\n      for (let i = arr.length - 1; i >= 0; i--) {\r\n        newArr.push(arr[i]);\r\n      }\r\n      return newArr;\r\n    },\r\n    toTrack(id) {\r\n      this.$router.push(\"/songs/\" + id);\r\n    }\r\n  },\r\n  computed: {\r\n    red() {\r\n      return this.color.r;\r\n    },\r\n    green() {\r\n      return this.color.g;\r\n    },\r\n    blue() {\r\n      return this.color.b;\r\n    },\r\n    alpha() {\r\n      return this.color.a;\r\n    },\r\n    topTracksLoaded() {\r\n      if (this.artistData == null) {\r\n        return {tracks: [], valence: 0, energy: 0, danceability: 0};\r\n      }\r\n      return this.artistData.topTracks;\r\n    },\r\n    oldestLiked() {\r\n      let month = this.oldestTracks[0].month;\r\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n      let now = new Date();\r\n      let nowMonth = now.getMonth();\r\n      let year = 0;\r\n      nowMonth -= month;\r\n      nowMonth -= 1;\r\n      while (nowMonth < 0) {\r\n          year += 1;\r\n          nowMonth = 12 + nowMonth;\r\n      } \r\n      let returnYear = (now.getFullYear() - year);\r\n      return months[nowMonth] + \", \" + returnYear;\r\n    },\r\n    inicialized() {\r\n      return this.$store.state.inicialized;\r\n    },\r\n    progress() {\r\n      return this.$store.state.progress;\r\n    },\r\n    notSaved() {\r\n      if (!this.progress.tracks)\r\n        return false;\r\n      if (!(this.$route.params.id in this.$store.state.artists))\r\n        return true;\r\n      return this.$store.state.artists[this.$route.params.id].tracks.length == 0;\r\n    },\r\n    songsSaved() {\r\n      if (this.$route.params.id in this.$store.state.artists) {\r\n        return this.$store.state.artists[this.$route.params.id].tracks.length + \" Songs Liked\";\r\n      }\r\n      return \"\";\r\n    },\r\n    datesAdded() {\r\n      if (!this.savedProcessed)\r\n        return [];\r\n      return this.cleanGraphData(this.artistData.timeline);\r\n    },\r\n    oldestTracks() {\r\n      if (!this.savedProcessed)\r\n        return [];\r\n      return this.artistData.oldest;\r\n    },\r\n    newestTracks() {\r\n      if (!this.savedProcessed)\r\n        return [];\r\n      return this.reverse(this.artistData.newest);\r\n    },\r\n    audioFeatures() {\r\n      return this.$store.state.audioFeatures;\r\n    },\r\n    none() {\r\n      if (this.savedProcessed) {\r\n        if (this.artistData.tracks.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    noneTimeline() {\r\n      if (this.savedProcessed) {\r\n        if (this.artistData.timeline.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    genresComputed() {\r\n      if (this.artistData != null)\r\n        return this.artistData.genres.slice(0, 10);\r\n      return [];\r\n    },\r\n  },  \r\n  async created() {\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'auto'\r\n    });\r\n    if (!this.inicialized)\r\n      this.$router.push(\"/login\");\r\n    // REQUEST Artist Data\r\n    this.retrieveArtistData();\r\n  }\r\n}\r\n/*\r\n\r\n*/\r\n</script>\r\n\r\n<style scoped>\r\n#main {\r\n  --red: 255;\r\n  --green: 255;\r\n  --blue: 255;\r\n  --alpha: 0;\r\n  /* background: rgba(var(--red), var(--green), var(--blue), var(--alpha)); */\r\n}\r\nh1.section-title {\r\n  font-size: 1.3em;\r\n  color: rgba(255, 255, 255, 0.815);\r\n  font-weight: lighter;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.sub-title {\r\n  color: rgba(255, 255, 255, 0.945);\r\n  font-weight: bold;\r\n  font-size: 1.1em;\r\n  margin: 0;\r\n}\r\n\r\np {\r\n  color: rgba(255, 255, 255, 0.534);\r\n  text-align: left;\r\n  margin: 0px 0px;\r\n  line-height: 25px;\r\n}\r\n\r\n.member-active {\r\n  display: block;\r\n  height: 20px;\r\n  width: 20px;\r\n  margin: 0;\r\n  margin-right: 5px;\r\n}\r\n\r\nimg {\r\n  max-width: 300px;\r\n  max-height: 300px;\r\n  margin: 0px 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n#profile {\r\n  max-width: 300px;\r\n  margin: 0px 10px;\r\n}\r\n\r\n.top-track {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 45px;\r\n}\r\n\r\n.top-track p {\r\n  width: calc(100% - 20px - 45px);\r\n  display: block;\r\n  line-height: 16px;\r\n  height: 16px;\r\n  color: white;\r\n  text-align: left;\r\n  font-weight: lighter;\r\n  color: rgba(255, 255, 255, 0.699);\r\n  margin-left: 16px;\r\n}\r\n\r\n.top-track .index {\r\n  width: 20px;\r\n  color: rgba(255, 255, 255, 0.349);\r\n  text-align: center;\r\n}\r\n\r\n.border {\r\n  height: 100%;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.219);\r\n}\r\n\r\n.bordertop {\r\n  border-top: 1px solid rgba(255, 255, 255, 0.219);\r\n}\r\n\r\n.top-track .track-image {\r\n  display: block;\r\n  width: 45px;\r\n  height: 45px;\r\n  margin: 0;\r\n  background-size: 100% 100%;\r\n  background-position: center center;\r\n  border: 1px solid rgba(0, 0, 0, 0.452);\r\n}\r\n\r\n#topTracksList {\r\n  max-width: 400px;\r\n}\r\n\r\n.featuredtracks {\r\n  --delay: 0;\r\n  animation: slide-up .5s ease calc(var(--delay) * .1s), hide calc(var(--delay) * .1s);\r\n}\r\n.library {\r\n  background-image: url('../../assets/icons/heart.svg');\r\n}\r\n#nosongs {\r\n  margin-bottom: 10px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n.nomargin {\r\n  margin-bottom: 0px;\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  #artist-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .fit {\r\n    width: calc(100% - 90px) !important;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  .windows {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  #track-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 1.2em !important;\r\n    \r\n  }\r\n\r\n  h2 {\r\n      font-size: .8em !important;\r\n      margin: 2px !important;\r\n  }\r\n\r\n  h4 {\r\n    font-size: .9em !important;\r\n  }\r\n\r\n}\r\n\r\nh4 {\r\n  margin-bottom: 0px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n\r\n#artist-image {\r\n  display: block;\r\n  width: 100px;\r\n  height: 100px;\r\n  background-size: auto 100%;\r\n  background-position: center center;\r\n  margin-right: 20px;\r\n}\r\n\r\n\r\nh1 {\r\n  font-size: 1.7em;\r\n  display: block;\r\n  color: white;\r\n  text-align: left;\r\n  margin: 0px 0px;\r\n  line-height: 30px;\r\n  display: block;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  margin-top: 3px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1em;\r\n  color: rgba(255, 255, 255, 0.568);\r\n  text-align: left;\r\n  margin: 0;\r\n  margin-top: 10px;\r\n  max-width: calc(100% - 5px);\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.fit {\r\n  display: block;\r\n  width: calc(100% - 120px);\r\n}\r\n\r\n.flex {\r\n  width: 100%;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/views/Analysis"}]}