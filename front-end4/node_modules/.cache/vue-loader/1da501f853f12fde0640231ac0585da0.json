{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Lists\\TopPlayed.vue?vue&type=style&index=0&id=522e296e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Lists\\TopPlayed.vue","mtime":1573849441435},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLlRvcFBsYXllZCB7DQogICAgbWFyZ2luLWJvdHRvbTogNzVweDsNCn0NCg0KLmxpc3Qgew0KICAgIG1hcmdpbi10b3A6IDM1cHg7DQp9DQoNCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHsNCiAgICAubGlzdCB7DQogICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgfQ0KDQogICAgLlRvcFBsYXllZCB7DQogICAgICAgIG1hcmdpbi1ib3R0b206IDBweCAhaW1wb3J0YW50Ow0KICAgIH0NCn0NCg0KLnNlYXJjaEl0ZW0gew0KICAgIG1heC13aWR0aDogOTAwcHg7DQogICAgDQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQoNCi5mYWRlIHsNCiAgb3BhY2l0eTogLjM7DQp9DQo="},{"version":3,"sources":["TopPlayed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"TopPlayed.vue","sourceRoot":"src/components/Lists","sourcesContent":["<template>\r\n    <div class=\"TopPlayed\">\r\n        <div v-if=\"progress.tracks || profile\">\r\n        <Selector @toggleSave=\"toggleSave2\" :save=\"save\" :state=\"giveState\" :items=\"filterSelector\" :load=\"false\" :override=\"false\" @pending=\"pending\" @selection=\"select\"/>\r\n        <div class=\"list\" v-if=\"list.length > 0 && !save\">\r\n            <SearchItem :profile=\"profile\" :profileData=\"profileData\" :topsaved=\"false\" class=\"searchItem\" v-for=\"(track, index) in list\"  :saved=\"true\" :showNum=\"true\" :key=\"'topplayed' + index\" :data=\"track\" :index=\"index\" :type=\"type\"/>\r\n        </div>\r\n        <Empty class=\"list\" v-if=\"list.length <= 0 && !save\"/>\r\n        <div class=\"list\" v-if=\"list.length > 0 && save\" :class=\"{fade: (type == 'artist' && !stateartists) || (type == 'track' && !statetracks)}\">\r\n            <SearchItem :profile=\"profile\" :profileData=\"profileData\" :topsaved=\"false\" class=\"searchItem\" v-for=\"index in 20\"  :saved=\"true\" :showNum=\"true\" :key=\"'topplayed' + (index - 1)\" :data=\"list[index - 1]\" :index=\"index - 1\" :type=\"type\"/>\r\n        </div>\r\n        <Empty class=\"list\" v-if=\"list.length <= 0 && save\"/>\r\n        </div>\r\n        <Loading v-else/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Selector from '@/components/Menu/Selector.vue'\r\nimport SearchItem from '@/components/Lists/SearchItem.vue'\r\nimport Empty from '@/components/Lists/Empty.vue'\r\nimport Loading from '@/components/General/Loading.vue'\r\n\r\nexport default {\r\n  name: 'TopPlayed',\r\n  props: {\r\n      save: Boolean,\r\n      statetracks: Boolean,\r\n      stateartists: Boolean,\r\n      profile: Boolean,\r\n      data: Object,\r\n      artistsAllowed: Boolean,\r\n      tracksAllowed: Boolean,\r\n  },\r\n  components: {\r\n      Selector,\r\n      SearchItem,\r\n      Empty,\r\n      Loading\r\n  },\r\n  data() {\r\n    return {\r\n        list: [],\r\n        type: \"track\",\r\n        selector: [\r\n            {type: \"text\", text: \"My Top Played\"}, \r\n            {\r\n                type: \"select\", \r\n                options: [\r\n                    {value: \"tracks\", text: \"Tracks\"},\r\n                    {value: \"artists\", text: \"Artists\"}\r\n                ]\r\n            },\r\n            {type: \"text\", text: \"in the last\"}, \r\n            {\r\n                type: \"select\", \r\n                options: [\r\n                    {value: 0, text: \"4 Weeks\"},\r\n                    {value: 1, text: \"6 Months\"},\r\n                    {value: 2, text: \"Few years\"},\r\n                ]\r\n            }\r\n        ],\r\n        chart: \"\",\r\n        range: -1,\r\n        pendingStatus: true,\r\n    }\r\n  },\r\n    methods: {\r\n        toggleSave2() {\r\n            this.$emit('toggleSave', \"most_played_\" + this.type + \"s\");\r\n        },\r\n        select(val) {\r\n            if (val == 'tracks' || val == 'artists') {\r\n                this.chart = val;\r\n                if (val == 'tracks')\r\n                    this.type = \"track\";\r\n                else \r\n                    this.type = \"artist\";\r\n            }\r\n            else \r\n                this.range = val;\r\n            this.checkResults();\r\n        },\r\n        checkResults() {\r\n            if (this.chart != \"\" && (this.range == 0 || this.range == 1 || this.range == 2)) {\r\n                let ids = this.topPlayed[this.chart][this.range];\r\n                for (var i = 0; i < ids.length; i++) {\r\n                    if (!this.profile)\r\n                        this.list.push(this.$store.state[this.chart][ids[i]]);\r\n                    else  {\r\n                        let track = this.data[this.chart][ids[i]];\r\n                        track.id = ids[i];\r\n                        this.list.push(track);\r\n                    }\r\n                }\r\n                this.pendingStatus = false;\r\n            }\r\n        },\r\n        pending() {\r\n            this.pendingStatus = true;\r\n            this.list = [];\r\n        },\r\n        filter() {\r\n            if (!this.data.artistsAllowed) {\r\n                this.selector.splice(0, 2, {type: \"text\", text: this.data.name + \"'s Top Played Tracks\"});\r\n            }\r\n            else if (!this.data.tracksAllowed) {\r\n                this.selector.splice(0, 2, {type: \"text\", text: this.data.name + \"'s Top Played Artists\"});\r\n            }\r\n            else {\r\n                this.selector.splice(0, 1, {type: \"text\", text: this.data.name + \"'s Top Played\"})\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        giveState() {\r\n            if (this.type == 'artist')\r\n                return this.stateartists;\r\n            return this.statetracks;\r\n        },\r\n        topPlayed() {\r\n            if (!this.profile)\r\n                return this.$store.state.topPlayed;\r\n            return this.data.topPlayed;\r\n        },\r\n        progress() {\r\n            return this.$store.state.progress;\r\n        },\r\n        filterSelector() {\r\n            if (!this.profile)\r\n                return this.selector;\r\n            this.filter();\r\n            return this.selector;\r\n        },\r\n        profileData() {\r\n            if (!this.profile)\r\n                return null;\r\n            return {tracks: this.data.tracks, artists: this.data.artists};\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.TopPlayed {\r\n    margin-bottom: 75px;\r\n}\r\n\r\n.list {\r\n    margin-top: 35px;\r\n}\r\n\r\n@media only screen and (max-width: 500px) {\r\n    .list {\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .TopPlayed {\r\n        margin-bottom: 0px !important;\r\n    }\r\n}\r\n\r\n.searchItem {\r\n    max-width: 900px;\r\n    \r\n    margin: 0 auto;\r\n}\r\n\r\n.fade {\r\n  opacity: .3;\r\n}\r\n</style>\r\n"]}]}