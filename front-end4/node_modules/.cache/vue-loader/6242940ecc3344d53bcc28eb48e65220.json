{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\views\\Analysis\\ArtistAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\views\\Analysis\\ArtistAnalysis.vue","mtime":1574024653895},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7DQovLyBAIGlzIGFuIGFsaWFzIHRvIC9zcmMNCmltcG9ydCBOYXZCYXIgZnJvbSAnQC9jb21wb25lbnRzL05hdmlnYXRpb24vTmF2QmFyLnZ1ZScNCi8vIGltcG9ydCBMb2FkaW5nIGZyb20gJ0AvY29tcG9uZW50cy9HZW5lcmFsL0xvYWRpbmcudnVlJw0KLy8gaW1wb3J0IFRpbWVsaW5lIGZyb20gJ0AvY29tcG9uZW50cy9XaW5kb3dzL1RpbWVsaW5lLnZ1ZScNCi8vIGltcG9ydCBGZWF0dXJlZFRyYWNrcyBmcm9tICdAL2NvbXBvbmVudHMvV2luZG93cy9GZWF0dXJlZFRyYWNrcy52dWUnDQovLyBpbXBvcnQgUGVyY2VudEJhciBmcm9tICdAL2NvbXBvbmVudHMvQW5hbHlzaXMvUGVyY2VudEJhci52dWUnDQovLyBpbXBvcnQgR3JhcGggZnJvbSAnQC9jb21wb25lbnRzL1dpbmRvd3MvR3JhcGgudnVlJw0KDQppbXBvcnQgUHJvZ3Jlc3MgZnJvbSAnQC9jb21wb25lbnRzL0dlbmVyYWwvUHJvZ3Jlc3MudnVlJw0KaW1wb3J0IEFydGlzdEhlYWRlciBmcm9tICdAL2NvbXBvbmVudHMvQXJ0aXN0L0FydGlzdEhlYWRlci52dWUnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ2FydGlzdGFuYWx5c2lzJywNCiAgY29tcG9uZW50czogew0KICAgICAgTmF2QmFyLA0KICAgICAgLy8gTG9hZGluZywNCiAgICAgIC8vIFRpbWVsaW5lLA0KICAgICAgLy8gRmVhdHVyZWRUcmFja3MsDQogICAgICAvLyBQZXJjZW50QmFyLA0KICAgICAgLy8gR3JhcGgsDQogICAgICBBcnRpc3RIZWFkZXIsDQogICAgICBQcm9ncmVzcw0KICB9LA0KICBkYXRhKCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgYXJ0aXN0RGF0YTogbnVsbCwNCiAgICAgICAgbGlicmFyeUxvYWRlZDogZmFsc2UsDQogICAgICAgIGludGVydmFsOiBudWxsLA0KICAgICAgICB0aW1lbGluZVJlYWR5OiBmYWxzZSwNCiAgICAgICAgYXVkaW9GZWF0dXJlc1JlYWR5OiBmYWxzZSwNCiAgICAgICAgdG9wVHJhY2tzUmVhZHk6IGZhbHNlLA0KICAgICAgICBhdWRpb0ZlYXR1cmVzR3JhcGhzOiB7DQogICAgICAgICAgdmFsZW5jZTogWzAsMCwwLDAsMCwwLDAsMCwwLDBdLA0KICAgICAgICAgIGVuZXJneTogWzAsMCwwLDAsMCwwLDAsMCwwLDBdLA0KICAgICAgICAgIGRhbmNlYWJpbGl0eTogWzAsMCwwLDAsMCwwLDAsMCwwLDBdLA0KICAgICAgICB9LA0KICAgICAgICB0YWI6IDAsDQogICAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjaGFuZ2VUYWIodmFsKSB7DQogICAgICB0aGlzLnRhYiA9IHZhbDsNCiAgICB9LA0KICAgIGFzeW5jIGFydGlzdEFuYWx5c2lzKGlkKSB7DQogICAgICAgIGxldCBhcnRpc3QgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZ2V0QXJ0aXN0IiwgaWQpOw0KICAgICAgICBsZXQgZGlzY29ncyA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9kaXNjb2dzL2FydGlzdC8nICsgYXJ0aXN0Lm5hbWUpOw0KICAgICAgICBjb25zb2xlLmxvZyhkaXNjb2dzLmRhdGEpOw0KICAgICAgICBsZXQgYXJ0aXN0T2JqZWN0ID0gYXdhaXQgdGhpcy5wcm9jZXNzQXJ0aXN0KGFydGlzdCwgZGlzY29ncy5kYXRhKTsNCiAgICAgICAgY29uc29sZS5sb2coYXJ0aXN0T2JqZWN0KTsNCiAgICAgICAgcmV0dXJuIGFydGlzdE9iamVjdDsNCiAgICB9LA0KICAgIGFzeW5jIHByb2Nlc3NBcnRpc3QoYXJ0aXN0LCBkaXNjb2dzKSB7DQogICAgICBhcnRpc3QuaHJlZiA9IGFydGlzdC5leHRlcm5hbF91cmxzLnNwb3RpZnk7DQogICAgICBhcnRpc3QuZm9sbG93ZXJzID0gYXJ0aXN0LmZvbGxvd2Vycy50b3RhbDsNCiAgICAgIGFydGlzdC5pbWFnZSA9IGFydGlzdC5pbWFnZXNbMF0udXJsOw0KICAgICAgaWYgKCdpbWFnZXMnIGluIGRpc2NvZ3MgJiYgZGlzY29ncy5pbWFnZXMubGVuZ3RoID4gMCkNCiAgICAgICAgYXJ0aXN0LmltYWdlMiA9IGRpc2NvZ3MuaW1hZ2VzWzBdLnJlc291cmNlX3VybDsNCiAgICAgIGlmICgnbWVtYmVycycgaW4gZGlzY29ncykNCiAgICAgICAgYXJ0aXN0Lm1lbWJlcnMgPSBkaXNjb2dzLm1lbWJlcnM7DQogICAgICBpZiAoJ25hbWV2YXJpYXRpb25zJyBpbiBkaXNjb2dzKTsNCiAgICAgICAgYXJ0aXN0Lm5hbWV2YXJpYXRpb25zID0gZGlzY29ncy5uYW1ldmFyaWF0aW9uczsNCiAgICAgIGlmICgncHJvZmlsZScgaW4gZGlzY29ncyk7DQogICAgICAgIGFydGlzdC5wcm9maWxlID0gZGlzY29ncy5wcm9maWxlOw0KICAgICAgaWYgKCdyZWFsbmFtZScgaW4gZGlzY29ncyk7DQogICAgICAgIGFydGlzdC5yZWFsbmFtZSA9IGRpc2NvZ3MucmVhbG5hbWU7DQogICAgICBpZiAoJ3VybHMnIGluIGRpc2NvZ3MpOw0KICAgICAgICBhcnRpc3QudXJscyA9IGRpc2NvZ3MudXJsOw0KICAgICAgcmV0dXJuIGFydGlzdDsNCiAgICB9LA0KICAgIGFzeW5jIGFydGlzdFRyYWNrcyhhcnRpc3REYXRhKSB7DQogICAgICAgIGlmICghKGFydGlzdERhdGEuaWQgaW4gdGhpcy4kc3RvcmUuc3RhdGUuYXJ0aXN0cykpDQogICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgIGxldCBpZHMgPSB0aGlzLiRzdG9yZS5zdGF0ZS5hcnRpc3RzW2FydGlzdERhdGEuaWRdLnRyYWNrczsNCiAgICAgICAgbGV0IHRyYWNrcyA9IFtdOw0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlkcy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgdHJhY2tzLnB1c2godGhpcy4kc3RvcmUuc3RhdGUudHJhY2tzW2lkc1tpXV0pOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiB0cmFja3M7DQogICAgfSwNCiAgICBhc3luYyBhcnRpc3RUaW1lbGluZShhcnRpc3REYXRhKSB7DQogICAgICAgIGlmICghKGFydGlzdERhdGEuaWQgaW4gdGhpcy4kc3RvcmUuc3RhdGUuYXJ0aXN0cykpDQogICAgICAgICAgICByZXR1cm4ge3RpbWVsaW5lOiBbXSwgb2xkZXN0OiBbXSwgbmV3ZXN0OiBbXX07DQogICAgICAgIGxldCBhcnRpc3RPYmplY3QgPSBhcnRpc3REYXRhOw0KICAgICAgICBsZXQgdGltZWxpbmUgPSBbXTsNCiAgICAgICAgbGV0IHRyYWNrcyA9IFtdOw0KICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKTsNCiAgICAgICAgbGV0IG5vd1RpbWUgPSBub3cuZ2V0VGltZSgpOw0KICAgICAgICBjb25zdCBNT05USCA9IDI2MjY1NjAwMDA7DQogICAgICAgIGxldCBhcnRpc3RTYXZlZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmFydGlzdHNbYXJ0aXN0T2JqZWN0LmlkXTsNCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnRpc3RTYXZlZC50cmFja3MubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIGxldCBkYXRlID0gbmV3IERhdGUodGhpcy4kc3RvcmUuc3RhdGUudHJhY2tzW2FydGlzdFNhdmVkLnRyYWNrc1tpXV0uZGF0ZSk7DQogICAgICAgICAgICBsZXQgZGF0ZVRpbWUgPSBkYXRlLmdldFRpbWUoKTsNCiAgICAgICAgICAgIGxldCBkaWZmID0gbm93VGltZSAtIGRhdGVUaW1lOw0KICAgICAgICAgICAgbGV0IGRpZmZNb250aCA9IE1hdGguZmxvb3IoZGlmZiAvIE1PTlRIKTsNCiAgICAgICAgICAgIHRyYWNrcy5wdXNoKHtpZDogYXJ0aXN0U2F2ZWQudHJhY2tzW2ldLCB0aW1lOiBkYXRlVGltZSwgbW9udGg6IGRpZmZNb250aH0pOw0KICAgICAgICAgICAgaWYgKGRpZmZNb250aCA+PSB0aW1lbGluZS5sZW5ndGgpIHsNCiAgICAgICAgICAgICAgICB3aGlsZSAoZGlmZk1vbnRoID49IHRpbWVsaW5lLmxlbmd0aCkgew0KICAgICAgICAgICAgICAgICAgICB0aW1lbGluZS5wdXNoKDApOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRpbWVsaW5lW2RpZmZNb250aF0gKz0gMTsNCiAgICAgICAgfQ0KICAgICAgICB0cmFja3Muc29ydCgoYSwgYikgPT4gKGEudGltZSA+IGIudGltZSkgPyAxIDogLTEpOw0KICAgICAgICBsZXQgbnVtID0gdHJhY2tzLmxlbmd0aDsNCiAgICAgICAgaWYgKHRyYWNrcy5sZW5ndGggPiAxMCkgDQogICAgICAgICAgbnVtID0gMTA7DQogICAgICAgIGxldCBvbGRlc3QgPSB0cmFja3Muc2xpY2UoMCwgbnVtKTsNCiAgICAgICAgbGV0IG5ld2VzdCA9IHRyYWNrcy5zbGljZSh0cmFja3MubGVuZ3RoIC0gbnVtLCB0cmFja3MubGVuZ3RoKTsNCiAgICAgICAgd2hpbGUgKHRpbWVsaW5lLmxlbmd0aCA8IHRoaXMuJHN0b3JlLnN0YXRlLmRhdGVBZGRlZC5sZW5ndGgpIHsNCiAgICAgICAgICAgIHRpbWVsaW5lLnB1c2goMCk7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHt0aW1lbGluZTogdGltZWxpbmUsIG9sZGVzdDogb2xkZXN0LCBuZXdlc3Q6IG5ld2VzdH07DQogICAgfSwNCiAgICBhc3luYyBhcnRpc3RUb3BUcmFja3MoaWQpIHsNCiAgICAgICAgbGV0IHRyYWNrcyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdnZXRBcnRpc3RUb3BUcmFja3MnLCBpZCk7DQogICAgICAgIGxldCBpZHMgPSBbXTsNCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmFja3MubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIHRyYWNrc1tpXS5hbGJ1bS5ocmVmID0gdHJhY2tzW2ldLmFsYnVtLmV4dGVybmFsX3VybHMuc3BvdGlmeTsNCiAgICAgICAgICAgIHRyYWNrc1tpXS5ocmVmID0gdHJhY2tzW2ldLmV4dGVybmFsX3VybHMuc3BvdGlmeTsNCiAgICAgICAgICAgIGlmICh0cmFja3NbaV0uYWxidW0uaW1hZ2VzLmxlbmd0aCA+IDEpDQogICAgICAgICAgICAgICAgdHJhY2tzW2ldLmltYWdlID0gdHJhY2tzW2ldLmFsYnVtLmltYWdlc1swXS51cmw7DQogICAgICAgICAgICBpZHMucHVzaCh0cmFja3NbaV0uaWQpOw0KICAgICAgICB9DQogICAgICAgIGxldCBhdWRpb0ZlYXR1cmVzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldEF1ZGlvRmVhdHVyZXNGb3JUcmFja3MnLCBpZHMpOw0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRyYWNrcy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgdHJhY2tzW2ldLnZhbGVuY2UgPSBhdWRpb0ZlYXR1cmVzW2ldLnZhbGVuY2U7DQogICAgICAgICAgICB0cmFja3NbaV0uZW5lcmd5ID0gYXVkaW9GZWF0dXJlc1tpXS5lbmVyZ3k7DQogICAgICAgICAgICB0cmFja3NbaV0uZGFuY2VhYmlsaXR5ID0gYXVkaW9GZWF0dXJlc1tpXS5kYW5jZWFiaWxpdHk7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHRyYWNrczsNCiAgICB9LA0KICAgIGNsZWFuR3JhcGhEYXRhRm9yd2FyZHMoYmFycykgew0KICAgICAgbGV0IGdyYXBoRGF0YSA9IFtdOw0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiYXJzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIGdyYXBoRGF0YS5wdXNoKHt2YWx1ZTogYmFyc1tpXSwgdGFnOiBiYXJzW2ldfSk7DQogICAgICB9DQogICAgICByZXR1cm4gZ3JhcGhEYXRhOw0KICAgIH0sDQogICAgZm9ybWF0TnVtYmVyKG51bSkgew0KICAgICAgbGV0IG1pbGxpb25zID0gTWF0aC5mbG9vcihudW0gLyAxMDAwMDAwKTsNCiAgICAgIGxldCB0aG91c2FuZHMgPSBNYXRoLmZsb29yKG51bSAvIDEwMDApICUgMTAwMDsNCiAgICAgIGxldCByZW1haW5kZXIgPSBudW0gJSAxMDAwOw0KICAgICAgbGV0IHplcm9zID0gIiI7DQogICAgICBsZXQgemVyb3MyID0gIiI7DQogICAgICBpZiAodGhvdXNhbmRzIDwgMTAwKQ0KICAgICAgICAgIHplcm9zMiArPSAiMCINCiAgICAgIGlmICh0aG91c2FuZHMgPCAxMCkNCiAgICAgICAgICB6ZXJvczIgKz0gIjAiDQogICAgICBpZiAocmVtYWluZGVyIDwgMTAwKQ0KICAgICAgICAgIHplcm9zICs9ICIwIg0KICAgICAgaWYgKHJlbWFpbmRlciA8IDEwKQ0KICAgICAgICAgIHplcm9zICs9ICIwIg0KICAgICAgaWYgKG1pbGxpb25zID4gMCkNCiAgICAgICAgcmV0dXJuIG1pbGxpb25zICsgIiwiICsgemVyb3MyICsgdGhvdXNhbmRzICsgIiwiICsgemVyb3MgKyByZW1haW5kZXI7DQogICAgICBpZiAodGhvdXNhbmRzID4gMCkgDQogICAgICAgICAgcmV0dXJuIHRob3VzYW5kcyArICIsIiArIHplcm9zICsgcmVtYWluZGVyOw0KICAgICAgcmV0dXJuIHJlbWFpbmRlcjsNCiAgICB9LA0KICAgIGFzeW5jIGNoZWNrdHJhY2tzKCkgew0KICAgICAgaWYgKHRoaXMucHJvZ3Jlc3MudHJhY2tzKSB7DQogICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IHRoaXMuYXJ0aXN0VHJhY2tzKHRoaXMuYXJ0aXN0RGF0YSk7DQogICAgICAgIHRoaXMuYXJ0aXN0RGF0YS50cmFja3MgPSByZXNwb25zZTsNCiAgICAgICAgdGhpcy5wcm9jZXNzVHJhY2tzKCk7DQogICAgICAgIHJlc3BvbnNlID0gYXdhaXQgdGhpcy5hcnRpc3RUaW1lbGluZSh0aGlzLmFydGlzdERhdGEpOw0KICAgICAgICB0aGlzLmFydGlzdERhdGEudGltZWxpbmUgPSByZXNwb25zZS50aW1lbGluZTsNCiAgICAgICAgdGhpcy5hcnRpc3REYXRhLm9sZGVzdCA9IHJlc3BvbnNlLm9sZGVzdDsNCiAgICAgICAgdGhpcy5hcnRpc3REYXRhLm5ld2VzdCA9IHJlc3BvbnNlLm5ld2VzdDsNCiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTsNCiAgICAgICAgdGhpcy50aW1lbGluZVJlYWR5ID0gdHJ1ZTsNCiAgICAgIH0NCiAgICB9LA0KICAgIHN1bVRvcCh0eXBlKSB7DQogICAgICBsZXQgc3VtID0gMDsNCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hcnRpc3REYXRhLnRvcFNvbmdzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIHN1bSArPSB0aGlzLmFydGlzdERhdGEudG9wU29uZ3NbaV1bdHlwZV07DQogICAgICB9DQogICAgICByZXR1cm4gc3VtIC8gdGhpcy5hcnRpc3REYXRhLnRvcFNvbmdzLmxlbmd0aDsNCiAgICB9LA0KICAgIGNsZWFuR3JhcGhEYXRhKGJhcnMpIHsNCiAgICAgIGxldCBncmFwaERhdGEgPSBbXTsNCiAgICAgIGZvciAobGV0IGkgPSBiYXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQogICAgICAgIGdyYXBoRGF0YS5wdXNoKHt2YWx1ZTogYmFyc1tpXSwgdGFnOiBiYXJzW2ldfSk7DQogICAgICB9DQogICAgICByZXR1cm4gZ3JhcGhEYXRhOw0KICAgIH0sDQogICAgcmV2ZXJzZShhcnIpIHsNCiAgICAgIGxldCBuZXdBcnIgPSBbXTsNCiAgICAgIGZvciAobGV0IGkgPSBhcnIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsNCiAgICAgICAgbmV3QXJyLnB1c2goYXJyW2ldKTsNCiAgICAgIH0NCiAgICAgIHJldHVybiBuZXdBcnI7DQogICAgfSwNCiAgICBhc3luYyBwcm9jZXNzVHJhY2tzKCkgeyANCiAgICAgIGxldCBpZHMgPSB0aGlzLmFydGlzdERhdGEudHJhY2tzLm1hcCh2YWx1ZSA9PiB2YWx1ZS5pZCk7DQogICAgICBsZXQgYXZlcmFnZXMgPSB7dmFsZW5jZTogMCwgZGFuY2VhYmlsaXR5OiAwLCBlbmVyZ3k6IDB9Ow0KICAgICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhhdmVyYWdlcyk7DQoNCiAgICAgIHdoaWxlIChpZHMubGVuZ3RoID4gMCkgew0KICAgICAgICBsZXQgbmV3SWRzID0gaWRzLnNwbGljZSgwLCA1MCk7DQogICAgICAgIGxldCBhdWRpb0ZlYXR1cmVzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldEF1ZGlvRmVhdHVyZXNGb3JUcmFja3MnLCBuZXdJZHMpOw0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGF1ZGlvRmVhdHVyZXMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGtleXMubGVuZ3RoOyBqKyspIHsNCiAgICAgICAgICAgIGF2ZXJhZ2VzW2tleXNbal1dICs9IGF1ZGlvRmVhdHVyZXNbaV1ba2V5c1tqXV07DQogICAgICAgICAgICB0aGlzLmF1ZGlvRmVhdHVyZXNHcmFwaHNba2V5c1tqXV1bTWF0aC5mbG9vcihhdWRpb0ZlYXR1cmVzW2ldW2tleXNbal1dICogMTApXSArPSAxOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgZm9yICggbGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykgew0KICAgICAgICBhdmVyYWdlc1trZXlzW2ldXSA9IGF2ZXJhZ2VzW2tleXNbaV1dIC8gdGhpcy5hcnRpc3REYXRhLnRyYWNrcy5sZW5ndGg7DQogICAgICAgIHRoaXMuYXJ0aXN0RGF0YVtrZXlzW2ldXSA9IGF2ZXJhZ2VzW2tleXNbaV1dOw0KICAgICAgfQ0KICAgICAgdGhpcy5hdWRpb0ZlYXR1cmVzUmVhZHkgPSB0cnVlOw0KICAgIH0sDQogICAgYXN5bmMgZ2V0VG9wU29uZ3MoKSB7DQogICAgICB0aGlzLmFydGlzdERhdGEudG9wU29uZ3MgPSBhd2FpdCB0aGlzLmFydGlzdFRvcFRyYWNrcyh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpOw0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmFydGlzdERhdGEudG9wU29uZ3MubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICB0aGlzLmFydGlzdERhdGEudG9wU29uZ3NbaV0uaW1hZ2UgPSB0aGlzLmFydGlzdERhdGEudG9wU29uZ3NbaV0uYWxidW0uaW1hZ2VzWzBdLnVybDsNCiAgICAgICAgfSBjYXRjaChlcnJvcikgew0KICAgICAgICAgIHRoaXMuYXJ0aXN0RGF0YS50b3BTb25nc1tpXS5pbWFnZSA9ICIiOw0KICAgICAgICB9DQogICAgICB9DQogICAgICB0aGlzLnRvcFRyYWNrc1JlYWR5ID0gdHJ1ZTsNCiAgICB9LA0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHRvcFRyYWNrcygpIHsNCiAgICAgIGlmICh0aGlzLnRvcFRyYWNrc1JlYWR5KSB7DQogICAgICAgIHJldHVybiB0aGlzLmFydGlzdERhdGEudG9wU29uZ3Muc2xpY2UoMCwgMTApOw0KICAgICAgfQ0KICAgICAgcmV0dXJuIFtdOw0KICAgIH0sDQogICAgb2xkZXN0TGlrZWQoKSB7DQogICAgICBsZXQgbW9udGggPSB0aGlzLm9sZGVzdFRyYWNrc1swXS5tb250aDsNCiAgICAgIGxldCBtb250aHMgPSBbIkphbnVhcnkiLCAiRmVicnVhcnkiLCAiTWFyY2giLCAiQXByaWwiLCAiTWF5IiwgIkp1bmUiLCAiSnVseSIsICJBdWd1c3QiLCAiU2VwdGVtYmVyIiwgIk9jdG9iZXIiLCAiTm92ZW1iZXIiLCAiRGVjZW1iZXIiXTsNCiAgICAgIGxldCBub3cgPSBuZXcgRGF0ZSgpOw0KICAgICAgbGV0IG5vd01vbnRoID0gbm93LmdldE1vbnRoKCk7DQogICAgICBsZXQgeWVhciA9IDA7DQogICAgICBub3dNb250aCAtPSBtb250aDsNCiAgICAgIG5vd01vbnRoIC09IDE7DQogICAgICB3aGlsZSAobm93TW9udGggPCAwKSB7DQogICAgICAgICAgeWVhciArPSAxOw0KICAgICAgICAgIG5vd01vbnRoID0gMTIgKyBub3dNb250aDsNCiAgICAgIH0gDQogICAgICBsZXQgcmV0dXJuWWVhciA9IChub3cuZ2V0RnVsbFllYXIoKSAtIHllYXIpOw0KICAgICAgcmV0dXJuIG1vbnRoc1tub3dNb250aF0gKyAiLCAiICsgcmV0dXJuWWVhcjsNCiAgICB9LA0KICAgIGluaWNpYWxpemVkKCkgew0KICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmluaWNpYWxpemVkOw0KICAgIH0sDQogICAgcHJvZ3Jlc3MoKSB7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucHJvZ3Jlc3M7DQogICAgfSwNCiAgICBub3RTYXZlZCgpIHsNCiAgICAgIGlmICghdGhpcy5wcm9ncmVzcy50cmFja3MpDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgIGlmICghKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCBpbiB0aGlzLiRzdG9yZS5zdGF0ZS5hcnRpc3RzKSkNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXJ0aXN0c1t0aGlzLiRyb3V0ZS5wYXJhbXMuaWRdLnRyYWNrcy5sZW5ndGggPT0gMDsNCiAgICB9LA0KICAgIHNvbmdzU2F2ZWQoKSB7DQogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmlkIGluIHRoaXMuJHN0b3JlLnN0YXRlLmFydGlzdHMpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmFydGlzdHNbdGhpcy4kcm91dGUucGFyYW1zLmlkXS50cmFja3MubGVuZ3RoICsgIiBTb25ncyBMaWtlZCI7DQogICAgICB9DQogICAgICByZXR1cm4gIiI7DQogICAgfSwNCiAgICBkYXRlc0FkZGVkKCkgew0KICAgICAgaWYgKCF0aGlzLnRpbWVsaW5lUmVhZHkpDQogICAgICAgIHJldHVybiBbXTsNCiAgICAgIHJldHVybiB0aGlzLmNsZWFuR3JhcGhEYXRhKHRoaXMuYXJ0aXN0RGF0YS50aW1lbGluZSk7DQogICAgfSwNCiAgICBvbGRlc3RUcmFja3MoKSB7DQogICAgICBpZiAoIXRoaXMudGltZWxpbmVSZWFkeSkNCiAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgcmV0dXJuIHRoaXMuYXJ0aXN0RGF0YS5vbGRlc3Q7DQogICAgfSwNCiAgICBuZXdlc3RUcmFja3MoKSB7DQogICAgICBpZiAoIXRoaXMudGltZWxpbmVSZWFkeSkNCiAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgcmV0dXJuIHRoaXMucmV2ZXJzZSh0aGlzLmFydGlzdERhdGEubmV3ZXN0KTsNCiAgICB9LA0KICAgIGF1ZGlvRmVhdHVyZXMoKSB7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXVkaW9GZWF0dXJlczsNCiAgICB9LA0KICAgIG5vbmUoKSB7DQogICAgICBpZiAodGhpcy5hdWRpb0ZlYXR1cmVzUmVhZHkpIHsNCiAgICAgICAgaWYgKHRoaXMuYXJ0aXN0RGF0YS50cmFja3MubGVuZ3RoID09IDApIHsNCiAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0sDQogICAgbm9uZVRpbWVsaW5lKCkgew0KICAgICAgaWYgKHRoaXMudGltZWxpbmVSZWFkeSkgew0KICAgICAgICBpZiAodGhpcy5hcnRpc3REYXRhLnRpbWVsaW5lLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9LA0KICAgIGdlbnJlc0NvbXB1dGVkKCkgew0KICAgICAgaWYgKHRoaXMuYXJ0aXN0RGF0YSAhPSBudWxsKQ0KICAgICAgICByZXR1cm4gdGhpcy5hcnRpc3REYXRhLmdlbnJlcy5zbGljZSgwLCAxMCk7DQogICAgICByZXR1cm4gW107DQogICAgfSwNCiAgfSwgIA0KICBhc3luYyBjcmVhdGVkKCkgew0KICAgIHdpbmRvdy5zY3JvbGwoew0KICAgICAgdG9wOiAwLA0KICAgICAgYmVoYXZpb3I6ICdhdXRvJw0KICAgIH0pOw0KICAgIGlmICghdGhpcy5pbmljaWFsaXplZCkNCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvbG9naW4iKTsNCiAgICB0aGlzLmFydGlzdERhdGEgPSBhd2FpdCB0aGlzLmFydGlzdEFuYWx5c2lzKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7DQogICAgdGhpcy5nZXRUb3BTb25ncygpOw0KICAgIGlmICh0aGlzLnByb2dyZXNzLnRyYWNrcykgew0KICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5hcnRpc3RUcmFja3ModGhpcy5hcnRpc3REYXRhKTsNCiAgICAgIHRoaXMuYXJ0aXN0RGF0YS50cmFja3MgPSByZXNwb25zZTsNCiAgICAgIHRoaXMucHJvY2Vzc1RyYWNrcygpOw0KICAgICAgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmFydGlzdFRpbWVsaW5lKHRoaXMuYXJ0aXN0RGF0YSk7DQogICAgICB0aGlzLmFydGlzdERhdGEudGltZWxpbmUgPSByZXNwb25zZS50aW1lbGluZTsNCiAgICAgIHRoaXMuYXJ0aXN0RGF0YS5vbGRlc3QgPSByZXNwb25zZS5vbGRlc3Q7DQogICAgICB0aGlzLmFydGlzdERhdGEubmV3ZXN0ID0gcmVzcG9uc2UubmV3ZXN0Ow0KICAgICAgdGhpcy50aW1lbGluZVJlYWR5ID0gdHJ1ZTsNCiAgICB9DQogICAgZWxzZSB7DQogICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwodGhpcy5jaGVja3RyYWNrcywgMjAwMCk7DQogICAgfSAgDQogIH0NCn0NCi8qDQoNCiovDQo="},{"version":3,"sources":["ArtistAnalysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ArtistAnalysis.vue","sourceRoot":"src/views/Analysis","sourcesContent":["<template>\r\n  <div id=\"main-flex\" class=\"artistanalysis\">\r\n    <NavBar/>    \r\n    <div id=\"main\">\r\n      <ArtistHeader @changeTab=\"changeTab\" :tracksLoaded=\"timelineReady\" :artistData=\"artistData\"/>\r\n      <div class=\"page\" id=\"overview\" v-if=\"tab == 0\">\r\n        <h1 class=\"section-title\">Artist Overview</h1>\r\n        <div class=\"section\">\r\n\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <!-- Popularity -->\r\n              <!-- Followers -->\r\n              \r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <h1 class=\"section-title\">Top Tracks</h1>\r\n        <div class=\"section\">\r\n          <!-- Top Tracks -->\r\n          <!-- Track List -->\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"page\" id=\"likedtracks\" v-if=\"tab == 1\">\r\n        <h1 class=\"section-title\">Liked Tracks</h1>\r\n        <div class=\"section\">\r\n          \r\n        </div>\r\n\r\n        <h1 class=\"section-title\">Characteristics</h1>\r\n        <div class=\"section\">\r\n          \r\n        </div>\r\n\r\n        <h1 class=\"section-title\">Timeline</h1>\r\n        <div class=\"section\">\r\n          \r\n        </div>\r\n\r\n        <h1 class=\"section-title\">Playlists</h1>\r\n        <div class=\"section\">\r\n          \r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n      <div class=\"page\" id=\"comparison\" v-if=\"tab == 2\">\r\n\r\n        <h1 class=\"section-title\">Percentiles</h1>\r\n        <div class=\"section\">\r\n          \r\n        </div>\r\n\r\n        <h1 class=\"section-title\">Simular</h1>\r\n        <div class=\"section\">\r\n          \r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Progress v-if=\"inicialized && progress.processed < progress.total\"/>\r\n\r\n<!-- \r\n      <div class=\"windows\">\r\n        \r\n        <div class=\"window\" :style=\"{'--delay': 0}\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" :style=\"{backgroundImage: 'url(\\'' + artistData.image + '\\')'}\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">{{artistData.name}}</h1>\r\n                <h2>{{Math.round(artistData.popularity)}} / 100 Popularity</h2>\r\n                <h2>{{formatNumber(artistData.followers)}} Followers</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': 1}\" v-if=\"progress.tracks\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" class=\"library\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">Liked Songs:</h1>\r\n                <h2 v-if=\"timelineReady && !noneTimeline\">First Liked: {{oldestLiked}}</h2>\r\n                <h2 v-if=\"progress.tracks && !noneTimeline\">{{songsSaved}}</h2>\r\n                <h2 v-if=\"!progress.tracks\">Finding Saved Songs...</h2>\r\n                <h4 id=\"nosongs\" v-if=\"noneTimeline\">No Songs Liked</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <FeaturedTracks type=\"track\" secondary=\"popularity\" :style=\"{'--delay': + 4}\" class=\"featuredtracks\" :saved=\"false\" :none=\"false\" :override=\"topTracksReady\" title=\"Artist Top Tracks:\" :ids=\"topTracks\"/>\r\n\r\n        <FeaturedTracks type=\"genre\" secondary=\"\" :style=\"{'--delay': + 5}\" class=\"featuredtracks\" :saved=\"false\" :none=\"false\" :override=\"artistData != null\" title=\"Artist Genres:\" :ids=\"genresComputed\"/>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 2}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Top Track's Characteristics:</h3>\r\n          <div v-if=\"topTracksReady\">\r\n            <div>\r\n              <PercentBar title=\"Happiness\" :percent=\"sumTop('valence')\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"sumTop('energy')\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"sumTop('danceability')\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <Timeline :none=\"noneTimeline\" :small=\"true\" :override=\"timelineReady\" title=\"When You Liked Tracks:\" instructions=\"\" :max=\"-1\" :delay=\"3\" :bars=\"datesAdded\" y_axis=\"Number of Songs\" :color=\"{red: 74, green: 189, blue: 180}\"/>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 6}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Liked Track's Characteristics:</h3>\r\n          <div v-if=\"audioFeaturesReady\">\r\n            <div v-if=\"!none\">\r\n              <PercentBar title=\"Happiness\" :percent=\"artistData.valence\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"artistData.energy\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"artistData.danceability\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n            <h4 v-else>No Songs Liked</h4>\r\n          </div>\r\n          <Loading class=\"displace\" v-else/>\r\n        </div>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracks\" title=\"Liked Tracks Happiness:\" :delay=\"7\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.valence)\" max_tag=\"Happy\" min_tag=\"Sad\" y_axis=\"Number of Songs\" :color=\"audioFeatures.valence.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracks\" title=\"Liked Tracks Energy:\" :delay=\"8\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.energy)\" max_tag=\"Hyper\" min_tag=\"Peaceful\" y_axis=\"Number of Songs\" :color=\"audioFeatures.energy.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracks\" title=\"Liked Tracks Danceability:\" :delay=\"9\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.danceability)\" max_tag=\"Let's dance!\" min_tag=\"Couch Potato\" y_axis=\"Number of Songs\" :color=\"audioFeatures.danceability.color\"/>\r\n\r\n        <FeaturedTracks type=\"track\" secondary=\"date\" :style=\"{'--delay': + 11}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"Recently Liked Tracks:\" :ids=\"newestTracks\"/>\r\n\r\n        <FeaturedTracks type=\"track\" secondary=\"date\" :style=\"{'--delay': + 10}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"Oldest Liked Tracks:\" :ids=\"oldestTracks\"/>\r\n\r\n        \r\n        \r\n\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios');\r\n// @ is an alias to /src\r\nimport NavBar from '@/components/Navigation/NavBar.vue'\r\n// import Loading from '@/components/General/Loading.vue'\r\n// import Timeline from '@/components/Windows/Timeline.vue'\r\n// import FeaturedTracks from '@/components/Windows/FeaturedTracks.vue'\r\n// import PercentBar from '@/components/Analysis/PercentBar.vue'\r\n// import Graph from '@/components/Windows/Graph.vue'\r\n\r\nimport Progress from '@/components/General/Progress.vue'\r\nimport ArtistHeader from '@/components/Artist/ArtistHeader.vue'\r\n\r\nexport default {\r\n  name: 'artistanalysis',\r\n  components: {\r\n      NavBar,\r\n      // Loading,\r\n      // Timeline,\r\n      // FeaturedTracks,\r\n      // PercentBar,\r\n      // Graph,\r\n      ArtistHeader,\r\n      Progress\r\n  },\r\n  data() {\r\n      return {\r\n        artistData: null,\r\n        libraryLoaded: false,\r\n        interval: null,\r\n        timelineReady: false,\r\n        audioFeaturesReady: false,\r\n        topTracksReady: false,\r\n        audioFeaturesGraphs: {\r\n          valence: [0,0,0,0,0,0,0,0,0,0],\r\n          energy: [0,0,0,0,0,0,0,0,0,0],\r\n          danceability: [0,0,0,0,0,0,0,0,0,0],\r\n        },\r\n        tab: 0,\r\n      }\r\n  },\r\n  methods: {\r\n    changeTab(val) {\r\n      this.tab = val;\r\n    },\r\n    async artistAnalysis(id) {\r\n        let artist = await this.$store.dispatch(\"getArtist\", id);\r\n        let discogs = await axios.get('/api/discogs/artist/' + artist.name);\r\n        console.log(discogs.data);\r\n        let artistObject = await this.processArtist(artist, discogs.data);\r\n        console.log(artistObject);\r\n        return artistObject;\r\n    },\r\n    async processArtist(artist, discogs) {\r\n      artist.href = artist.external_urls.spotify;\r\n      artist.followers = artist.followers.total;\r\n      artist.image = artist.images[0].url;\r\n      if ('images' in discogs && discogs.images.length > 0)\r\n        artist.image2 = discogs.images[0].resource_url;\r\n      if ('members' in discogs)\r\n        artist.members = discogs.members;\r\n      if ('namevariations' in discogs);\r\n        artist.namevariations = discogs.namevariations;\r\n      if ('profile' in discogs);\r\n        artist.profile = discogs.profile;\r\n      if ('realname' in discogs);\r\n        artist.realname = discogs.realname;\r\n      if ('urls' in discogs);\r\n        artist.urls = discogs.url;\r\n      return artist;\r\n    },\r\n    async artistTracks(artistData) {\r\n        if (!(artistData.id in this.$store.state.artists))\r\n            return [];\r\n        let ids = this.$store.state.artists[artistData.id].tracks;\r\n        let tracks = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n            tracks.push(this.$store.state.tracks[ids[i]]);\r\n        }\r\n        return tracks;\r\n    },\r\n    async artistTimeline(artistData) {\r\n        if (!(artistData.id in this.$store.state.artists))\r\n            return {timeline: [], oldest: [], newest: []};\r\n        let artistObject = artistData;\r\n        let timeline = [];\r\n        let tracks = [];\r\n        let now = new Date();\r\n        let nowTime = now.getTime();\r\n        const MONTH = 2626560000;\r\n        let artistSaved = this.$store.state.artists[artistObject.id];\r\n        for (let i = 0; i < artistSaved.tracks.length; i++) {\r\n            let date = new Date(this.$store.state.tracks[artistSaved.tracks[i]].date);\r\n            let dateTime = date.getTime();\r\n            let diff = nowTime - dateTime;\r\n            let diffMonth = Math.floor(diff / MONTH);\r\n            tracks.push({id: artistSaved.tracks[i], time: dateTime, month: diffMonth});\r\n            if (diffMonth >= timeline.length) {\r\n                while (diffMonth >= timeline.length) {\r\n                    timeline.push(0);\r\n                }\r\n            }\r\n            timeline[diffMonth] += 1;\r\n        }\r\n        tracks.sort((a, b) => (a.time > b.time) ? 1 : -1);\r\n        let num = tracks.length;\r\n        if (tracks.length > 10) \r\n          num = 10;\r\n        let oldest = tracks.slice(0, num);\r\n        let newest = tracks.slice(tracks.length - num, tracks.length);\r\n        while (timeline.length < this.$store.state.dateAdded.length) {\r\n            timeline.push(0);\r\n        }\r\n        return {timeline: timeline, oldest: oldest, newest: newest};\r\n    },\r\n    async artistTopTracks(id) {\r\n        let tracks = await this.$store.dispatch('getArtistTopTracks', id);\r\n        let ids = [];\r\n        for (let i = 0; i < tracks.length; i++) {\r\n            tracks[i].album.href = tracks[i].album.external_urls.spotify;\r\n            tracks[i].href = tracks[i].external_urls.spotify;\r\n            if (tracks[i].album.images.length > 1)\r\n                tracks[i].image = tracks[i].album.images[0].url;\r\n            ids.push(tracks[i].id);\r\n        }\r\n        let audioFeatures = await this.$store.dispatch('getAudioFeaturesForTracks', ids);\r\n        for (let i = 0; i < tracks.length; i++) {\r\n            tracks[i].valence = audioFeatures[i].valence;\r\n            tracks[i].energy = audioFeatures[i].energy;\r\n            tracks[i].danceability = audioFeatures[i].danceability;\r\n        }\r\n        return tracks;\r\n    },\r\n    cleanGraphDataForwards(bars) {\r\n      let graphData = [];\r\n      for (let i = 0; i < bars.length; i++) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    formatNumber(num) {\r\n      let millions = Math.floor(num / 1000000);\r\n      let thousands = Math.floor(num / 1000) % 1000;\r\n      let remainder = num % 1000;\r\n      let zeros = \"\";\r\n      let zeros2 = \"\";\r\n      if (thousands < 100)\r\n          zeros2 += \"0\"\r\n      if (thousands < 10)\r\n          zeros2 += \"0\"\r\n      if (remainder < 100)\r\n          zeros += \"0\"\r\n      if (remainder < 10)\r\n          zeros += \"0\"\r\n      if (millions > 0)\r\n        return millions + \",\" + zeros2 + thousands + \",\" + zeros + remainder;\r\n      if (thousands > 0) \r\n          return thousands + \",\" + zeros + remainder;\r\n      return remainder;\r\n    },\r\n    async checktracks() {\r\n      if (this.progress.tracks) {\r\n        let response = await this.artistTracks(this.artistData);\r\n        this.artistData.tracks = response;\r\n        this.processTracks();\r\n        response = await this.artistTimeline(this.artistData);\r\n        this.artistData.timeline = response.timeline;\r\n        this.artistData.oldest = response.oldest;\r\n        this.artistData.newest = response.newest;\r\n        clearInterval(this.interval);\r\n        this.timelineReady = true;\r\n      }\r\n    },\r\n    sumTop(type) {\r\n      let sum = 0;\r\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\r\n        sum += this.artistData.topSongs[i][type];\r\n      }\r\n      return sum / this.artistData.topSongs.length;\r\n    },\r\n    cleanGraphData(bars) {\r\n      let graphData = [];\r\n      for (let i = bars.length - 1; i >= 0; i--) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    reverse(arr) {\r\n      let newArr = [];\r\n      for (let i = arr.length - 1; i >= 0; i--) {\r\n        newArr.push(arr[i]);\r\n      }\r\n      return newArr;\r\n    },\r\n    async processTracks() { \r\n      let ids = this.artistData.tracks.map(value => value.id);\r\n      let averages = {valence: 0, danceability: 0, energy: 0};\r\n      let keys = Object.keys(averages);\r\n\r\n      while (ids.length > 0) {\r\n        let newIds = ids.splice(0, 50);\r\n        let audioFeatures = await this.$store.dispatch('getAudioFeaturesForTracks', newIds);\r\n        for (let i = 0; i < audioFeatures.length; i++) {\r\n          for (let j = 0; j < keys.length; j++) {\r\n            averages[keys[j]] += audioFeatures[i][keys[j]];\r\n            this.audioFeaturesGraphs[keys[j]][Math.floor(audioFeatures[i][keys[j]] * 10)] += 1;\r\n          }\r\n        }\r\n      }\r\n      for ( let i = 0; i < keys.length; i++) {\r\n        averages[keys[i]] = averages[keys[i]] / this.artistData.tracks.length;\r\n        this.artistData[keys[i]] = averages[keys[i]];\r\n      }\r\n      this.audioFeaturesReady = true;\r\n    },\r\n    async getTopSongs() {\r\n      this.artistData.topSongs = await this.artistTopTracks(this.$route.params.id);\r\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\r\n        try {\r\n          this.artistData.topSongs[i].image = this.artistData.topSongs[i].album.images[0].url;\r\n        } catch(error) {\r\n          this.artistData.topSongs[i].image = \"\";\r\n        }\r\n      }\r\n      this.topTracksReady = true;\r\n    },\r\n  },\r\n  computed: {\r\n    topTracks() {\r\n      if (this.topTracksReady) {\r\n        return this.artistData.topSongs.slice(0, 10);\r\n      }\r\n      return [];\r\n    },\r\n    oldestLiked() {\r\n      let month = this.oldestTracks[0].month;\r\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n      let now = new Date();\r\n      let nowMonth = now.getMonth();\r\n      let year = 0;\r\n      nowMonth -= month;\r\n      nowMonth -= 1;\r\n      while (nowMonth < 0) {\r\n          year += 1;\r\n          nowMonth = 12 + nowMonth;\r\n      } \r\n      let returnYear = (now.getFullYear() - year);\r\n      return months[nowMonth] + \", \" + returnYear;\r\n    },\r\n    inicialized() {\r\n      return this.$store.state.inicialized;\r\n    },\r\n    progress() {\r\n      return this.$store.state.progress;\r\n    },\r\n    notSaved() {\r\n      if (!this.progress.tracks)\r\n        return false;\r\n      if (!(this.$route.params.id in this.$store.state.artists))\r\n        return true;\r\n      return this.$store.state.artists[this.$route.params.id].tracks.length == 0;\r\n    },\r\n    songsSaved() {\r\n      if (this.$route.params.id in this.$store.state.artists) {\r\n        return this.$store.state.artists[this.$route.params.id].tracks.length + \" Songs Liked\";\r\n      }\r\n      return \"\";\r\n    },\r\n    datesAdded() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.cleanGraphData(this.artistData.timeline);\r\n    },\r\n    oldestTracks() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.artistData.oldest;\r\n    },\r\n    newestTracks() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.reverse(this.artistData.newest);\r\n    },\r\n    audioFeatures() {\r\n      return this.$store.state.audioFeatures;\r\n    },\r\n    none() {\r\n      if (this.audioFeaturesReady) {\r\n        if (this.artistData.tracks.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    noneTimeline() {\r\n      if (this.timelineReady) {\r\n        if (this.artistData.timeline.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    genresComputed() {\r\n      if (this.artistData != null)\r\n        return this.artistData.genres.slice(0, 10);\r\n      return [];\r\n    },\r\n  },  \r\n  async created() {\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'auto'\r\n    });\r\n    if (!this.inicialized)\r\n      this.$router.push(\"/login\");\r\n    this.artistData = await this.artistAnalysis(this.$route.params.id);\r\n    this.getTopSongs();\r\n    if (this.progress.tracks) {\r\n      let response = await this.artistTracks(this.artistData);\r\n      this.artistData.tracks = response;\r\n      this.processTracks();\r\n      response = await this.artistTimeline(this.artistData);\r\n      this.artistData.timeline = response.timeline;\r\n      this.artistData.oldest = response.oldest;\r\n      this.artistData.newest = response.newest;\r\n      this.timelineReady = true;\r\n    }\r\n    else {\r\n      this.interval = setInterval(this.checktracks, 2000);\r\n    }  \r\n  }\r\n}\r\n/*\r\n\r\n*/\r\n</script>\r\n\r\n<style scoped>\r\nh1.section-title {\r\n  font-size: 1.3em;\r\n  color: rgba(255, 255, 255, 0.815);\r\n  font-weight: lighter;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.featuredtracks {\r\n  --delay: 0;\r\n  animation: slide-up .5s ease calc(var(--delay) * .1s), hide calc(var(--delay) * .1s);\r\n}\r\n.library {\r\n  background-image: url('../../assets/icons/heart.svg');\r\n}\r\n#nosongs {\r\n  margin-bottom: 10px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n.nomargin {\r\n  margin-bottom: 0px;\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  #artist-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .fit {\r\n    width: calc(100% - 90px) !important;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  .windows {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  #track-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 1.2em !important;\r\n    \r\n  }\r\n\r\n  h2 {\r\n      font-size: .8em !important;\r\n      margin: 2px !important;\r\n  }\r\n\r\n  h4 {\r\n    font-size: .9em !important;\r\n  }\r\n\r\n}\r\n\r\nh4 {\r\n  margin-bottom: 0px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n\r\n#artist-image {\r\n  display: block;\r\n  width: 100px;\r\n  height: 100px;\r\n  background-size: auto 100%;\r\n  background-position: center center;\r\n  margin-right: 20px;\r\n}\r\n\r\n\r\nh1 {\r\n  font-size: 1.7em;\r\n  \r\n  display: block;\r\n  color: white;\r\n  text-align: left;\r\n  margin: 0px 0px;\r\n  line-height: 30px;\r\n  display: block;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  margin-top: 3px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1em;\r\n  color: rgba(255, 255, 255, 0.568);\r\n  text-align: left;\r\n  margin: 0;\r\n  margin-top: 10px;\r\n  max-width: calc(100% - 5px);\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.fit {\r\n  display: block;\r\n  width: calc(100% - 120px);\r\n}\r\n\r\n.flex {\r\n  width: 100%;\r\n}\r\n\r\n</style>"]}]}