import "../../../src/components/VResponsive/VResponsive.sass"; // Mixins

import Measurable from '../../mixins/measurable'; // Utilities

import mixins from '../../util/mixins';
import { convertToUnit } from '../../util/helpers';
/* @vue/component */

export default mixins(Measurable).extend({
  name: 'v-responsive',
  props: {
    aspectRatio: [String, Number]
  },
  computed: {
    computedAspectRatio() {
      const aspectRatio = Number(this.aspectRatio);
      return !isNaN(aspectRatio) ? 1 / aspectRatio : undefined;
    },

    computedAspectRatioPercent() {
      if (this.computedAspectRatio == null) return undefined;
      return this.computedAspectRatio * 100;
    },

    contentAspectStyle() {
      if (this.computedAspectRatioPercent == null) return undefined;
      return {
        marginTop: convertToUnit(-1 * this.computedAspectRatioPercent, '%')
      };
    },

    sizerAspectStyle() {
      if (this.computedAspectRatioPercent == null) return undefined;
      return {
        paddingTop: convertToUnit(this.computedAspectRatioPercent, '%')
      };
    }

  },
  methods: {
    genContent() {
      return this.$createElement('div', {
        staticClass: 'v-responsive__sizer',
        style: this.sizerAspectStyle
      }, [this.$createElement('div', {
        staticClass: 'v-responsive__content',
        style: this.contentAspectStyle
      }, this.$slots.default)]);
    }

  },

  render(h) {
    return h('div', {
      staticClass: 'v-responsive',
      style: this.measurableStyles,
      on: this.$listeners
    }, [this.genContent()]);
  }

});
//# sourceMappingURL=VResponsive.js.map