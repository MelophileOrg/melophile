{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Graphs\\LineGraphPercent.vue?vue&type=style&index=0&id=33d1be96&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Graphs\\LineGraphPercent.vue","mtime":1574381434145},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240333000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJhcmdyYXBocGVyY2VudCB7DQoNCn0NCg=="},{"version":3,"sources":["LineGraphPercent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;;AAEA","file":"LineGraphPercent.vue","sourceRoot":"src/components/Graphs","sourcesContent":["<template>\r\n  <div class=\"linegraphpercent\">\r\n    <canvas :id=\"'line-graph-percent-' + title\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from 'chart.js';\r\n\r\nexport default {\r\n    name: 'linegraph',\r\n    props: {\r\n        title: String,\r\n        data: Array,\r\n        xAxis: String,\r\n        yAxis: String,\r\n    },\r\n    methods: {\r\n        createData() {\r\n            let chartData = {\r\n                type: 'line',\r\n                data: {\r\n                    datasets: [\r\n                        {\r\n                            data: this.values,\r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    title: {\r\n                        display: true,\r\n                        text: this.title,\r\n                    },\r\n                    scales: {\r\n                        xAxis: [{\r\n                            id: this.xAxis,\r\n                            type: \"linear\",\r\n                            position: \"bottom\",\r\n                            ticks: {\r\n                                min: 0,\r\n                                max: 1,\r\n                                stepSize: .1,\r\n                                callback: function (value) {\r\n                                    return (value * 100).toFixed(0) + '%';\r\n                                },\r\n                                sampleSize: 11,\r\n                            },\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: this.xAxis,\r\n                            },\r\n                            autoSkipPadding: 5,\r\n                        }],\r\n                        yAxis: [{\r\n                            id: this.yAxis,\r\n                            type: \"linear\",\r\n                            position: \"left\",\r\n                            stepSize: 1,\r\n                            ticks: {\r\n                                min: 0,\r\n                            },\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: this.yAxis,\r\n                            },\r\n                            autoSkipPadding: 5,\r\n                        }]\r\n                    }\r\n                }\r\n            }\r\n            return chartData;\r\n        },\r\n        createChart(chartId, chartData) {\r\n            const ctx = document.getElementById(chartId);\r\n            const myChart = new Chart(ctx, {\r\n                type: chartData.type,\r\n                data: chartData.data,\r\n                options: chartData.options,\r\n            });\r\n            console.log(myChart);\r\n        }\r\n    },\r\n    computed: {\r\n        labels() {\r\n            return this.data.map(bar => bar.label);\r\n        },\r\n        values() {\r\n            return this.data.map(bar => bar.value);\r\n        },\r\n        max() {\r\n            let max = 0;\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                if (this.data[i].value > max) \r\n                    max = this.data[i].value;\r\n            }\r\n            return max;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.createChart('line-graph-percent-' + this.title, this.createData);\r\n    }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.bargraphpercent {\r\n\r\n}\r\n</style>"]}]}