{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Graphs\\LineGraphPercent.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Graphs\\LineGraphPercent.vue","mtime":1574453508597},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240333000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi53cmFwIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQouY2FudmFzV3JhcCB7DQogICAgZGlzcGxheTogYmxvY2s7DQogICAgaGVpZ2h0OiAxMS44dnc7DQogICAgbWFyZ2luLXRvcDogMC4xOHZ3Ow0KfQ0KDQouY2FudmFzew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIG1hcmdpbjogYXV0bzsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgei1pbmRleDogMTAwOw0KfQ0K"},{"version":3,"sources":["LineGraphPercent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"LineGraphPercent.vue","sourceRoot":"src/components/Graphs","sourcesContent":["<template>\r\n    <div class=\"LineGraphPercent wrap\">\r\n        <div class=\"canvasWrap\" :style=\"'height:'+height\">\r\n            <canvas :id=\"'line-graph-percent-' + title\" class=\"canvas\"></canvas>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"chart.js\";\r\n\r\nexport default {\r\n    name: \"LineGraphPercent\",\r\n    props: {\r\n        title: String,\r\n        data: Array,\r\n        xAxis: String,\r\n        yAxis: String,\r\n        height: Number,\r\n    },\r\n    //handle active element color\r\n    mounted: function() {\r\n        this.renderChart();\r\n        if (this.active) {\r\n            this.graph.config.data.datasets[0][\"pointBackgroundColor\"][\r\n                this.active - 1\r\n            ] = \"white\";\r\n            this.graph.update();\r\n        }\r\n    },\r\n    watch: {\r\n        //activate graph tooltip on element hover\r\n        current: function() {\r\n            if (this.tooltip) {\r\n                var activeElements = this.graph.tooltip._active;\r\n                var requestedElem = this.graph.getDatasetMeta(this.tooltip[0])\r\n                    .data[this.tooltip[1]];\r\n                for (var i = 0; i < activeElements.length; i++) {\r\n                    if (requestedElem._index == activeElements[i]._index) {\r\n                        activeElements.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                this.graph.tooltip._active = activeElements;\r\n                this.graph.tooltip.update(true);\r\n                this.graph.draw();\r\n                this.tooltip = null;\r\n            }\r\n            if (this.isHoverable()) {\r\n                var datasetIndex = 0;\r\n                var pointIndex = this.current.atomicNumber - 1;\r\n                if (this.trend === \"Atomic Radius\") {\r\n                    if (\r\n                        this.current.atomicNumber > 70 &&\r\n                        this.current.atomicNumber < 84\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 14;\r\n                    }\r\n                } else if (this.trend === \"Electronegativity\") {\r\n                    if (\r\n                        [3, 4, 5, 6, 7, 8, 9].includes(\r\n                            this.current.atomicNumber\r\n                        )\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 2;\r\n                    } else if (\r\n                        [11, 12, 13, 14, 15, 16, 17].includes(\r\n                            this.current.atomicNumber\r\n                        )\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 3;\r\n                    } else if (\r\n                        this.current.atomicNumber > 18 &&\r\n                        this.current.atomicNumber < 86\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 4;\r\n                    } else if (this.current.atomicNumber > 86) {\r\n                        var pointIndex = this.current.atomicNumber - 5;\r\n                    }\r\n                } else if (this.trend === \"Density\") {\r\n                    if (\r\n                        this.current.atomicNumber > 87 &&\r\n                        this.current.atomicNumber < 96\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 3;\r\n                    } else if (\r\n                        [96, 97, 98].includes(this.current.atomicNumber)\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 4;\r\n                    }\r\n                }\r\n                if (this.graph.tooltip._active == undefined)\r\n                    this.graph.tooltip._active = [];\r\n                var activeElements = this.graph.tooltip._active;\r\n                var requestedElem = this.graph.getDatasetMeta(datasetIndex)\r\n                    .data[pointIndex];\r\n                activeElements.push(requestedElem);\r\n                this.graph.tooltip._active = activeElements;\r\n                this.graph.tooltip.update(true);\r\n                this.graph.draw();\r\n                this.tooltip = [datasetIndex, pointIndex];\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            graph: null,\r\n            current: this.current,\r\n            tooltip: null,\r\n        };\r\n    },\r\n    methods: {\r\n        //updating chart to new trend\r\n        renderChart() {\r\n            var options = {\r\n                type: \"line\",\r\n                data: {\r\n                    labels: atomicNumbers,\r\n                    datasets: [\r\n                        {\r\n                            label: label,\r\n                            data: trendToGraph,\r\n                            backgroundColor: backgroundColor,\r\n                            borderColor: borderColor,\r\n                            pointBackgroundColor: pointBackgroundColor,\r\n                            borderWidth: 2.5,\r\n                            pointBorderWidth: 0.1,\r\n                            hitRadius: 5,\r\n                            pointRadius: 2.5,\r\n                            pointHoverRadius: 5\r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    layout: {\r\n                        padding: {\r\n                            left: 10,\r\n                            right: 10\r\n                        }\r\n                    },\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        displayColors: false,\r\n                        backgroundColor: \"rgba(0, 6, 20, 0.7)\",\r\n                        titleFontStyle: \"semi-bold\",\r\n                        titleFontFamily: \"'Open sans', sans-serif\",\r\n                        bodyFontFamily: \"'Open sans', sans-serif\",\r\n                        bodyFontColor: \"rgba(255, 255, 255, 0.7)\",\r\n                        xPadding: 10,\r\n                        yPadding: 10,\r\n                        cornerRadius: 0\r\n                    },\r\n                    scales: {\r\n                        xAxes: [\r\n                            {\r\n                                display: false\r\n                            }\r\n                        ],\r\n                        yAxes: [\r\n                            {\r\n                                display: false\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            };\r\n            var ctx = document\r\n                .getElementById(\"line-graph-percent-\" + this.title)\r\n                .getContext(\"2d\");\r\n            this.graph = new Chart(ctx, options);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.wrap {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n.canvasWrap {\r\n    display: block;\r\n    height: 11.8vw;\r\n    margin-top: 0.18vw;\r\n}\r\n\r\n.canvas{\r\n    width: 100%;\r\n    margin: auto;\r\n    height: 100%;\r\n    z-index: 100;\r\n}\r\n</style>"]}]}