{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\store\\actions.js","mtime":1574320098245},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/andre/Documents/GitHub/Spotify-Features/front-end/src/store/actions.js"],"names":["inicializeGetToken","context","authEndpoint","clientId","redirectUri","state","dev","scopes","access_token","window","location","join","inicializeParseToken","token","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","dispatch","inicializeSetToken","spotifyApi","setAccessToken","commit","loadLibrary","limit","offset","console","log","retrieveSavedTracks","payload","tracks","ids","map","track","id","audioFeatures","artistIds","i","length","date","added_at","features","j","artists","push","progress","processed","retrieveSavedArtists","Object","keys","values","sectionIds","splice","newArtists","concat","artistObject","genres","includes","artist","key","value","name","updateTimelines","now","Date","months","getFullYear","getMonth","month","processAudioFeatures","tempo","energy","danceability","banger","index","minchart","chart","maxchart","mode","retrieveTopCharts","genreTuples","entries","topGenres","sort","a","b","trackNum","slice","topGenreIds","genre","artistTuples","topArtists","topArtistIds","terms","topPlayed","time_range","topTracks","convertTrackObject","trackObject","album","images","image","url","convertArtistObject","generateGenre","genreObject","bangerCalc","getTrack","track_id","response","getTracks","track_ids","getArtist","getAlbum","getArtists","getArtistRelatedArtists","getPlaylists","getUserPlaylists","user","items","getPlaylist","playlistId","getTopTracks","getMyTopTracks","getTopArtists","getMyTopArtists","getRecentlyPlayed","getMyRecentlyPlayedTracks","getAudioFeaturesForTracks","audio_features","getAudioFeaturesForTrack","getAudioAnalysisForTrack","getRecomendations","getRecommendations","getSavedTracks","getMySavedTracks","total","getUser","inicialized","getMe","searchSpotify","search","query","getArtistTopTracks"],"mappings":"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","sourcesContent":["////////////////////////////////////////////////////////////////\r\n// INICIALIZATION //////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// None\r\nconst inicializeGetToken = (context) => {\r\n    const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n    const clientId = '42903eeb2bf943c4bd4903370f7a93f5';\r\n    let redirectUri = 'http://mymusictaste.org/redirect/';\r\n    if (context.state.dev)\r\n        redirectUri = 'http://localhost:8080/redirect/';\r\n    const scopes = [\r\n        'user-read-recently-played',\r\n        'user-top-read',\r\n        'user-library-read',\r\n        'user-read-email',\r\n        'playlist-read-private',\r\n    ];\r\n    if (!context.state.access_token) {\r\n        window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\r\n    }\r\n};\r\n// None\r\nconst inicializeParseToken = (context) => {\r\n    let token = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\r\n        if (item) {\r\n            let parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n    }, {});\r\n    context.dispatch('inicializeSetToken', token.access_token);\r\n};\r\n// Token\r\nconst inicializeSetToken = async (context, token) => {\r\n    await context.state.spotifyApi.setAccessToken(token);\r\n    await context.commit('setInicialized', true);\r\n    context.dispatch('getUser');\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// LOAD LIBRARY ////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\nconst loadLibrary = async (context) => {\r\n    await context.dispatch('retrieveSavedTracks', {limit: 50, offset: 0});\r\n    context.commit('averageAudioFeatureValues');\r\n    context.commit('averageMode');\r\n    await context.dispatch('retrieveTopCharts');\r\n    context.commit('setProgressTracks');\r\n    context.commit('setProgressArtists');\r\n    context.commit('setProgressGenres');\r\n    context.commit('setProgressCharts');\r\n    context.commit('setProgressTimelines');\r\n    console.log(context.state);\r\n};\r\nconst retrieveSavedTracks = async (context, payload) => {\r\n    let tracks = await context.dispatch('getSavedTracks', {limit: payload.limit, offset: payload.offset});\r\n    let ids = tracks.map(track => track.track.id);\r\n    let audioFeatures = await context.dispatch('getAudioFeaturesForTracks', ids);\r\n    let artistIds = {};\r\n    for (let i = 0; i < tracks.length; i++) {\r\n        if (tracks[i].track.id in context.state.tracks)\r\n            continue;\r\n        context.dispatch('updateTimelines', {date: tracks[i].added_at, features: audioFeatures[i]});\r\n        context.commit('pushTrack', await context.dispatch('convertTrackObject', {track: tracks[i].track, date: tracks[i].added_at}));\r\n        context.dispatch('processAudioFeatures', audioFeatures[i]);\r\n        for (let j = 0; j < tracks[i].track.artists.length; j++) {\r\n            if (tracks[i].track.artists[j].id in context.state.artists) {\r\n                context.commit('addTrackToArtist', {id: tracks[i].track.artists[j].id, track: tracks[i].track.id});\r\n            }\r\n            else {\r\n                if (!(tracks[i].track.artists[j].id in artistIds)) \r\n                    artistIds[tracks[i].track.artists[j].id] = [tracks[i].track.id];\r\n                else \r\n                    artistIds[tracks[i].track.artists[j].id].push(tracks[i].track.id);\r\n            }\r\n        }\r\n        context.commit('addProcessed');\r\n        console.log(context.state.progress.processed);\r\n    }\r\n    await context.dispatch('retrieveSavedArtists', artistIds);\r\n    if (tracks.length == payload.limit) {\r\n        await context.dispatch('retrieveSavedTracks', {limit: 50, offset: payload.offset + payload.limit});\r\n    }\r\n    return;\r\n};\r\nconst retrieveSavedArtists = async (context, payload) => {\r\n    let ids = Object.keys(payload);\r\n    let tracks = Object.values(payload);\r\n    let artists = [];\r\n    while (ids.length > 0) {\r\n        let sectionIds = ids.splice(0, 50);\r\n        let newArtists = await context.dispatch('getArtists', sectionIds);\r\n        artists = artists.concat(newArtists);\r\n    }\r\n    for (let i = 0; i < artists.length; i++) {\r\n        artists[i].tracks = tracks[i];\r\n        let artistObject = await context.dispatch('convertArtistObject', artists[i]);\r\n        context.commit('pushArtist', artistObject);\r\n        for (let j = 0; j < artists[i].genres.length; j++) {\r\n            if (artists[i].genres[j] in context.state.genres) {\r\n                if (!(context.state.genres[artists[i].genres[j]].artists.includes(artists[i].id)))\r\n                    context.commit('addArtistToGenre', {id: artists[i].genres[j], artist: artists[i].id});\r\n                context.commit('addGenreTrackNum', {key: artists[i].genres[j], value: tracks[i].length});\r\n                continue;\r\n            }\r\n            context.commit('pushGenre', await context.dispatch('generateGenre', {name: artists[i].genres[j], artists: [artists[i].id]}));\r\n        }\r\n    }\r\n};\r\nconst updateTimelines = async (context, payload) => {\r\n    let now = new Date();\r\n    let date = new Date(payload.date);\r\n    let months = (now.getFullYear() - date.getFullYear()) * 12;\r\n    months += now.getMonth();\r\n    months -= date.getMonth();\r\n    context.commit('addDateAddedTimeline', months);\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    for (let i = 0; i < keys.length; i++) {\r\n        context.commit('addAudioFeatureTimeline', {key: keys[i], month: months, value: payload.features[keys[i]]});\r\n    }\r\n};\r\nconst processAudioFeatures = async (context, payload) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    payload.banger = await context.dispatch('bangerCalc', {tempo: payload.tempo, energy: payload.energy, danceability: payload.danceability});\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let index = context.state.audioFeatures[keys[i]].minchart.length - 1;\r\n        if (index < 0) \r\n            index = 0;\r\n        if (context.state.audioFeatures[keys[i]].minchart.length < 25 || payload[keys[i]] < context.state.audioFeatures[keys[i]].minchart[index].value) {                \r\n            while (index > 0 && payload[keys[i]] < context.state.audioFeatures[keys[i]].minchart[index].value) {\r\n                index -= 1;\r\n            }\r\n            await context.commit('spliceAudioFeatureExtremes', {key: keys[i], chart: 'minchart', index: index, value: {id: payload.id, value: payload[keys[i]]}});\r\n        }\r\n        index = context.state.audioFeatures[keys[i]].maxchart.length - 1;\r\n        if (index < 0) \r\n            index = 0;\r\n        if (context.state.audioFeatures[keys[i]].maxchart.length < 25 || payload[keys[i]] > context.state.audioFeatures[keys[i]].maxchart[index].value) {\r\n            while (index > 0 && payload[keys[i]] > context.state.audioFeatures[keys[i]].maxchart[index].value)\r\n                index -= 1;\r\n            await context.commit('spliceAudioFeatureExtremes', {key: keys[i], chart: 'maxchart', index: index, value: {id: payload.id, value: payload[keys[i]]}});\r\n        }\r\n        context.commit('addAudioFeatureValue', {key: keys[i], value: payload[keys[i]]});\r\n        context.commit('plotAudioFeatureValue', {key: keys[i], value: payload[keys[i]]});\r\n    }\r\n    context.commit('addMode', payload.mode);\r\n};\r\nconst retrieveTopCharts = async (context) => {\r\n    let genreTuples = Object.entries(context.state.genres);\r\n    let topGenres = genreTuples.sort(function(a,b) {\r\n        if (!(\"trackNum\" in a[1]) && !(\"trackNum\" in b[1]))\r\n            return 0;\r\n        if (!(\"trackNum\" in b[1]))\r\n            return 0 - a[1].trackNum;\r\n        if (!(\"trackNum\" in a[1]))\r\n            return b[1].trackNum;\r\n        return b[1].trackNum - a[1].trackNum;\r\n    }).slice(0,50);\r\n    let topGenreIds = topGenres.map(genre => genre[0]);\r\n    context.commit('setTopSavedGenres', topGenreIds);\r\n    let artistTuples = Object.entries(context.state.artists);\r\n    let topArtists = artistTuples.sort(function(a,b) {\r\n        if (!(\"tracks\" in a[1]) && !(\"tracks\" in b[1]))\r\n            return 0;\r\n        if (!(\"tracks\" in b[1]))\r\n            return 0 - a[1].tracks.length;\r\n        if (!(\"tracks\" in a[1]))\r\n            return b[1].tracks.length;\r\n        return b[1].tracks.length - a[1].tracks.length\r\n    }).slice(0,50);\r\n    let topArtistIds = topArtists.map(artist => artist[0]);\r\n    context.commit('setTopSavedArtists', topArtistIds);\r\n    let terms = ['short_term', 'medium_term', 'long_term'];\r\n    let topPlayed = {\r\n        tracks: [[],[],[]],\r\n        artists: [[],[],[]]\r\n    }\r\n    for (let i = 0; i < terms.length; i++) {\r\n        let topTracks = await context.dispatch('getTopTracks', {limit: 50, time_range: terms[i]});\r\n        for (let j = 0; j < topTracks.length; j++) {\r\n            if (topTracks[j].id in context.state.tracks) \r\n                topPlayed.tracks[i].push(topTracks[j].id);\r\n            else\r\n                topPlayed.tracks[i].push(await context.dispatch('convertTrackObject', {track: topTracks[j]}));\r\n        }\r\n        let topArtists = await context.dispatch('getTopArtists', {limit: 50, time_range: terms[i]});\r\n        for (let j = 0; j < topArtists.length; j++) {\r\n            if (topArtists[j].id in context.state.artists) \r\n                topPlayed.artists[i].push(topArtists[j].id);\r\n            else\r\n                topPlayed.artists[i].push(await context.dispatch('convertArtistObject', topArtists[j]));\r\n        }\r\n    }\r\n    context.commit('setTopPlayedTracks', topPlayed.tracks);\r\n    context.commit('setTopPlayedArtists', topPlayed.artists);\r\n};\r\n/*\r\n{\r\n    id: String, \r\n    name: String,\r\n    image: String,\r\n    artists: Array,\r\n}\r\n*/\r\nconst convertTrackObject = async (context, payload) => {\r\n    let trackObject = {};\r\n    trackObject.id = payload.track.id;\r\n    trackObject.name = payload.track.name;\r\n    if ('album' in payload.track) \r\n        if ('images' in payload.track.album)\r\n            if (payload.track.album.images.length > 0)\r\n                trackObject.image = payload.track.album.images[0].url;\r\n    if (typeof(payload.track.artists[0]) == 'object')\r\n        trackObject.artists = payload.track.artists.map(artist => artist.id);\r\n    if ('date' in payload)\r\n        trackObject.date = payload.date;\r\n    return trackObject;\r\n};\r\nconst convertArtistObject = async (context, payload) => {\r\n    let artistObject = {};\r\n    artistObject.id = payload.id;\r\n    artistObject.name = payload.name;\r\n    if ('images' in payload)\r\n        if (payload.images.length > 0)\r\n            artistObject.image = payload.images[0].url;\r\n    if ('genres' in payload)\r\n        artistObject.genres = payload.genres;\r\n    if ('tracks' in payload)\r\n        artistObject.tracks = payload.tracks;\r\n    return artistObject;\r\n};\r\nconst generateGenre = async (context, payload) => {\r\n    let genreObject = {};\r\n    genreObject.name = payload.name;\r\n    genreObject.artists = payload.artists;\r\n    genreObject.trackNum = 1;\r\n    return genreObject;\r\n};\r\nconst bangerCalc = async (context, payload) => {\r\n    return ((payload.tempo - 96 + (payload.energy * 100) + (payload.danceability*50)) / 210);\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// API CALLS ///////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// String\r\nconst getTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTrack(track_id);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// Array of Strings\r\nconst getTracks = async (context, track_ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTracks(track_ids);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// String\r\nconst getArtist = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtist(id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n}; \r\n// String\r\nconst getAlbum = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAlbum(id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n}; \r\n// Array of Strings\r\nconst getArtists = async (context, ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getArtists(ids);\r\n      return response.artists;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n//\r\nconst getArtistRelatedArtists = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtistRelatedArtists(id);\r\n        return response.artists;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n  };\r\n// {limit: Number, offset: 0}\r\nconst getPlaylists = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getUserPlaylists(context.state.user.id, payload);\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// String\r\nconst getPlaylist = async (context, playlistId) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getPlaylist(playlistId);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyTopTracks({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    }  \r\n};\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopArtists = async (context, payload) => {\r\n    try { \r\n        let response = await context.state.spotifyApi.getMyTopArtists({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    } \r\n};\r\n// {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds\r\nconst getRecentlyPlayed = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyRecentlyPlayedTracks({limit: payload.limit});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// Array of Strings\r\nconst getAudioFeaturesForTracks = async (context, track_ids) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioFeaturesForTracks(track_ids);\r\n        return response.audio_features;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// String\r\nconst getAudioFeaturesForTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getAudioFeaturesForTracks([track_id]);\r\n      return response.audio_features[0];\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// String\r\nconst getAudioAnalysisForTrack = async (context, track_id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioAnalysisForTrack(track_id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\r\nconst getRecomendations = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getRecommendations(payload);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {limit: 1-50, offset: first index}\r\nconst getSavedTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMySavedTracks({limit: payload.limit, offset: payload.offset});\r\n        if (payload.offset == 0) {\r\n            context.commit('setTotal', response.total);\r\n        }\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// None\r\nconst getUser = async (context) => {\r\n    try {\r\n      if (context.state.inicialized)\r\n      {\r\n        let response = await context.state.spotifyApi.getMe();\r\n        await context.commit('setUserData', response);\r\n      }\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// Array IDs\r\nconst searchSpotify = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.search(payload.query, ['track'], {limit: 25});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\nconst getArtistTopTracks = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtistTopTracks(id, \"US\", {});\r\n        return response.tracks;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default {\r\n    inicializeGetToken,\r\n    inicializeParseToken,\r\n    inicializeSetToken,\r\n\r\n    loadLibrary,\r\n    retrieveSavedTracks,\r\n    retrieveSavedArtists,\r\n    updateTimelines,\r\n    processAudioFeatures,\r\n    retrieveTopCharts,\r\n\r\n    convertTrackObject,\r\n    convertArtistObject,\r\n    generateGenre,\r\n\r\n    bangerCalc,\r\n\r\n    getTrack,\r\n    getTracks,\r\n    getArtist,\r\n    getAlbum,\r\n    getArtists,\r\n    getArtistRelatedArtists,\r\n    getPlaylists,\r\n    getPlaylist,\r\n    getTopTracks,\r\n    getTopArtists,\r\n    getRecentlyPlayed,\r\n    getAudioFeaturesForTracks,\r\n    getAudioFeaturesForTrack,\r\n    getAudioAnalysisForTrack,\r\n    getRecomendations,\r\n    getSavedTracks,\r\n    getUser,\r\n    searchSpotify,\r\n    getArtistTopTracks\r\n};"]}]}