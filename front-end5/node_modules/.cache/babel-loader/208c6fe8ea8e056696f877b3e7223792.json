{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\src\\components\\Graphs\\FeatureGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\src\\components\\Graphs\\FeatureGraph.vue","mtime":1574474249707},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240333000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FeatureGraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"FeatureGraph\" :style=\"{'--red': + color.r, '--green': + color.r, '--blue': + color.r, width: graph_data.width}\">\r\n        <h1 class=\"graph-title\">{{graph_data.title}}</h1>\r\n        <div class=\"canvasWrap\" :style=\"{height: graph_data.height + 'px', width: graph_data.width + 'px'}\">\r\n            <canvas :id=\"'feature-graph-' + graph_data.title\" class=\"canvas\"></canvas>\r\n            <div class=\"flex flex-space-between labels\" :style=\"{'--red': + color.r,'--green': + color.g,'--blue': + color.b, }\">\r\n                <h2>{{audioFeatures[graph_data.feature].xAxis.minValue}}</h2>\r\n                <h2>{{audioFeatures[graph_data.feature].xAxis.maxValue}}</h2>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"chart.js\";\r\n\r\nexport default {\r\n    name: \"FeatureGraph\",\r\n    props: {\r\n        graph_data: Object\r\n    },\r\n    data() {\r\n        return {\r\n            audioFeatures: {\r\n                acousticness: {\r\n                    color: 'rgba(237, 201, 72,',\r\n                    xAxis: {\r\n                        title: \"Acousticness\",\r\n                        minValue: \"Synthasized\",\r\n                        maxValue: \"Acoustic\",\r\n                    },\r\n                },\r\n                danceability: {\r\n                    color: 'rgba(78, 121, 167,',\r\n                    xAxis: {\r\n                        title: \"Danceability\",\r\n                        minValue: \"Couch Potato\",\r\n                        maxValue: \"Let's Dance!\",\r\n                    },\r\n                },\r\n                energy: {\r\n                    color: 'rgba(89, 161, 79,',\r\n                    xAxis: {\r\n                        title: \"Energy\",\r\n                        minValue: \"Peaceful\",\r\n                        maxValue: \"Hyper\",\r\n                    },\r\n                },\r\n                instrumentalness: {\r\n                    color: 'rgba(255, 157, 167,',\r\n                    xAxis: {\r\n                        title: \"Instrumentalness\",\r\n                        minValue: \"Singing\",\r\n                        maxValue: \"Instrumental\",\r\n                    },\r\n                },\r\n                liveness: {\r\n                    color: 'rgba(176, 122, 161,',\r\n                    xAxis: {\r\n                        title: \"Liveness\",\r\n                        minValue: \"Recorded\",\r\n                        maxValue: \"Live\",\r\n                    },\r\n                },\r\n                loudness: {\r\n                    color: 'rgba(242, 142, 43,',\r\n                    xAxis: {\r\n                        title: \"Loudness\",\r\n                        minValue: \"Quiet\",\r\n                        maxValue: \"Loud\",\r\n                    },\r\n                },\r\n                speechiness: {\r\n                    color: 'rgba(156, 117, 95,',\r\n                    xAxis: {\r\n                        title: \"Speechiness\",\r\n                        minValue: \"Singing\",\r\n                        maxValue: \"Talking\",\r\n                    },\r\n                },\r\n                valence: {\r\n                    color: 'rgba(242, 142, 43,',\r\n                    xAxis: {\r\n                        title: \"Happiness\",\r\n                        minValue: \"Depressing\",\r\n                        maxValue: \"Happy\",\r\n                    },\r\n                },\r\n                tempo: {\r\n                    color: 'rgba(225, 87, 89,',\r\n                    xAxis: {\r\n                        title: \"Tempo\",\r\n                        minValue: \"Slow\",\r\n                        maxValue: \"Fast\",\r\n                    },\r\n                },\r\n                banger: {\r\n                    color: 'rgba(225, 87, 89,',\r\n                    xAxis: {\r\n                        title: \"Bangerable\",\r\n                        minValue: \"*Snore*\",\r\n                        maxValue: \"Bangers\",\r\n                    },\r\n                },\r\n            },\r\n            graph: null,\r\n            current: this.current,\r\n            tooltip: null,\r\n        };\r\n    },\r\n    watch: {\r\n        //activate graph tooltip on element hover\r\n        current: function() {\r\n            if (this.tooltip) {\r\n                var activeValues = this.graph.tooltip._active;\r\n                var requestedValues = this.graph.getDatasetMeta(this.tooltip[0])\r\n                    .data[this.tooltip[1]];\r\n                for (var i = 0; i < activeValues.length; i++) {\r\n                    if (requestedValues._index == activeValues[i]._index) {\r\n                        activeValues.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                this.graph.tooltip._active = activeValues;\r\n                this.graph.tooltip.update(true);\r\n                this.graph.draw();\r\n                this.tooltip = null;\r\n            }\r\n            var datasetIndex = 0;\r\n            var pointIndex = this.current.value - 1;\r\n            if (this.graph.tooltip._active == undefined)\r\n                this.graph.tooltip._active = [];\r\n            activeValues = this.graph.tooltip._active;\r\n            requestedValues = this.graph.getDatasetMeta(datasetIndex)\r\n                .data[pointIndex];\r\n            activeValues.push(requestedValues);\r\n            this.graph.tooltip._active = activeValues;\r\n            this.graph.tooltip.update(true);\r\n            this.graph.draw();\r\n            this.tooltip = [datasetIndex, pointIndex];\r\n        }\r\n    },\r\n    computed: {\r\n        values() {\r\n            return this.graph_data.bars;\r\n        },\r\n        color() {\r\n            let re = RegExp(/\\d+/i, 'g');\r\n            let r = parseInt(re.exec(this.audioFeatures[this.graph_data.feature].color), 10);\r\n            let g = parseInt(re.exec(this.audioFeatures[this.graph_data.feature].color), 10);\r\n            let b = parseInt(re.exec(this.audioFeatures[this.graph_data.feature].color), 10);\r\n            console.log(\"SDKLJF:SDF\");\r\n            console.log(r, g , b);\r\n            return { r: r,  g: g,  b: b }\r\n        },\r\n    },\r\n    methods: {\r\n        graphLabels(value) {\r\n            if (value == this.audioFeatures[this.graph_data.feature].xAxis.title + \": 0%\") {\r\n                return this.audioFeatures[this.graph_data.feature].xAxis.minValue;\r\n            }\r\n            if (value == this.audioFeatures[this.graph_data.feature].xAxis.title + \": 100%\") {\r\n                return this.audioFeatures[this.graph_data.feature].xAxis.maxValue;\r\n            }\r\n            return \"\";\r\n        },\r\n        labels() {\r\n            let labels = [];\r\n            for (let i = 0; i < 11; i++) {\r\n                labels.push(this.audioFeatures[this.graph_data.feature].xAxis.title + \": \" + (i * 10) + \"%\");\r\n            }\r\n            return labels;\r\n        },\r\n        //updating chart to new trend\r\n        renderChart() {\r\n            let color1 = this.audioFeatures[this.graph_data.feature].color + ' 0.2)';\r\n            let color2 = this.audioFeatures[this.graph_data.feature].color + ' 0.8)';\r\n            let color3 = this.audioFeatures[this.graph_data.feature].color + ' 0.6)';\r\n            var options = {\r\n                type: \"line\",\r\n                data: {\r\n                    labels: this.labels(),\r\n                    datasets: [\r\n                        {\r\n                            label: \"Songs\",\r\n                            data: this.values,\r\n                            backgroundColor: color1,\r\n                            borderColor: color3,\r\n                            pointBackgroundColor: color2,\r\n                            borderWidth: 2.5,\r\n                            pointBorderWidth: 0.1,\r\n                            hitRadius: 8,\r\n                            pointRadius: 3.5,\r\n                            pointHoverRadius: 5,\r\n                            pointHoverBorderColor: 'rgb(255,255,255)',\r\n                            pointHoverBackgroundColor: 'rgb(255,255,255)',\r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    layout: {\r\n                        padding: {\r\n                            left: 12,\r\n                            right: 12,\r\n                            bottom: 0,\r\n                            top: 0,\r\n                        }\r\n                    },\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        displayColors: false,\r\n                        backgroundColor: \"rgba(0, 6, 20, .8)\",\r\n                        titleFontStyle: \"semi-bold\",\r\n                        titleFontFamily: \"'Open sans', sans-serif\",\r\n                        bodyFontFamily: \"'Open sans', sans-serif\",\r\n                        bodyFontColor: \"rgba(255, 255, 255, 0.7)\",\r\n                        xPadding: 10,\r\n                        yPadding: 10,\r\n                        cornerRadius: 0\r\n                    },\r\n                    scales: {\r\n                        xAxes: [\r\n                            {\r\n                                display: false,\r\n                                position: 'bottom',\r\n                                offset: false,\r\n                                gridLines: {\r\n                                    display: false,\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: false,\r\n                                },\r\n                                ticks: {\r\n                                    min: 0,\r\n                                    autoSkip: false,\r\n                                    maxRotation: 0,\r\n                                    minRotation: 0,\r\n                                    callback: this.graphLabels,\r\n                                    padding: 0,\r\n                                    fontStyle: 'bold',\r\n                                    fontSize: 1,\r\n                                    fontColor: color2,\r\n                                }\r\n                            }\r\n                        ],\r\n                        yAxes: [\r\n                            {\r\n                                display: false,\r\n                                position: 'left',\r\n                                offset: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    drawOnChartArea: false,\r\n                                    color: 'rgba(255,255,255,.3)',\r\n                                    lineWidth: 2,\r\n                                    drawTicks: true,\r\n                                    tickMarkLength: 4,\r\n                                    z: -100,\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: false,\r\n                                    labelString: \"Number of Songs\",\r\n                                    fontColor: 'rgba(255,255,255,.15)',\r\n                                    padding: 0,\r\n                                },\r\n                                ticks: {\r\n                                    min: 0,\r\n                                    autoSkip: true,\r\n                                    autoSkipPadding: this.graph_data.height / 4,\r\n                                    maxRotation: 0,\r\n                                    minRotation: 0,\r\n                                    padding: 0,\r\n                                    fontColor: 'rgba(255,255,255, .5)',\r\n                                    fontStyle: 'bold',\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            };\r\n            var ctx = document\r\n                .getElementById(\"feature-graph-\" + this.graph_data.title)\r\n                .getContext(\"2d\");\r\n            this.graph = new Chart(ctx, options);\r\n            }\r\n        },\r\n    mounted: function() {\r\n        this.renderChart();\r\n        if (this.active) {\r\n            this.graph.config.data.datasets[0][\"pointBackgroundColor\"][\r\n                this.active - 1\r\n            ] = \"white\";\r\n            this.graph.update();\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.FeatureGraph {\r\n    --red: 255;\r\n    --green: 255;\r\n    --blue: 255;\r\n    display: block;\r\n    background-color: rgba(226, 226, 226, 0.041);\r\n    padding-top: 18px;\r\n\r\n}\r\n\r\n.wrap {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.canvasWrap {\r\n    display: block;\r\n    padding-bottom: 22px;\r\n    position: relative;\r\n}\r\n\r\n.canvas{\r\n    width: 100%;\r\n    margin: auto;\r\n    height: 100%;\r\n    z-index: 100;\r\n}\r\n\r\n.labels {\r\n    --red: 255;\r\n    --green: 255;\r\n    --blue: 255;\r\n    position: absolute;\r\n    left: 0px;\r\n    bottom: 8px;\r\n    margin: 0 14px;\r\n    width: calc(100% - 28px);\r\n}\r\n\r\nh2 {\r\n    color: rgba(var(--red), var(--green), var(--blue), 0.8);\r\n    margin: 0;\r\n    font-size: 15px;\r\n    font-weight: lighter;\r\n    cursor: default;\r\n}\r\n    \r\n.graph-title {\r\n    color: rgba(255, 255, 255, 0.877);\r\n    font-size: 22px;\r\n    font-weight: lighter;\r\n    width: 100%;\r\n    margin-bottom: 30px;\r\n}\r\n</style>"],"sourceRoot":"src/components/Graphs"}]}