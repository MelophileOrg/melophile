{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Graphs\\LineGraphPercent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\src\\components\\Graphs\\LineGraphPercent.vue","mtime":1574453508597},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240333000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ2hhcnQgZnJvbSAiY2hhcnQuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkxpbmVHcmFwaFBlcmNlbnQiLAogIHByb3BzOiB7CiAgICB0aXRsZTogU3RyaW5nLAogICAgZGF0YTogQXJyYXksCiAgICB4QXhpczogU3RyaW5nLAogICAgeUF4aXM6IFN0cmluZywKICAgIGhlaWdodDogTnVtYmVyCiAgfSwKICAvL2hhbmRsZSBhY3RpdmUgZWxlbWVudCBjb2xvcgogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlbmRlckNoYXJ0KCk7CgogICAgaWYgKHRoaXMuYWN0aXZlKSB7CiAgICAgIHRoaXMuZ3JhcGguY29uZmlnLmRhdGEuZGF0YXNldHNbMF1bInBvaW50QmFja2dyb3VuZENvbG9yIl1bdGhpcy5hY3RpdmUgLSAxXSA9ICJ3aGl0ZSI7CiAgICAgIHRoaXMuZ3JhcGgudXBkYXRlKCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgLy9hY3RpdmF0ZSBncmFwaCB0b29sdGlwIG9uIGVsZW1lbnQgaG92ZXIKICAgIGN1cnJlbnQ6IGZ1bmN0aW9uIGN1cnJlbnQoKSB7CiAgICAgIGlmICh0aGlzLnRvb2x0aXApIHsKICAgICAgICB2YXIgYWN0aXZlRWxlbWVudHMgPSB0aGlzLmdyYXBoLnRvb2x0aXAuX2FjdGl2ZTsKICAgICAgICB2YXIgcmVxdWVzdGVkRWxlbSA9IHRoaXMuZ3JhcGguZ2V0RGF0YXNldE1ldGEodGhpcy50b29sdGlwWzBdKS5kYXRhW3RoaXMudG9vbHRpcFsxXV07CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWN0aXZlRWxlbWVudHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmIChyZXF1ZXN0ZWRFbGVtLl9pbmRleCA9PSBhY3RpdmVFbGVtZW50c1tpXS5faW5kZXgpIHsKICAgICAgICAgICAgYWN0aXZlRWxlbWVudHMuc3BsaWNlKGksIDEpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMuZ3JhcGgudG9vbHRpcC5fYWN0aXZlID0gYWN0aXZlRWxlbWVudHM7CiAgICAgICAgdGhpcy5ncmFwaC50b29sdGlwLnVwZGF0ZSh0cnVlKTsKICAgICAgICB0aGlzLmdyYXBoLmRyYXcoKTsKICAgICAgICB0aGlzLnRvb2x0aXAgPSBudWxsOwogICAgICB9CgogICAgICBpZiAodGhpcy5pc0hvdmVyYWJsZSgpKSB7CiAgICAgICAgdmFyIGRhdGFzZXRJbmRleCA9IDA7CiAgICAgICAgdmFyIHBvaW50SW5kZXggPSB0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyIC0gMTsKCiAgICAgICAgaWYgKHRoaXMudHJlbmQgPT09ICJBdG9taWMgUmFkaXVzIikgewogICAgICAgICAgaWYgKHRoaXMuY3VycmVudC5hdG9taWNOdW1iZXIgPiA3MCAmJiB0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyIDwgODQpIHsKICAgICAgICAgICAgdmFyIHBvaW50SW5kZXggPSB0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyIC0gMTQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRyZW5kID09PSAiRWxlY3Ryb25lZ2F0aXZpdHkiKSB7CiAgICAgICAgICBpZiAoWzMsIDQsIDUsIDYsIDcsIDgsIDldLmluY2x1ZGVzKHRoaXMuY3VycmVudC5hdG9taWNOdW1iZXIpKSB7CiAgICAgICAgICAgIHZhciBwb2ludEluZGV4ID0gdGhpcy5jdXJyZW50LmF0b21pY051bWJlciAtIDI7CiAgICAgICAgICB9IGVsc2UgaWYgKFsxMSwgMTIsIDEzLCAxNCwgMTUsIDE2LCAxN10uaW5jbHVkZXModGhpcy5jdXJyZW50LmF0b21pY051bWJlcikpIHsKICAgICAgICAgICAgdmFyIHBvaW50SW5kZXggPSB0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyIC0gMzsKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50LmF0b21pY051bWJlciA+IDE4ICYmIHRoaXMuY3VycmVudC5hdG9taWNOdW1iZXIgPCA4NikgewogICAgICAgICAgICB2YXIgcG9pbnRJbmRleCA9IHRoaXMuY3VycmVudC5hdG9taWNOdW1iZXIgLSA0OwogICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyID4gODYpIHsKICAgICAgICAgICAgdmFyIHBvaW50SW5kZXggPSB0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyIC0gNTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKHRoaXMudHJlbmQgPT09ICJEZW5zaXR5IikgewogICAgICAgICAgaWYgKHRoaXMuY3VycmVudC5hdG9taWNOdW1iZXIgPiA4NyAmJiB0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyIDwgOTYpIHsKICAgICAgICAgICAgdmFyIHBvaW50SW5kZXggPSB0aGlzLmN1cnJlbnQuYXRvbWljTnVtYmVyIC0gMzsKICAgICAgICAgIH0gZWxzZSBpZiAoWzk2LCA5NywgOThdLmluY2x1ZGVzKHRoaXMuY3VycmVudC5hdG9taWNOdW1iZXIpKSB7CiAgICAgICAgICAgIHZhciBwb2ludEluZGV4ID0gdGhpcy5jdXJyZW50LmF0b21pY051bWJlciAtIDQ7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5ncmFwaC50b29sdGlwLl9hY3RpdmUgPT0gdW5kZWZpbmVkKSB0aGlzLmdyYXBoLnRvb2x0aXAuX2FjdGl2ZSA9IFtdOwogICAgICAgIHZhciBhY3RpdmVFbGVtZW50cyA9IHRoaXMuZ3JhcGgudG9vbHRpcC5fYWN0aXZlOwogICAgICAgIHZhciByZXF1ZXN0ZWRFbGVtID0gdGhpcy5ncmFwaC5nZXREYXRhc2V0TWV0YShkYXRhc2V0SW5kZXgpLmRhdGFbcG9pbnRJbmRleF07CiAgICAgICAgYWN0aXZlRWxlbWVudHMucHVzaChyZXF1ZXN0ZWRFbGVtKTsKICAgICAgICB0aGlzLmdyYXBoLnRvb2x0aXAuX2FjdGl2ZSA9IGFjdGl2ZUVsZW1lbnRzOwogICAgICAgIHRoaXMuZ3JhcGgudG9vbHRpcC51cGRhdGUodHJ1ZSk7CiAgICAgICAgdGhpcy5ncmFwaC5kcmF3KCk7CiAgICAgICAgdGhpcy50b29sdGlwID0gW2RhdGFzZXRJbmRleCwgcG9pbnRJbmRleF07CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBncmFwaDogbnVsbCwKICAgICAgY3VycmVudDogdGhpcy5jdXJyZW50LAogICAgICB0b29sdGlwOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy91cGRhdGluZyBjaGFydCB0byBuZXcgdHJlbmQKICAgIHJlbmRlckNoYXJ0OiBmdW5jdGlvbiByZW5kZXJDaGFydCgpIHsKICAgICAgdmFyIG9wdGlvbnMgPSB7CiAgICAgICAgdHlwZTogImxpbmUiLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIGxhYmVsczogYXRvbWljTnVtYmVycywKICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICBsYWJlbDogbGFiZWwsCiAgICAgICAgICAgIGRhdGE6IHRyZW5kVG9HcmFwaCwKICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBiYWNrZ3JvdW5kQ29sb3IsCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBib3JkZXJDb2xvciwKICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IHBvaW50QmFja2dyb3VuZENvbG9yLAogICAgICAgICAgICBib3JkZXJXaWR0aDogMi41LAogICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAwLjEsCiAgICAgICAgICAgIGhpdFJhZGl1czogNSwKICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDIuNSwKICAgICAgICAgICAgcG9pbnRIb3ZlclJhZGl1czogNQogICAgICAgICAgfV0KICAgICAgICB9LAogICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgIGxheW91dDogewogICAgICAgICAgICBwYWRkaW5nOiB7CiAgICAgICAgICAgICAgbGVmdDogMTAsCiAgICAgICAgICAgICAgcmlnaHQ6IDEwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSwKICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICB0b29sdGlwczogewogICAgICAgICAgICBkaXNwbGF5Q29sb3JzOiBmYWxzZSwKICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAicmdiYSgwLCA2LCAyMCwgMC43KSIsCiAgICAgICAgICAgIHRpdGxlRm9udFN0eWxlOiAic2VtaS1ib2xkIiwKICAgICAgICAgICAgdGl0bGVGb250RmFtaWx5OiAiJ09wZW4gc2FucycsIHNhbnMtc2VyaWYiLAogICAgICAgICAgICBib2R5Rm9udEZhbWlseTogIidPcGVuIHNhbnMnLCBzYW5zLXNlcmlmIiwKICAgICAgICAgICAgYm9keUZvbnRDb2xvcjogInJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KSIsCiAgICAgICAgICAgIHhQYWRkaW5nOiAxMCwKICAgICAgICAgICAgeVBhZGRpbmc6IDEwLAogICAgICAgICAgICBjb3JuZXJSYWRpdXM6IDAKICAgICAgICAgIH0sCiAgICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgICAgeEF4ZXM6IFt7CiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgICAgfV0sCiAgICAgICAgICAgIHlBeGVzOiBbewogICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICB2YXIgY3R4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImxpbmUtZ3JhcGgtcGVyY2VudC0iICsgdGhpcy50aXRsZSkuZ2V0Q29udGV4dCgiMmQiKTsKICAgICAgdGhpcy5ncmFwaCA9IG5ldyBDaGFydChjdHgsIG9wdGlvbnMpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["LineGraphPercent.vue"],"names":[],"mappings":";;;;;;;;;;;AASA,OAAA,KAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,KAFA;AAGA,IAAA,KAAA,EAAA,MAHA;AAIA,IAAA,KAAA,EAAA,MAJA;AAKA,IAAA,MAAA,EAAA;AALA,GAFA;AASA;AACA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,WAAA;;AACA,QAAA,KAAA,MAAA,EAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,sBAAA,EACA,KAAA,MAAA,GAAA,CADA,IAEA,OAFA;AAGA,WAAA,KAAA,CAAA,MAAA;AACA;AACA,GAlBA;AAmBA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,YAAA,cAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,OAAA;AACA,YAAA,aAAA,GAAA,KAAA,KAAA,CAAA,cAAA,CAAA,KAAA,OAAA,CAAA,CAAA,CAAA,EACA,IADA,CACA,KAAA,OAAA,CAAA,CAAA,CADA,CAAA;;AAEA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,cAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,aAAA,CAAA,MAAA,IAAA,cAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA;AACA,YAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA;AACA;AACA;;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,OAAA,GAAA,cAAA;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,IAAA;AACA,aAAA,KAAA,CAAA,IAAA;AACA,aAAA,OAAA,GAAA,IAAA;AACA;;AACA,UAAA,KAAA,WAAA,EAAA,EAAA;AACA,YAAA,YAAA,GAAA,CAAA;AACA,YAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,CAAA;;AACA,YAAA,KAAA,KAAA,KAAA,eAAA,EAAA;AACA,cACA,KAAA,OAAA,CAAA,YAAA,GAAA,EAAA,IACA,KAAA,OAAA,CAAA,YAAA,GAAA,EAFA,EAGA;AACA,gBAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,EAAA;AACA;AACA,SAPA,MAOA,IAAA,KAAA,KAAA,KAAA,mBAAA,EAAA;AACA,cACA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,CACA,KAAA,OAAA,CAAA,YADA,CADA,EAIA;AACA,gBAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,CAAA;AACA,WANA,MAMA,IACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,CACA,KAAA,OAAA,CAAA,YADA,CADA,EAIA;AACA,gBAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,CAAA;AACA,WANA,MAMA,IACA,KAAA,OAAA,CAAA,YAAA,GAAA,EAAA,IACA,KAAA,OAAA,CAAA,YAAA,GAAA,EAFA,EAGA;AACA,gBAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,CAAA;AACA,WALA,MAKA,IAAA,KAAA,OAAA,CAAA,YAAA,GAAA,EAAA,EAAA;AACA,gBAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,CAAA;AACA;AACA,SArBA,MAqBA,IAAA,KAAA,KAAA,KAAA,SAAA,EAAA;AACA,cACA,KAAA,OAAA,CAAA,YAAA,GAAA,EAAA,IACA,KAAA,OAAA,CAAA,YAAA,GAAA,EAFA,EAGA;AACA,gBAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,CAAA;AACA,WALA,MAKA,IACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,CAAA,KAAA,OAAA,CAAA,YAAA,CADA,EAEA;AACA,gBAAA,UAAA,GAAA,KAAA,OAAA,CAAA,YAAA,GAAA,CAAA;AACA;AACA;;AACA,YAAA,KAAA,KAAA,CAAA,OAAA,CAAA,OAAA,IAAA,SAAA,EACA,KAAA,KAAA,CAAA,OAAA,CAAA,OAAA,GAAA,EAAA;AACA,YAAA,cAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,OAAA;AACA,YAAA,aAAA,GAAA,KAAA,KAAA,CAAA,cAAA,CAAA,YAAA,EACA,IADA,CACA,UADA,CAAA;AAEA,QAAA,cAAA,CAAA,IAAA,CAAA,aAAA;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,OAAA,GAAA,cAAA;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,IAAA;AACA,aAAA,KAAA,CAAA,IAAA;AACA,aAAA,OAAA,GAAA,CAAA,YAAA,EAAA,UAAA,CAAA;AACA;AACA;AAxEA,GAnBA;AA6FA,EAAA,IA7FA,kBA6FA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,KAAA,OAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAnGA;AAoGA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,WAFA,yBAEA;AACA,UAAA,OAAA,GAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA;AACA,UAAA,MAAA,EAAA,aADA;AAEA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,KAAA,EAAA,KADA;AAEA,YAAA,IAAA,EAAA,YAFA;AAGA,YAAA,eAAA,EAAA,eAHA;AAIA,YAAA,WAAA,EAAA,WAJA;AAKA,YAAA,oBAAA,EAAA,oBALA;AAMA,YAAA,WAAA,EAAA,GANA;AAOA,YAAA,gBAAA,EAAA,GAPA;AAQA,YAAA,SAAA,EAAA,CARA;AASA,YAAA,WAAA,EAAA,GATA;AAUA,YAAA,gBAAA,EAAA;AAVA,WADA;AAFA,SAFA;AAmBA,QAAA,OAAA,EAAA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,OAAA,EAAA;AACA,cAAA,IAAA,EAAA,EADA;AAEA,cAAA,KAAA,EAAA;AAFA;AADA,WADA;AAOA,UAAA,mBAAA,EAAA,KAPA;AAQA,UAAA,UAAA,EAAA,IARA;AASA,UAAA,MAAA,EAAA;AACA,YAAA,OAAA,EAAA;AADA,WATA;AAYA,UAAA,QAAA,EAAA;AACA,YAAA,aAAA,EAAA,KADA;AAEA,YAAA,eAAA,EAAA,qBAFA;AAGA,YAAA,cAAA,EAAA,WAHA;AAIA,YAAA,eAAA,EAAA,yBAJA;AAKA,YAAA,cAAA,EAAA,yBALA;AAMA,YAAA,aAAA,EAAA,0BANA;AAOA,YAAA,QAAA,EAAA,EAPA;AAQA,YAAA,QAAA,EAAA,EARA;AASA,YAAA,YAAA,EAAA;AATA,WAZA;AAuBA,UAAA,MAAA,EAAA;AACA,YAAA,KAAA,EAAA,CACA;AACA,cAAA,OAAA,EAAA;AADA,aADA,CADA;AAMA,YAAA,KAAA,EAAA,CACA;AACA,cAAA,OAAA,EAAA;AADA,aADA;AANA;AAvBA;AAnBA,OAAA;AAwDA,UAAA,GAAA,GAAA,QAAA,CACA,cADA,CACA,wBAAA,KAAA,KADA,EAEA,UAFA,CAEA,IAFA,CAAA;AAGA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA,GAAA,EAAA,OAAA,CAAA;AACA;AA/DA;AApGA,CAAA","sourcesContent":["<template>\r\n    <div class=\"LineGraphPercent wrap\">\r\n        <div class=\"canvasWrap\" :style=\"'height:'+height\">\r\n            <canvas :id=\"'line-graph-percent-' + title\" class=\"canvas\"></canvas>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"chart.js\";\r\n\r\nexport default {\r\n    name: \"LineGraphPercent\",\r\n    props: {\r\n        title: String,\r\n        data: Array,\r\n        xAxis: String,\r\n        yAxis: String,\r\n        height: Number,\r\n    },\r\n    //handle active element color\r\n    mounted: function() {\r\n        this.renderChart();\r\n        if (this.active) {\r\n            this.graph.config.data.datasets[0][\"pointBackgroundColor\"][\r\n                this.active - 1\r\n            ] = \"white\";\r\n            this.graph.update();\r\n        }\r\n    },\r\n    watch: {\r\n        //activate graph tooltip on element hover\r\n        current: function() {\r\n            if (this.tooltip) {\r\n                var activeElements = this.graph.tooltip._active;\r\n                var requestedElem = this.graph.getDatasetMeta(this.tooltip[0])\r\n                    .data[this.tooltip[1]];\r\n                for (var i = 0; i < activeElements.length; i++) {\r\n                    if (requestedElem._index == activeElements[i]._index) {\r\n                        activeElements.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                this.graph.tooltip._active = activeElements;\r\n                this.graph.tooltip.update(true);\r\n                this.graph.draw();\r\n                this.tooltip = null;\r\n            }\r\n            if (this.isHoverable()) {\r\n                var datasetIndex = 0;\r\n                var pointIndex = this.current.atomicNumber - 1;\r\n                if (this.trend === \"Atomic Radius\") {\r\n                    if (\r\n                        this.current.atomicNumber > 70 &&\r\n                        this.current.atomicNumber < 84\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 14;\r\n                    }\r\n                } else if (this.trend === \"Electronegativity\") {\r\n                    if (\r\n                        [3, 4, 5, 6, 7, 8, 9].includes(\r\n                            this.current.atomicNumber\r\n                        )\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 2;\r\n                    } else if (\r\n                        [11, 12, 13, 14, 15, 16, 17].includes(\r\n                            this.current.atomicNumber\r\n                        )\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 3;\r\n                    } else if (\r\n                        this.current.atomicNumber > 18 &&\r\n                        this.current.atomicNumber < 86\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 4;\r\n                    } else if (this.current.atomicNumber > 86) {\r\n                        var pointIndex = this.current.atomicNumber - 5;\r\n                    }\r\n                } else if (this.trend === \"Density\") {\r\n                    if (\r\n                        this.current.atomicNumber > 87 &&\r\n                        this.current.atomicNumber < 96\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 3;\r\n                    } else if (\r\n                        [96, 97, 98].includes(this.current.atomicNumber)\r\n                    ) {\r\n                        var pointIndex = this.current.atomicNumber - 4;\r\n                    }\r\n                }\r\n                if (this.graph.tooltip._active == undefined)\r\n                    this.graph.tooltip._active = [];\r\n                var activeElements = this.graph.tooltip._active;\r\n                var requestedElem = this.graph.getDatasetMeta(datasetIndex)\r\n                    .data[pointIndex];\r\n                activeElements.push(requestedElem);\r\n                this.graph.tooltip._active = activeElements;\r\n                this.graph.tooltip.update(true);\r\n                this.graph.draw();\r\n                this.tooltip = [datasetIndex, pointIndex];\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            graph: null,\r\n            current: this.current,\r\n            tooltip: null,\r\n        };\r\n    },\r\n    methods: {\r\n        //updating chart to new trend\r\n        renderChart() {\r\n            var options = {\r\n                type: \"line\",\r\n                data: {\r\n                    labels: atomicNumbers,\r\n                    datasets: [\r\n                        {\r\n                            label: label,\r\n                            data: trendToGraph,\r\n                            backgroundColor: backgroundColor,\r\n                            borderColor: borderColor,\r\n                            pointBackgroundColor: pointBackgroundColor,\r\n                            borderWidth: 2.5,\r\n                            pointBorderWidth: 0.1,\r\n                            hitRadius: 5,\r\n                            pointRadius: 2.5,\r\n                            pointHoverRadius: 5\r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    layout: {\r\n                        padding: {\r\n                            left: 10,\r\n                            right: 10\r\n                        }\r\n                    },\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        displayColors: false,\r\n                        backgroundColor: \"rgba(0, 6, 20, 0.7)\",\r\n                        titleFontStyle: \"semi-bold\",\r\n                        titleFontFamily: \"'Open sans', sans-serif\",\r\n                        bodyFontFamily: \"'Open sans', sans-serif\",\r\n                        bodyFontColor: \"rgba(255, 255, 255, 0.7)\",\r\n                        xPadding: 10,\r\n                        yPadding: 10,\r\n                        cornerRadius: 0\r\n                    },\r\n                    scales: {\r\n                        xAxes: [\r\n                            {\r\n                                display: false\r\n                            }\r\n                        ],\r\n                        yAxes: [\r\n                            {\r\n                                display: false\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            };\r\n            var ctx = document\r\n                .getElementById(\"line-graph-percent-\" + this.title)\r\n                .getContext(\"2d\");\r\n            this.graph = new Chart(ctx, options);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.wrap {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n.canvasWrap {\r\n    display: block;\r\n    height: 11.8vw;\r\n    margin-top: 0.18vw;\r\n}\r\n\r\n.canvas{\r\n    width: 100%;\r\n    margin: auto;\r\n    height: 100%;\r\n    z-index: 100;\r\n}\r\n</style>"],"sourceRoot":"src/components/Graphs"}]}