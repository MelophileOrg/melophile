{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\store.js","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\store.js","mtime":1571903525350},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\andre\\\\Documents\\\\GitHub\\\\Spotify-Features\\\\spotify-features-website\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\n\nvar SpotifyWebApi = require('spotify-web-api-js');\n\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    testing: false,\n    spotifyApi: new SpotifyWebApi(),\n    accessToken: \"\",\n    user: null,\n    inicialized: false,\n    userData: null,\n    apps: [{\n      title: \"Song Analysis\",\n      path: \"songanalysis\",\n      auth: false,\n      description: [\"View in-depth information about a track including it's happiness, energy and danceability!\", \"After running Library Analysis, Song Analisis will provide additional information based on your Library's statistics.\"],\n      img: \"search\",\n      color: {\n        red: 238,\n        green: 126,\n        blue: 137\n      },\n      state: true\n    }, {\n      title: \"My Charts\",\n      path: \"mycharts\",\n      auth: true,\n      description: [\"View your personalized top tracks and artists.\", \"View either with a time range of your choice! View your top tracks of all time, or your favorite artists over the last few weeks.\"],\n      img: \"chart\",\n      color: {\n        red: 230,\n        green: 224,\n        blue: 60\n      },\n      state: true\n    }, {\n      title: \"Library Analysis\",\n      path: \"libraryanalysis\",\n      auth: true,\n      description: [\"How happy is your library? Who is your top saved artist? What are you slowest songs?\", \"Discover the averages and extremes within your library.\", \"Library Analysis gathers all data relavant to your library and process' out some cool statistics!\"],\n      img: \"library\",\n      color: {\n        red: 240,\n        green: 100,\n        blue: 50\n      },\n      state: true\n    }, {\n      title: \"My Music Mood\",\n      path: \"mymusicmood\",\n      auth: true,\n      description: [\"What does your music say about you?\", \"Based on either your most recently played, or recent top tracks, My Music Mood will attempt to analyse tracks you've been into lately and determine your mood!\"],\n      img: \"musicmood\",\n      color: {\n        red: 255,\n        green: 165,\n        blue: 30\n      },\n      state: false\n    }, {\n      title: \"Boring-Radar\",\n      path: \"boring\",\n      auth: true,\n      description: [\"Is your music taste BORING?\", \"The Boring-Radar will either confirm or rebute your greatest fears by analysing data from Library Analysis to determine the standard deviation of your library through multiple variables.\"],\n      img: \"boring\",\n      color: {\n        red: 180,\n        green: 100,\n        blue: 240\n      },\n      state: false\n    }, {\n      title: \"Power Recommends\",\n      path: \"recommends\",\n      auth: true,\n      description: [\"I like this song, but I want one like it but happier. DONE.\", \"Taylor your recommends to fit your exact wishes, and find songs more accuratly attuned to what you're looking for.\", \"Get recommends based on a track, but specify what statistics you'd like your new songs to maintain, or change.\"],\n      img: \"power\",\n      color: {\n        red: 180,\n        green: 230,\n        blue: 100\n      },\n      state: false\n    }],\n    index: 0,\n    libraryData: {\n      topPlayed: [],\n      topArtists: [],\n      complete: {\n        done: false,\n        audioFeaturesDone: false,\n        artistsDone: false,\n        genresDone: false\n      },\n      tracks: [],\n      artists: {},\n      favoriteArtists: [],\n      genres: {},\n      favoriteGenres: [],\n      dates: [],\n      audio_features: {\n        acousticness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        danceability: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        energy: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        instrumentalness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        liveness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        mode: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [-1]\n        },\n        speechiness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        tempo: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [-1]\n        },\n        total: 0,\n        valence: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }\n      },\n      bangers: {\n        value: 0,\n        plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        maxchart: [],\n        minchart: []\n      }\n    },\n    progress: {\n      num: 0,\n      message: \"Pluggin in headphones.\",\n      total: 0\n    },\n    tempBanger: 0,\n    publicUsers: null\n  },\n  mutations: {\n    setUserData: function setUserData(state, userData) {\n      state.userData = userData;\n    },\n    setPublicUsers: function setPublicUsers(state, publicUsers) {\n      state.publicUsers = publicUsers;\n    },\n    setIndex: function setIndex(state, index) {\n      state.index = index;\n    },\n    setInicialized: function setInicialized(state, inicialized) {\n      state.inicialized = inicialized;\n    },\n    setToken: function setToken(state, token) {\n      state.accessToken = token;\n    },\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    setLibraryData: function setLibraryData(state, data) {\n      state.libraryData = data;\n    },\n    setProgress: function setProgress(state) {\n      state.progress.num += 1;\n    },\n    setMessage: function setMessage(state, message) {\n      state.progress.message = message;\n    },\n    setTotal: function setTotal(state, total) {\n      state.progress.total = total;\n    },\n    addTracks: function addTracks(state, tracks) {\n      state.libraryData.tracks = state.libraryData.tracks.concat(tracks);\n    },\n    addBangerValue: function addBangerValue(state, val) {\n      state.libraryData.bangers.value += val;\n    },\n    plotBanger: function plotBanger(state, index) {\n      state.libraryData.bangers.plot[index] += 1;\n    },\n    spliceBanger: function spliceBanger(state, payload) {\n      if (payload.replace != null) state.libraryData.bangers[payload.type].splice(payload.index, payload.num, payload.replace);else state.libraryData.bangers[payload.type].splice(payload.index, payload.num);\n    },\n    pushBanger: function pushBanger(state, payload) {\n      state.libraryData.bangers[payload.type].push(payload.value);\n    },\n    addAudioFeaturesTotal: function addAudioFeaturesTotal(state) {\n      state.libraryData.audio_features.total += 1;\n    },\n    addAudioFeature: function addAudioFeature(state, payload) {\n      state.libraryData.audio_features[payload.key].value += payload.value;\n    },\n    plotAudioFeature: function plotAudioFeature(state, payload) {\n      state.libraryData.audio_features[payload.key].plot[payload.index] += 1;\n    },\n    spliceAudioFeatures: function spliceAudioFeatures(state, payload) {\n      if (payload.replace != null) state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num, payload.replace);else state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num);\n    },\n    pushAudioFeatures: function pushAudioFeatures(state, payload) {\n      state.libraryData.audio_features[payload.key][payload.type].push(payload.value);\n    },\n    spliceFavoriteArtists: function spliceFavoriteArtists(state, payload) {\n      if (payload.replace != null) state.libraryData.favoriteArtists.splice(payload.index, payload.num, payload.replace);else state.libraryData.favoriteArtists.splice(payload.index, payload.num);\n    },\n    pushFavoriteArtists: function pushFavoriteArtists(state, artist) {\n      state.libraryData.favoriteArtists.push(artist);\n    },\n    pushFavoriteGenres: function pushFavoriteGenres(state, genre) {\n      state.libraryData.favoriteGenres.push(genre);\n    },\n    spliceFavoriteGenres: function spliceFavoriteGenres(state, payload) {\n      if (payload.replace != null) state.libraryData.favoriteGenres.splice(payload.index, payload.num, payload.replace);else state.libraryData.favoriteGenres.splice(payload.index, payload.num);\n    },\n    setFavoriteArtistImage: function setFavoriteArtistImage(state, image) {\n      state.libraryData.favoriteArtists[0].image = image;\n    },\n    setComplete: function setComplete(state, payload) {\n      state.libraryData.complete[payload.index] = payload.value;\n    },\n    addGenre: function addGenre(state, payload) {\n      state.libraryData.genres[payload.genre] = payload.value;\n    },\n    addArtist: function addArtist(state, payload) {\n      state.libraryData.artists[payload.name] = payload.value;\n    },\n    addToArtist: function addToArtist(state, artist) {\n      state.libraryData.artists[artist].num += 1;\n    },\n    addToGenre: function addToGenre(state, payload) {\n      state.libraryData.genres[payload.genre].num += payload.num;\n    },\n    pushDate: function pushDate(state) {\n      state.libraryData.dates.push(0);\n    },\n    addToDate: function addToDate(state, date) {\n      state.libraryData.dates[date] += 1;\n    },\n    averageAudioFeature: function averageAudioFeature(state, key) {\n      state.libraryData.audio_features[key].value /= state.progress.total;\n    },\n    setTempBanger: function setTempBanger(state, level) {\n      state.tempBanger = level;\n    },\n    setTopPlayed: function setTopPlayed(state, topPlayed) {\n      state.libraryData.topPlayed = topPlayed;\n    },\n    setTopArtists: function setTopArtists(state, topArtists) {\n      state.libraryData.topArtists = topArtists;\n    }\n  },\n  actions: {\n    getUserData: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"/api/profile/\" + payload.id);\n\n              case 3:\n                response = _context.sent;\n                context.commit('setUserData', response.data);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      function getUserData(_x, _x2) {\n        return _getUserData.apply(this, arguments);\n      }\n\n      return getUserData;\n    }(),\n    saveLibrary: function () {\n      var _saveLibrary = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(context, payload) {\n        var library, keys, charts, j, i, ids, val, k, tracks, trackArtists;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return JSON.parse(JSON.stringify(this.state.libraryData));\n\n              case 3:\n                library = _context2.sent;\n                ;\n                library.tracks = [this.state.libraryData.tracks.length], library.artists = {\n                  num: Object.keys(this.state.libraryData.artists).length\n                }, library.genres = {\n                  num: Object.keys(this.state.libraryData.genres).length\n                }, library.name = payload.name;\n                library.privacy = payload.privacy;\n                keys = Object.keys(library.audio_features);\n                keys.push(\"bangers\");\n                charts = ['minchart', 'maxchart'];\n                j = 0;\n\n              case 11:\n                if (!(j < keys.length)) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                if (!(keys[j] == \"total\")) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                return _context2.abrupt(\"continue\", 26);\n\n              case 14:\n                i = 0;\n\n              case 15:\n                if (!(i < charts.length)) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                ids = [];\n                val = [];\n\n                if (keys[j] == \"bangers\") {\n                  for (k = 0; k < library[keys[j]][charts[i]].length; k++) {\n                    ids.push(library[keys[j]][charts[i]][k].id);\n                    val.push(this.state.libraryData.bangers[charts[i]][k].value);\n                  }\n\n                  library[keys[j]][charts[i]] = [];\n                } else {\n                  for (k = 0; k < library.audio_features[keys[j]][charts[i]].length; k++) {\n                    ids.push(library.audio_features[keys[j]][charts[i]][k].id);\n                    val.push(this.state.libraryData.audio_features[keys[j]][charts[i]][k].value);\n                  }\n\n                  library.audio_features[keys[j]][charts[i]] = [];\n                }\n\n                _context2.next = 21;\n                return this.dispatch('getTracks', ids);\n\n              case 21:\n                tracks = _context2.sent;\n\n                for (k = 0; k < 10; k++) {\n                  trackArtists = tracks.tracks[k].artists.map(function (x) {\n                    return x.name;\n                  });\n\n                  if (keys[j] == \"bangers\") {\n                    library[keys[j]][charts[i]].push({\n                      name: tracks.tracks[k].name,\n                      artists: trackArtists,\n                      image: tracks.tracks[k].album.images[0].url,\n                      value: val[k]\n                    });\n                  } else {\n                    library.audio_features[keys[j]][charts[i]].push({\n                      name: tracks.tracks[k].name,\n                      artists: trackArtists,\n                      image: tracks.tracks[k].album.images[0].url,\n                      value: val[k]\n                    });\n                  }\n                }\n\n              case 23:\n                i++;\n                _context2.next = 15;\n                break;\n\n              case 26:\n                j++;\n                _context2.next = 11;\n                break;\n\n              case 29:\n                _context2.next = 31;\n                return axios.post(\"/api/profile/\" + this.state.user.id, library);\n\n              case 31:\n                _context2.next = 36;\n                break;\n\n              case 33:\n                _context2.prev = 33;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 36:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 33]]);\n      }));\n\n      function saveLibrary(_x3, _x4) {\n        return _saveLibrary.apply(this, arguments);\n      }\n\n      return saveLibrary;\n    }(),\n    getPublicUsers: function () {\n      var _getPublicUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get('/api/profile/');\n\n              case 3:\n                response = _context3.sent;\n                context.commit('setPublicUsers', response.data);\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function getPublicUsers(_x5, _x6) {\n        return _getPublicUsers.apply(this, arguments);\n      }\n\n      return getPublicUsers;\n    }(),\n    changeLibraryData: function changeLibraryData(context, payload) {\n      context.commit('setLibraryData', payload);\n    },\n    parseAccessToken: function () {\n      var _parseAccessToken = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(context) {\n        var token;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                token = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n                  if (item) {\n                    var parts = item.split('=');\n                    initial[parts[0]] = decodeURIComponent(parts[1]);\n                  }\n\n                  return initial;\n                }, {});\n                _context4.next = 3;\n                return context.commit('setToken', token.access_token);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function parseAccessToken(_x7) {\n        return _parseAccessToken.apply(this, arguments);\n      }\n\n      return parseAccessToken;\n    }(),\n    getAccessToken: function getAccessToken(context) {\n      var authEndpoint = 'https://accounts.spotify.com/authorize';\n      var clientId = '42903eeb2bf943c4bd4903370f7a93f5';\n      var redirectUri = 'http://mymusic.andrewdanielyoung.com/redirect/';\n      if (this.state.testing) redirectUri = 'http://localhost:8080/redirect/';\n      var scopes = ['user-read-recently-played', 'user-top-read', 'user-library-read', 'user-read-email'];\n\n      if (!this.state.access_token) {\n        window.location = \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&scope=\").concat(scopes.join('%20'), \"&response_type=token&show_dialog=true\");\n      }\n    },\n    runLibraryAnalysis: function runLibraryAnalysis(context) {\n      this.dispatch(\"retriveData\", {\n        offset: 0,\n        limit: 50\n      });\n    },\n    retriveData: function () {\n      var _retriveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(context, payload) {\n        var now, nt, month, response, ids, i, date, t, diff, j, tracks, keys, topPlayed, topArtists, newTopPlayed, newTopArtists, _i, trackArtists, _i2;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                now = new Date();\n                nt = now.getTime();\n                month = 2626560000;\n                _context5.next = 5;\n                return this.dispatch('getSavedTracks', {\n                  limit: payload.limit,\n                  offset: payload.offset\n                });\n\n              case 5:\n                response = _context5.sent;\n                context.commit('setTotal', response.total);\n                if (this.state.progress.num / this.state.progress.total > .8) context.commit('setMessage', \"♪┏(・o･)┛♪┗ ( ･o･) ┓♪\");else if (this.state.progress.num / this.state.progress.total > .6) context.commit('setMessage', \"Sick beats dude.\");else if (this.state.progress.num / this.state.progress.total > .4) context.commit('setMessage', \"Jamming out to your tunes.\");else if (this.state.progress.num / this.state.progress.total > .2) context.commit('setMessage', \"Beep Bop. Analyzing Data.\");\n                ids = [];\n\n                for (i = 0; i < response.items.length; i++) {\n                  ids.push(response.items[i].track.id);\n                  if (!(response.items[i].track.artists[0].name in this.state.libraryData.artists)) context.commit('addArtist', {\n                    name: response.items[i].track.artists[0].name,\n                    value: {\n                      num: 1,\n                      id: response.items[i].track.artists[0].id\n                    }\n                  });else context.commit('addToArtist', response.items[i].track.artists[0].name);\n                  date = new Date(response.items[i].added_at);\n                  t = date.getTime();\n                  response.items[i].track.date_added = t;\n                  diff = Math.floor((nt - t) / month);\n\n                  if (this.state.libraryData.dates.length - 1 < diff) {\n                    for (j = 0; j < diff - (this.state.libraryData.dates.length - 1); j++) {\n                      context.commit('pushDate');\n                    }\n\n                    context.commit('pushDate');\n                    context.commit('pushDate');\n                  }\n\n                  context.commit('addToDate', diff);\n                }\n\n                _context5.next = 12;\n                return this.dispatch('getAudioFeaturesForTracks', ids);\n\n              case 12:\n                tracks = _context5.sent;\n                _context5.next = 15;\n                return this.dispatch('analyseData', tracks);\n\n              case 15:\n                if (!(response.items.length == 50)) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                this.dispatch('retriveData', {\n                  offset: payload.offset + payload.limit,\n                  limit: payload.limit\n                });\n                _context5.next = 51;\n                break;\n\n              case 19:\n                keys = Object.keys(this.state.libraryData.audio_features);\n                i = 0;\n\n              case 21:\n                if (!(i < keys.length)) {\n                  _context5.next = 28;\n                  break;\n                }\n\n                if (!(keys[i] == \"total\")) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                return _context5.abrupt(\"continue\", 25);\n\n              case 24:\n                context.commit('averageAudioFeature', keys[i]);\n\n              case 25:\n                i++;\n                _context5.next = 21;\n                break;\n\n              case 28:\n                context.commit('setComplete', {\n                  index: \"done\",\n                  value: true\n                });\n                context.commit('setComplete', {\n                  index: \"audioFeaturesDone\",\n                  value: true\n                });\n                console.log('%c Processing Track Audio Features Complete.', 'color: purple;');\n                _context5.next = 33;\n                return this.dispatch('checkArtists');\n\n              case 33:\n                console.log('%c Processing Artists Complete.', 'color: purple;');\n                _context5.next = 36;\n                return this.dispatch('checkGenres');\n\n              case 36:\n                console.log('%c Processing Genres Complete.', 'color: purple;');\n                _context5.next = 39;\n                return this.dispatch('getTopTracks', {\n                  limit: 20,\n                  time_range: \"long_term\"\n                });\n\n              case 39:\n                topPlayed = _context5.sent;\n                _context5.next = 42;\n                return this.dispatch('getTopArtists', {\n                  limit: 20,\n                  time_range: \"long_term\"\n                });\n\n              case 42:\n                topArtists = _context5.sent;\n                newTopPlayed = [];\n                newTopArtists = [];\n\n                for (_i = 0; _i < topPlayed.length; _i++) {\n                  trackArtists = topPlayed[_i].artists.map(function (x) {\n                    return x.name;\n                  });\n                  newTopPlayed.push({\n                    name: topPlayed[_i].name,\n                    artists: trackArtists,\n                    image: topPlayed[_i].album.images[0].url\n                  });\n                }\n\n                for (_i2 = 0; _i2 < topArtists.length; _i2++) {\n                  newTopArtists.push({\n                    name: topArtists[_i2].name,\n                    image: topArtists[_i2].images[0].url,\n                    genres: topArtists[_i2].genres\n                  });\n                }\n\n                _context5.next = 49;\n                return context.commit('setTopPlayed', newTopPlayed);\n\n              case 49:\n                _context5.next = 51;\n                return context.commit('setTopArtists', newTopArtists);\n\n              case 51:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function retriveData(_x8, _x9) {\n        return _retriveData.apply(this, arguments);\n      }\n\n      return retriveData;\n    }(),\n    banger: function banger(context, payload) {\n      var bangerLevel = (payload.tempo - 96 + payload.energy * 100 + payload.danceability * 50) / 210;\n      context.commit('setTempBanger', bangerLevel);\n    },\n    analyseData: function () {\n      var _analyseData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(context, tracks) {\n        var keys, i, bangersPos, j, k, _k, bangindex, _k2, _k3;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                context.commit('addTracks', tracks);\n                keys = Object.keys(this.state.libraryData.audio_features);\n                i = 0;\n\n              case 3:\n                if (!(i < tracks.length)) {\n                  _context6.next = 78;\n                  break;\n                }\n\n                _context6.next = 6;\n                return this.dispatch('banger', {\n                  tempo: tracks[i].tempo,\n                  energy: tracks[i].energy,\n                  danceability: tracks[i].danceability\n                });\n\n              case 6:\n                context.commit('addBangerValue', this.state.tempBanger);\n                bangersPos = Math.floor(this.state.tempBanger * 10);\n                if (bangersPos < this.state.libraryData.bangers.plot.length) context.commit('plotBanger', bangersPos);else context.commit('plotBanger', this.state.libraryData.bangers.plot.length - 1);\n                j = 0;\n\n              case 10:\n                if (!(j < keys.length)) {\n                  _context6.next = 45;\n                  break;\n                }\n\n                if (!(keys[j] == \"total\")) {\n                  _context6.next = 14;\n                  break;\n                }\n\n                context.commit('addAudioFeaturesTotal');\n                return _context6.abrupt(\"continue\", 42);\n\n              case 14:\n                context.commit('addAudioFeature', {\n                  key: keys[j],\n                  value: tracks[i][keys[j]]\n                });\n                if (this.state.libraryData.audio_features[keys[j]].plot[0] != -1) context.commit('plotAudioFeature', {\n                  key: keys[j],\n                  index: Math.floor(tracks[i][keys[j]] * 10)\n                });\n                k = 0;\n\n              case 17:\n                if (!(k < this.state.libraryData.audio_features[keys[j]].minchart.length)) {\n                  _context6.next = 28;\n                  break;\n                }\n\n                if (!(this.state.libraryData.audio_features[keys[j]].minchart[k].value > tracks[i][keys[j]])) {\n                  _context6.next = 22;\n                  break;\n                }\n\n                context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  index: k,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                if (this.state.libraryData.audio_features[keys[j]].minchart.length > 20) context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 28);\n\n              case 22:\n                if (!(k == this.state.libraryData.audio_features[keys[j]].minchart.length - 1 && this.state.libraryData.audio_features[keys[j]].minchart.length < 20)) {\n                  _context6.next = 25;\n                  break;\n                }\n\n                context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                return _context6.abrupt(\"break\", 28);\n\n              case 25:\n                k++;\n                _context6.next = 17;\n                break;\n\n              case 28:\n                if (this.state.libraryData.audio_features[keys[j]].minchart.length == 0) context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                _k = 0;\n\n              case 30:\n                if (!(_k < this.state.libraryData.audio_features[keys[j]].maxchart.length)) {\n                  _context6.next = 41;\n                  break;\n                }\n\n                if (!(this.state.libraryData.audio_features[keys[j]].maxchart[_k].value < tracks[i][keys[j]])) {\n                  _context6.next = 35;\n                  break;\n                }\n\n                context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  index: _k,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                if (this.state.libraryData.audio_features[keys[j]].maxchart.length > 20) context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 41);\n\n              case 35:\n                if (!(_k == this.state.libraryData.audio_features[keys[j]].maxchart.length - 1 && this.state.libraryData.audio_features[keys[j]].maxchart.length < 20)) {\n                  _context6.next = 38;\n                  break;\n                }\n\n                context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                return _context6.abrupt(\"break\", 41);\n\n              case 38:\n                _k++;\n                _context6.next = 30;\n                break;\n\n              case 41:\n                if (this.state.libraryData.audio_features[keys[j]].maxchart.length == 0) context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n\n              case 42:\n                j++;\n                _context6.next = 10;\n                break;\n\n              case 45:\n                _context6.next = 47;\n                return this.dispatch('banger', {\n                  tempo: tracks[i].tempo,\n                  energy: tracks[i].energy,\n                  danceability: tracks[i].danceability\n                });\n\n              case 47:\n                bangindex = this.state.tempBanger;\n                _k2 = 0;\n\n              case 49:\n                if (!(_k2 < this.state.libraryData.bangers.minchart.length)) {\n                  _context6.next = 60;\n                  break;\n                }\n\n                if (!(this.state.libraryData.bangers.minchart[_k2].value > bangindex)) {\n                  _context6.next = 54;\n                  break;\n                }\n\n                context.commit('spliceBanger', {\n                  type: \"minchart\",\n                  index: _k2,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                if (this.state.libraryData.bangers.minchart.length > 20) context.commit('spliceBanger', {\n                  type: \"minchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 60);\n\n              case 54:\n                if (!(_k2 == this.state.libraryData.bangers.minchart.length - 1 && this.state.libraryData.bangers.minchart.length < 20)) {\n                  _context6.next = 57;\n                  break;\n                }\n\n                context.commit('pushBanger', {\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                return _context6.abrupt(\"break\", 60);\n\n              case 57:\n                _k2++;\n                _context6.next = 49;\n                break;\n\n              case 60:\n                if (this.state.libraryData.bangers.minchart.length == 0) context.commit('pushBanger', {\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                _k3 = 0;\n\n              case 62:\n                if (!(_k3 < this.state.libraryData.bangers.maxchart.length)) {\n                  _context6.next = 73;\n                  break;\n                }\n\n                if (!(this.state.libraryData.bangers.maxchart[_k3].value < bangindex)) {\n                  _context6.next = 67;\n                  break;\n                }\n\n                context.commit('spliceBanger', {\n                  type: \"maxchart\",\n                  index: _k3,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                if (this.state.libraryData.bangers.maxchart.length > 20) context.commit('spliceBanger', {\n                  type: \"maxchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 73);\n\n              case 67:\n                if (!(_k3 == this.state.libraryData.bangers.maxchart.length - 1 && this.state.libraryData.bangers.maxchart.length < 20)) {\n                  _context6.next = 70;\n                  break;\n                }\n\n                context.commit('pushBanger', {\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                return _context6.abrupt(\"break\", 73);\n\n              case 70:\n                _k3++;\n                _context6.next = 62;\n                break;\n\n              case 73:\n                if (this.state.libraryData.bangers.maxchart.length == 0) context.commit('pushBanger', {\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                context.commit('setProgress');\n\n              case 75:\n                i++;\n                _context6.next = 3;\n                break;\n\n              case 78:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function analyseData(_x10, _x11) {\n        return _analyseData.apply(this, arguments);\n      }\n\n      return analyseData;\n    }(),\n    checkArtists: function () {\n      var _checkArtists = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(context) {\n        var max, artist, added, i, favoriteArtist;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                max = 4;\n                _context7.t0 = regeneratorRuntime.keys(this.state.libraryData.artists);\n\n              case 2:\n                if ((_context7.t1 = _context7.t0()).done) {\n                  _context7.next = 18;\n                  break;\n                }\n\n                artist = _context7.t1.value;\n                added = false;\n                i = 0;\n\n              case 6:\n                if (!(i < this.state.libraryData.favoriteArtists.length)) {\n                  _context7.next = 15;\n                  break;\n                }\n\n                if (!(this.state.libraryData.favoriteArtists[i].num < this.state.libraryData.artists[artist].num)) {\n                  _context7.next = 11;\n                  break;\n                }\n\n                context.commit('spliceFavoriteArtists', {\n                  index: i,\n                  num: 0,\n                  replace: {\n                    name: artist,\n                    num: this.state.libraryData.artists[artist].num,\n                    id: this.state.libraryData.artists[artist].id\n                  }\n                });\n                added = true;\n                return _context7.abrupt(\"break\", 15);\n\n              case 11:\n                if (this.state.libraryData.favoriteArtists.length > max) context.commit('spliceFavoriteArtists', {\n                  index: this.state.libraryData.favoriteArtists.length - 1,\n                  num: 1,\n                  replace: null\n                });\n\n              case 12:\n                i++;\n                _context7.next = 6;\n                break;\n\n              case 15:\n                if (this.state.libraryData.favoriteArtists.length < max && !added) context.commit('pushFavoriteArtists', {\n                  name: artist,\n                  num: this.state.libraryData.artists[artist].num,\n                  id: this.state.libraryData.artists[artist].id\n                });\n                _context7.next = 2;\n                break;\n\n              case 18:\n                _context7.next = 20;\n                return this.dispatch('getArtist', this.state.libraryData.favoriteArtists[0].id);\n\n              case 20:\n                favoriteArtist = _context7.sent;\n                context.commit('setFavoriteArtistImage', favoriteArtist.images[0].url);\n                context.commit('setComplete', {\n                  index: \"artistsDone\",\n                  value: true\n                });\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function checkArtists(_x12) {\n        return _checkArtists.apply(this, arguments);\n      }\n\n      return checkArtists;\n    }(),\n    checkGenres: function () {\n      var _checkGenres = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(context) {\n        var max, querymax, artistsIds, artist, artistsData, i, j, genre, added;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                max = 4;\n                querymax = 50;\n                artistsIds = [];\n                _context8.t0 = regeneratorRuntime.keys(this.state.libraryData.artists);\n\n              case 4:\n                if ((_context8.t1 = _context8.t0()).done) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                artist = _context8.t1.value;\n\n                if (!(querymax == 0)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                _context8.next = 9;\n                return this.dispatch('getArtists', artistsIds);\n\n              case 9:\n                artistsData = _context8.sent;\n\n                for (i = 0; i < artistsData.artists.length; i++) {\n                  for (j = 0; j < artistsData.artists[i].genres.length; j++) {\n                    if (!(artistsData.artists[i].genres[j] in this.state.libraryData.genres)) context.commit('addGenre', {\n                      genre: artistsData.artists[i].genres[j],\n                      value: {\n                        num: this.state.libraryData.artists[artist].num,\n                        genre: artistsData.artists[i].genres[j]\n                      }\n                    });else context.commit('addToGenre', {\n                      genre: artistsData.artists[i].genres[j],\n                      num: this.state.libraryData.artists[artist].num\n                    });\n                  }\n                }\n\n                querymax = 50;\n                artistsIds = [];\n\n              case 13:\n                if (artist in this.state.libraryData.artists) {\n                  artistsIds.push(this.state.libraryData.artists[artist].id);\n                  querymax -= 1;\n                }\n\n                _context8.next = 4;\n                break;\n\n              case 16:\n                _context8.t2 = regeneratorRuntime.keys(this.state.libraryData.genres);\n\n              case 17:\n                if ((_context8.t3 = _context8.t2()).done) {\n                  _context8.next = 33;\n                  break;\n                }\n\n                genre = _context8.t3.value;\n                added = false;\n                i = 0;\n\n              case 21:\n                if (!(i < this.state.libraryData.favoriteGenres.length)) {\n                  _context8.next = 30;\n                  break;\n                }\n\n                if (!(this.state.libraryData.favoriteGenres[i].num < this.state.libraryData.genres[genre].num)) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                context.commit('spliceFavoriteGenres', {\n                  index: i,\n                  num: 0,\n                  replace: {\n                    genre: genre,\n                    num: this.state.libraryData.genres[genre].num\n                  }\n                });\n                added = true;\n                return _context8.abrupt(\"break\", 30);\n\n              case 26:\n                if (this.state.libraryData.favoriteGenres.length > max) context.commit('spliceFavoriteGenres', {\n                  index: this.state.libraryData.favoriteGenres.length - 1,\n                  num: 1,\n                  replace: null\n                });\n\n              case 27:\n                i++;\n                _context8.next = 21;\n                break;\n\n              case 30:\n                if (this.state.libraryData.favoriteGenres.length < max && !added) context.commit('pushFavoriteGenres', {\n                  genre: genre,\n                  num: this.state.libraryData.genres[genre].num\n                });\n                _context8.next = 17;\n                break;\n\n              case 33:\n                context.commit('setComplete', {\n                  index: \"genresDone\",\n                  value: true\n                });\n\n              case 34:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function checkGenres(_x13) {\n        return _checkGenres.apply(this, arguments);\n      }\n\n      return checkGenres;\n    }(),\n    changeIndex: function changeIndex(context, payload) {\n      context.commit('setIndex', payload.index);\n    },\n    inicializeSpotifyApi: function () {\n      var _inicializeSpotifyApi = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(context) {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                console.log('%c Inicializing Authorization.', 'color: purple;');\n                this.state.spotifyApi.setAccessToken(this.state.accessToken);\n                _context9.next = 4;\n                return context.commit('setInicialized', true);\n\n              case 4:\n                this.dispatch('getUser');\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function inicializeSpotifyApi(_x14) {\n        return _inicializeSpotifyApi.apply(this, arguments);\n      }\n\n      return inicializeSpotifyApi;\n    }(),\n    // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\n    getTopArtists: function () {\n      var _getTopArtists = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                console.log('%c Retrieving Top Played Artists.', 'color: blue;');\n                _context10.next = 4;\n                return this.state.spotifyApi.getMyTopArtists({\n                  limit: payload.limit,\n                  time_range: payload.time_range\n                });\n\n              case 4:\n                response = _context10.sent;\n                return _context10.abrupt(\"return\", response.items);\n\n              case 8:\n                _context10.prev = 8;\n                _context10.t0 = _context10[\"catch\"](0);\n                console.log(_context10.t0);\n\n              case 11:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[0, 8]]);\n      }));\n\n      function getTopArtists(_x15, _x16) {\n        return _getTopArtists.apply(this, arguments);\n      }\n\n      return getTopArtists;\n    }(),\n    // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\n    getTopTracks: function () {\n      var _getTopTracks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                console.log('%c Retrieving Top Played Tracks.', 'color: blue;');\n                _context11.next = 4;\n                return this.state.spotifyApi.getMyTopTracks({\n                  limit: payload.limit,\n                  time_range: payload.time_range\n                });\n\n              case 4:\n                response = _context11.sent;\n                return _context11.abrupt(\"return\", response.items);\n\n              case 8:\n                _context11.prev = 8;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.log(_context11.t0);\n\n              case 11:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[0, 8]]);\n      }));\n\n      function getTopTracks(_x17, _x18) {\n        return _getTopTracks.apply(this, arguments);\n      }\n\n      return getTopTracks;\n    }(),\n    // {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds\n    getRecentlyPlayed: function () {\n      var _getRecentlyPlayed = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                console.log('%c Retrieving Recently Played Tracks.', 'color: blue;');\n                _context12.next = 4;\n                return this.state.spotifyApi.getMyRecentlyPlayedTracks({\n                  limit: payload.limit\n                });\n\n              case 4:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response);\n\n              case 8:\n                _context12.prev = 8;\n                _context12.t0 = _context12[\"catch\"](0);\n                console.log(_context12.t0);\n\n              case 11:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[0, 8]]);\n      }));\n\n      function getRecentlyPlayed(_x19, _x20) {\n        return _getRecentlyPlayed.apply(this, arguments);\n      }\n\n      return getRecentlyPlayed;\n    }(),\n    getTrack: function () {\n      var _getTrack = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(context, track_id) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                console.log('%c Requesting Song Data.', 'color: blue;');\n                _context13.next = 4;\n                return this.state.spotifyApi.getTrack(track_id);\n\n              case 4:\n                response = _context13.sent;\n                return _context13.abrupt(\"return\", response);\n\n              case 8:\n                _context13.prev = 8;\n                _context13.t0 = _context13[\"catch\"](0);\n                console.log(_context13.t0);\n\n              case 11:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[0, 8]]);\n      }));\n\n      function getTrack(_x21, _x22) {\n        return _getTrack.apply(this, arguments);\n      }\n\n      return getTrack;\n    }(),\n    getTracks: function () {\n      var _getTracks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14(context, track_ids) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                console.log('%c Requesting Songs Data.', 'color: blue;');\n                _context14.next = 4;\n                return this.state.spotifyApi.getTracks(track_ids);\n\n              case 4:\n                response = _context14.sent;\n                return _context14.abrupt(\"return\", response);\n\n              case 8:\n                _context14.prev = 8;\n                _context14.t0 = _context14[\"catch\"](0);\n                console.log(_context14.t0);\n\n              case 11:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[0, 8]]);\n      }));\n\n      function getTracks(_x23, _x24) {\n        return _getTracks.apply(this, arguments);\n      }\n\n      return getTracks;\n    }(),\n    // {artistId: String}\n    getArtist: function () {\n      var _getArtist = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15(context, id) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.prev = 0;\n                console.log('%c Requesting Artist.', 'color: blue;');\n                _context15.next = 4;\n                return this.state.spotifyApi.getArtist(id);\n\n              case 4:\n                response = _context15.sent;\n                return _context15.abrupt(\"return\", response);\n\n              case 8:\n                _context15.prev = 8;\n                _context15.t0 = _context15[\"catch\"](0);\n                console.log(_context15.t0);\n\n              case 11:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[0, 8]]);\n      }));\n\n      function getArtist(_x25, _x26) {\n        return _getArtist.apply(this, arguments);\n      }\n\n      return getArtist;\n    }(),\n    // []\n    getArtists: function () {\n      var _getArtists = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16(context, ids) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.prev = 0;\n                console.log('%c Requesting Artists.', 'color: blue;');\n                _context16.next = 4;\n                return this.state.spotifyApi.getArtists(ids);\n\n              case 4:\n                response = _context16.sent;\n                return _context16.abrupt(\"return\", response);\n\n              case 8:\n                _context16.prev = 8;\n                _context16.t0 = _context16[\"catch\"](0);\n                console.log(_context16.t0);\n\n              case 11:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[0, 8]]);\n      }));\n\n      function getArtists(_x27, _x28) {\n        return _getArtists.apply(this, arguments);\n      }\n\n      return getArtists;\n    }(),\n    // Array IDs\n    getAudioFeaturesForTracks: function () {\n      var _getAudioFeaturesForTracks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee17(context, track_ids) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.prev = 0;\n                console.log('%c Requesting Song Data.', 'color: blue;');\n                _context17.next = 4;\n                return this.state.spotifyApi.getAudioFeaturesForTracks(track_ids);\n\n              case 4:\n                response = _context17.sent;\n                return _context17.abrupt(\"return\", response.audio_features);\n\n              case 8:\n                _context17.prev = 8;\n                _context17.t0 = _context17[\"catch\"](0);\n                console.log(_context17.t0);\n\n              case 11:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[0, 8]]);\n      }));\n\n      function getAudioFeaturesForTracks(_x29, _x30) {\n        return _getAudioFeaturesForTracks.apply(this, arguments);\n      }\n\n      return getAudioFeaturesForTracks;\n    }(),\n    getAudioFeaturesForTrack: function () {\n      var _getAudioFeaturesForTrack = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee18(context, track_id) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.prev = 0;\n                console.log('%c Requesting Song Analysis.', 'color: blue;');\n                _context18.next = 4;\n                return this.state.spotifyApi.getAudioFeaturesForTracks([track_id]);\n\n              case 4:\n                response = _context18.sent;\n                return _context18.abrupt(\"return\", response.audio_features[0]);\n\n              case 8:\n                _context18.prev = 8;\n                _context18.t0 = _context18[\"catch\"](0);\n                console.log(_context18.t0);\n\n              case 11:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[0, 8]]);\n      }));\n\n      function getAudioFeaturesForTrack(_x31, _x32) {\n        return _getAudioFeaturesForTrack.apply(this, arguments);\n      }\n\n      return getAudioFeaturesForTrack;\n    }(),\n    getAudioAnalysisForTrack: function () {\n      var _getAudioAnalysisForTrack = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee19(context, track_id) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.prev = 0;\n                console.log('%c Requesting Audio Analysis.', 'color: blue;');\n                _context19.next = 4;\n                return this.state.spotifyApi.getAudioAnalysisForTrack(track_id);\n\n              case 4:\n                response = _context19.sent;\n                return _context19.abrupt(\"return\", response);\n\n              case 8:\n                _context19.prev = 8;\n                _context19.t0 = _context19[\"catch\"](0);\n                console.log(_context19.t0);\n\n              case 11:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[0, 8]]);\n      }));\n\n      function getAudioAnalysisForTrack(_x33, _x34) {\n        return _getAudioAnalysisForTrack.apply(this, arguments);\n      }\n\n      return getAudioAnalysisForTrack;\n    }(),\n    // {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\n    getRecomendations: function () {\n      var _getRecomendations = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee20(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.prev = 0;\n                console.log('%c Requesting Recommendations.', 'color: blue;');\n                _context20.next = 4;\n                return this.state.spotifyApi.getRecommendations(payload);\n\n              case 4:\n                response = _context20.sent;\n                console.table(response);\n                return _context20.abrupt(\"return\", response);\n\n              case 9:\n                _context20.prev = 9;\n                _context20.t0 = _context20[\"catch\"](0);\n                console.log(_context20.t0);\n\n              case 12:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[0, 9]]);\n      }));\n\n      function getRecomendations(_x35, _x36) {\n        return _getRecomendations.apply(this, arguments);\n      }\n\n      return getRecomendations;\n    }(),\n    // {limit: 1-50, offset: first index}\n    getSavedTracks: function () {\n      var _getSavedTracks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee21(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.prev = 0;\n                console.log('%c Requesting Library Data. ' + payload.offset + '-' + (payload.offset + payload.limit), 'color: blue;');\n                _context21.next = 4;\n                return this.state.spotifyApi.getMySavedTracks({\n                  limit: payload.limit,\n                  offset: payload.offset\n                });\n\n              case 4:\n                response = _context21.sent;\n                return _context21.abrupt(\"return\", response);\n\n              case 8:\n                _context21.prev = 8;\n                _context21.t0 = _context21[\"catch\"](0);\n                console.log(_context21.t0);\n\n              case 11:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[0, 8]]);\n      }));\n\n      function getSavedTracks(_x37, _x38) {\n        return _getSavedTracks.apply(this, arguments);\n      }\n\n      return getSavedTracks;\n    }(),\n    // None\n    getUser: function () {\n      var _getUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee22(context) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.prev = 0;\n\n                if (!this.state.inicialized) {\n                  _context22.next = 8;\n                  break;\n                }\n\n                console.log('%c Requesting user Data.', 'color: blue;');\n                _context22.next = 5;\n                return this.state.spotifyApi.getMe();\n\n              case 5:\n                response = _context22.sent;\n                _context22.next = 8;\n                return context.commit('setUser', response);\n\n              case 8:\n                _context22.next = 13;\n                break;\n\n              case 10:\n                _context22.prev = 10;\n                _context22.t0 = _context22[\"catch\"](0);\n                console.log(_context22.t0);\n\n              case 13:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[0, 10]]);\n      }));\n\n      function getUser(_x39) {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }(),\n    // Array IDs\n    searchSpotify: function () {\n      var _searchSpotify = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee23(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.prev = 0;\n                console.log('%c Searching.', 'color: blue;');\n                _context23.next = 4;\n                return this.state.spotifyApi.search(payload.query, ['track'], {\n                  limit: 25\n                });\n\n              case 4:\n                response = _context23.sent;\n                return _context23.abrupt(\"return\", response.tracks.items);\n\n              case 8:\n                _context23.prev = 8;\n                _context23.t0 = _context23[\"catch\"](0);\n                console.log(_context23.t0);\n\n              case 11:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[0, 8]]);\n      }));\n\n      function searchSpotify(_x40, _x41) {\n        return _searchSpotify.apply(this, arguments);\n      }\n\n      return searchSpotify;\n    }()\n  }\n});",{"version":3,"sources":["C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\store.js"],"names":["Vue","Vuex","axios","SpotifyWebApi","require","use","Store","state","testing","spotifyApi","accessToken","user","inicialized","userData","apps","title","path","auth","description","img","color","red","green","blue","index","libraryData","topPlayed","topArtists","complete","done","audioFeaturesDone","artistsDone","genresDone","tracks","artists","favoriteArtists","genres","favoriteGenres","dates","audio_features","acousticness","value","maxchart","minchart","plot","danceability","energy","instrumentalness","liveness","mode","speechiness","tempo","total","valence","bangers","progress","num","message","tempBanger","publicUsers","mutations","setUserData","setPublicUsers","setIndex","setInicialized","setToken","token","setUser","setLibraryData","data","setProgress","setMessage","setTotal","addTracks","concat","addBangerValue","val","plotBanger","spliceBanger","payload","replace","type","splice","pushBanger","push","addAudioFeaturesTotal","addAudioFeature","key","plotAudioFeature","spliceAudioFeatures","pushAudioFeatures","spliceFavoriteArtists","pushFavoriteArtists","artist","pushFavoriteGenres","genre","spliceFavoriteGenres","setFavoriteArtistImage","image","setComplete","addGenre","addArtist","name","addToArtist","addToGenre","pushDate","addToDate","date","averageAudioFeature","setTempBanger","level","setTopPlayed","setTopArtists","actions","getUserData","context","get","id","response","commit","console","log","saveLibrary","JSON","parse","stringify","library","length","Object","keys","privacy","charts","j","i","ids","k","dispatch","trackArtists","map","x","album","images","url","post","getPublicUsers","changeLibraryData","parseAccessToken","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","getAccessToken","authEndpoint","clientId","redirectUri","scopes","join","runLibraryAnalysis","offset","limit","retriveData","now","Date","nt","getTime","month","items","track","added_at","t","date_added","diff","Math","floor","time_range","newTopPlayed","newTopArtists","banger","bangerLevel","analyseData","bangersPos","bangindex","checkArtists","max","added","favoriteArtist","checkGenres","querymax","artistsIds","artistsData","changeIndex","inicializeSpotifyApi","setAccessToken","getTopArtists","getMyTopArtists","getTopTracks","getMyTopTracks","getRecentlyPlayed","getMyRecentlyPlayedTracks","getTrack","track_id","getTracks","track_ids","getArtist","getArtists","getAudioFeaturesForTracks","getAudioFeaturesForTrack","getAudioAnalysisForTrack","getRecomendations","getRecommendations","table","getSavedTracks","getMySavedTracks","getUser","getMe","searchSpotify","search","query"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios';\r\n\r\nvar SpotifyWebApi = require('spotify-web-api-js');\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    testing: false,\r\n    spotifyApi: new SpotifyWebApi(),\r\n    accessToken: \"\",\r\n    user: null,\r\n    inicialized: false,\r\n    userData: null,\r\n    apps: [\r\n      {\r\n        title: \"Song Analysis\",\r\n        path: \"songanalysis\",\r\n        auth: false,\r\n        description: [\r\n          \"View in-depth information about a track including it's happiness, energy and danceability!\",\r\n          \"After running Library Analysis, Song Analisis will provide additional information based on your Library's statistics.\",\r\n        ],\r\n        img: \"search\",\r\n        color: {red: 238, green: 126, blue: 137},\r\n        state: true,\r\n      },\r\n      {\r\n        title: \"My Charts\",\r\n        path: \"mycharts\",\r\n        auth: true,\r\n        description: [\r\n          \"View your personalized top tracks and artists.\",\r\n          \"View either with a time range of your choice! View your top tracks of all time, or your favorite artists over the last few weeks.\"\r\n        ],\r\n        img: \"chart\",\r\n        color: {red: 230, green: 224, blue: 60},\r\n        state: true,\r\n      },\r\n      {\r\n        title: \"Library Analysis\",\r\n        path: \"libraryanalysis\",\r\n        auth: true,\r\n        description: [\r\n          \"How happy is your library? Who is your top saved artist? What are you slowest songs?\",\r\n          \"Discover the averages and extremes within your library.\",\r\n          \"Library Analysis gathers all data relavant to your library and process' out some cool statistics!\"\r\n        ],\r\n        img: \"library\",\r\n        color: {red: 240, green: 100, blue: 50},\r\n        state: true,\r\n      },\r\n      {\r\n        title: \"My Music Mood\",\r\n        path: \"mymusicmood\",\r\n        auth: true,\r\n        description: [\r\n          \"What does your music say about you?\",\r\n          \"Based on either your most recently played, or recent top tracks, My Music Mood will attempt to analyse tracks you've been into lately and determine your mood!\",\r\n        ],\r\n        img: \"musicmood\",\r\n        color: {red: 255, green: 165, blue: 30},\r\n        state: false,\r\n      },\r\n      {\r\n        title: \"Boring-Radar\",\r\n        path: \"boring\",\r\n        auth: true,\r\n        description: [\r\n          \"Is your music taste BORING?\",\r\n          \"The Boring-Radar will either confirm or rebute your greatest fears by analysing data from Library Analysis to determine the standard deviation of your library through multiple variables.\",\r\n        ],\r\n        img: \"boring\",\r\n        color: {red: 180, green: 100, blue: 240},\r\n        state: false,\r\n      },\r\n      {\r\n        title: \"Power Recommends\",\r\n        path: \"recommends\",\r\n        auth: true,\r\n        description: [\r\n          \"I like this song, but I want one like it but happier. DONE.\",\r\n          \"Taylor your recommends to fit your exact wishes, and find songs more accuratly attuned to what you're looking for.\",\r\n          \"Get recommends based on a track, but specify what statistics you'd like your new songs to maintain, or change.\",\r\n        ],\r\n        img: \"power\",\r\n        color: {red: 180, green: 230, blue: 100},\r\n        state: false,\r\n      }\r\n    ],\r\n    index: 0,\r\n    libraryData: {\r\n      topPlayed: [],\r\n      topArtists: [],\r\n      complete: {\r\n        done: false,\r\n        audioFeaturesDone: false, \r\n        artistsDone: false,\r\n        genresDone: false,\r\n      },\r\n      tracks: [],\r\n      artists: {},\r\n      favoriteArtists: [],\r\n      genres: {},\r\n      favoriteGenres: [],\r\n      dates: [],\r\n      audio_features: {\r\n        acousticness: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        danceability: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        energy: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        instrumentalness: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        liveness: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        mode: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [-1],\r\n        },\r\n        speechiness: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        tempo: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [-1],\r\n        },\r\n        total: 0,\r\n        valence: \r\n        {\r\n          value: 0,\r\n          maxchart: [],\r\n          minchart: [],\r\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\r\n        },\r\n      },\r\n      bangers: {\r\n        value: 0,\r\n        plot: [0,0,0,0,0,0,0,0,0,0],\r\n        maxchart: [],\r\n        minchart: [],\r\n      },\r\n    },\r\n    progress: {\r\n      num: 0,\r\n      message: \"Pluggin in headphones.\",\r\n      total: 0,\r\n    },\r\n    tempBanger: 0,\r\n    publicUsers: null,\r\n  },\r\n  mutations: {\r\n    setUserData(state, userData) {\r\n      state.userData = userData;\r\n    },\r\n    setPublicUsers(state, publicUsers) {\r\n      state.publicUsers = publicUsers;\r\n    },\r\n    setIndex(state, index) {\r\n      state.index = index;\r\n    },\r\n    setInicialized(state, inicialized) {\r\n      state.inicialized = inicialized;\r\n    },\r\n    setToken(state, token) {\r\n      state.accessToken = token;\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    setLibraryData(state, data) {\r\n      state.libraryData = data;\r\n    },\r\n    setProgress(state) {\r\n      state.progress.num += 1;\r\n    },\r\n    setMessage(state, message) {\r\n      state.progress.message = message;\r\n    },\r\n    setTotal(state, total) {\r\n      state.progress.total = total;\r\n    },\r\n    addTracks(state, tracks) {\r\n      state.libraryData.tracks = state.libraryData.tracks.concat(tracks);\r\n    },\r\n    addBangerValue(state, val) {\r\n      state.libraryData.bangers.value += val;\r\n    },\r\n    plotBanger(state, index) {\r\n      state.libraryData.bangers.plot[index] += 1;\r\n    },\r\n    spliceBanger(state, payload) {\r\n      if (payload.replace != null)\r\n        state.libraryData.bangers[payload.type].splice(payload.index, payload.num, payload.replace);\r\n      else \r\n        state.libraryData.bangers[payload.type].splice(payload.index, payload.num);\r\n    },\r\n    pushBanger(state, payload) {\r\n      state.libraryData.bangers[payload.type].push(payload.value);\r\n    },\r\n    addAudioFeaturesTotal(state) {\r\n      state.libraryData.audio_features.total += 1;\r\n    },\r\n    addAudioFeature(state, payload) {\r\n      state.libraryData.audio_features[payload.key].value += payload.value;\r\n    },\r\n    plotAudioFeature(state, payload) {\r\n      state.libraryData.audio_features[payload.key].plot[payload.index] += 1;\r\n    },\r\n    spliceAudioFeatures(state, payload) {\r\n      if (payload.replace != null)\r\n        state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num, payload.replace);\r\n      else \r\n        state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num);\r\n    },\r\n    pushAudioFeatures(state, payload) {\r\n      state.libraryData.audio_features[payload.key][payload.type].push(payload.value);\r\n    },\r\n    spliceFavoriteArtists(state, payload) {\r\n      if (payload.replace != null)\r\n        state.libraryData.favoriteArtists.splice(payload.index, payload.num, payload.replace);\r\n      else\r\n        state.libraryData.favoriteArtists.splice(payload.index, payload.num);\r\n    }, \r\n    pushFavoriteArtists(state, artist) {\r\n      state.libraryData.favoriteArtists.push(artist);\r\n    },\r\n    pushFavoriteGenres(state, genre) {\r\n      state.libraryData.favoriteGenres.push(genre);\r\n    },\r\n    spliceFavoriteGenres(state, payload) {\r\n      if (payload.replace != null)\r\n        state.libraryData.favoriteGenres.splice(payload.index, payload.num, payload.replace);\r\n      else\r\n        state.libraryData.favoriteGenres.splice(payload.index, payload.num);\r\n    }, \r\n    setFavoriteArtistImage(state, image) {\r\n      state.libraryData.favoriteArtists[0].image = image;\r\n    },\r\n    setComplete(state, payload) {\r\n      state.libraryData.complete[payload.index] = payload.value;\r\n    },\r\n    addGenre(state, payload) {\r\n      state.libraryData.genres[payload.genre] = payload.value;\r\n    },\r\n    addArtist(state, payload) {\r\n      state.libraryData.artists[payload.name] = payload.value;\r\n    },\r\n    addToArtist(state, artist) {\r\n      state.libraryData.artists[artist].num += 1;\r\n    },\r\n    addToGenre(state, payload) {\r\n      state.libraryData.genres[payload.genre].num += payload.num;\r\n    },\r\n    pushDate(state) {\r\n      state.libraryData.dates.push(0);\r\n    },\r\n    addToDate(state, date) {\r\n      state.libraryData.dates[date] += 1;\r\n    },\r\n    averageAudioFeature(state, key){\r\n      state.libraryData.audio_features[key].value /= state.progress.total;\r\n    },\r\n    setTempBanger(state, level) {\r\n      state.tempBanger = level;\r\n    },\r\n    setTopPlayed(state, topPlayed) {\r\n      state.libraryData.topPlayed = topPlayed;\r\n    },\r\n    setTopArtists(state, topArtists) {\r\n      state.libraryData.topArtists = topArtists;\r\n    }\r\n  },\r\n  actions: {\r\n    async getUserData(context, payload) {\r\n      try {\r\n        let response = await axios.get(\"/api/profile/\" + payload.id);\r\n        context.commit('setUserData', response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async saveLibrary(context, payload) {\r\n      try {\r\n        let library = await JSON.parse(JSON.stringify(this.state.libraryData));;\r\n        library.tracks = [this.state.libraryData.tracks.length],\r\n        library.artists = {num: (Object.keys(this.state.libraryData.artists)).length},\r\n        library.genres = {num: (Object.keys(this.state.libraryData.genres)).length},\r\n        library.name = payload.name;\r\n        library.privacy = payload.privacy;\r\n\r\n        let keys = Object.keys(library.audio_features);\r\n        keys.push(\"bangers\");\r\n        let charts = ['minchart', 'maxchart'];\r\n\r\n        for (var j = 0; j < keys.length; j++)\r\n        {\r\n          if (keys[j] == \"total\")\r\n            continue;\r\n          for (var i = 0; i < charts.length; i++)\r\n          {\r\n            let ids = [];\r\n            let val = [];\r\n            if (keys[j] == \"bangers\")\r\n            {\r\n              for (var k = 0; k < library[keys[j]][charts[i]].length; k++)\r\n              {\r\n                ids.push(library[keys[j]][charts[i]][k].id);\r\n                val.push(this.state.libraryData.bangers[charts[i]][k].value);\r\n              }\r\n              library[keys[j]][charts[i]] = [];\r\n            }\r\n            else {\r\n              for (var k = 0; k < library.audio_features[keys[j]][charts[i]].length; k++)\r\n              {\r\n                ids.push(library.audio_features[keys[j]][charts[i]][k].id);\r\n                val.push(this.state.libraryData.audio_features[keys[j]][charts[i]][k].value);\r\n              }\r\n              library.audio_features[keys[j]][charts[i]] = [];\r\n            }\r\n            let tracks = await this.dispatch('getTracks', ids);\r\n            for (var k = 0; k < 10; k++)\r\n            {\r\n              let trackArtists = tracks.tracks[k].artists.map(x => x.name);\r\n              if (keys[j] == \"bangers\")\r\n              {\r\n                library[keys[j]][charts[i]].push({name: tracks.tracks[k].name, artists: trackArtists, image: tracks.tracks[k].album.images[0].url, value: val[k]});\r\n              }\r\n              else\r\n              {\r\n                library.audio_features[keys[j]][charts[i]].push({name: tracks.tracks[k].name, artists: trackArtists, image: tracks.tracks[k].album.images[0].url, value: val[k]});\r\n              }\r\n            }\r\n          }\r\n        }\r\n        await axios.post(\"/api/profile/\" + this.state.user.id, library);\r\n      } catch(error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async getPublicUsers(context, payload) {\r\n      try {\r\n        let response = await axios.get('/api/profile/');\r\n        context.commit('setPublicUsers', response.data);\r\n      } catch(error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    changeLibraryData(context, payload) {\r\n      context.commit('setLibraryData', payload);\r\n    },\r\n    async parseAccessToken(context)\r\n    {\r\n      let token = window.location.hash.substring(1).split('&')\r\n      .reduce(function (initial, item) {\r\n        if (item) {\r\n          var parts = item.split('=');\r\n          initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n      }, {});\r\n      await context.commit('setToken', token.access_token);\r\n    },\r\n    getAccessToken(context)\r\n    {\r\n      const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n      const clientId = '42903eeb2bf943c4bd4903370f7a93f5';\r\n      let redirectUri = 'http://mymusic.andrewdanielyoung.com/redirect/';\r\n      if (this.state.testing)\r\n        redirectUri = 'http://localhost:8080/redirect/';\r\n      const scopes = [\r\n        'user-read-recently-played',\r\n        'user-top-read',\r\n        'user-library-read',\r\n        'user-read-email',\r\n      ];\r\n      if (!this.state.access_token) {\r\n        window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\r\n      }\r\n    },\r\n    runLibraryAnalysis(context) {\r\n      this.dispatch(\"retriveData\", {offset: 0, limit: 50});\r\n    },\r\n    async retriveData(context, payload) {\r\n      let now = new Date();\r\n      let nt = now.getTime();\r\n      let month = 2626560000;\r\n      let response = await this.dispatch('getSavedTracks',{limit: payload.limit, offset: payload.offset});\r\n      context.commit('setTotal', response.total);\r\n      if (this.state.progress.num / this.state.progress.total > .8)\r\n        context.commit('setMessage', \"♪┏(・o･)┛♪┗ ( ･o･) ┓♪\");\r\n      else if (this.state.progress.num / this.state.progress.total > .6)\r\n        context.commit('setMessage', \"Sick beats dude.\");\r\n      else if (this.state.progress.num / this.state.progress.total > .4)\r\n        context.commit('setMessage', \"Jamming out to your tunes.\");\r\n      else if (this.state.progress.num / this.state.progress.total > .2)\r\n        context.commit('setMessage', \"Beep Bop. Analyzing Data.\");\r\n      let ids = [];\r\n      for (var i = 0; i < response.items.length; i++)\r\n      {\r\n        ids.push(response.items[i].track.id);\r\n        if (!(response.items[i].track.artists[0].name in this.state.libraryData.artists))\r\n          context.commit('addArtist', {name: response.items[i].track.artists[0].name, value: {num: 1, id: response.items[i].track.artists[0].id}});\r\n        else \r\n          context.commit('addToArtist', response.items[i].track.artists[0].name);\r\n          \r\n        let date = new Date(response.items[i].added_at);\r\n        let t = date.getTime();\r\n        response.items[i].track.date_added = t;\r\n        let diff = Math.floor((nt - t) / month);\r\n        if (this.state.libraryData.dates.length - 1 < diff)\r\n        {\r\n          for (var j = 0; j < (diff - (this.state.libraryData.dates.length - 1)); j++)\r\n          {\r\n            context.commit('pushDate');\r\n          }\r\n          context.commit('pushDate');\r\n          context.commit('pushDate');\r\n        }\r\n        context.commit('addToDate', diff);\r\n      }\r\n      let tracks = await this.dispatch('getAudioFeaturesForTracks', ids);\r\n      await this.dispatch('analyseData', tracks);\r\n      if (response.items.length == 50)\r\n        this.dispatch('retriveData', {offset: payload.offset + payload.limit, limit: payload.limit});\r\n      else {\r\n        let keys = Object.keys(this.state.libraryData.audio_features);\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n          if (keys[i] == \"total\")\r\n            continue;\r\n          context.commit('averageAudioFeature', keys[i]);\r\n        }\r\n        context.commit('setComplete', {index: \"done\", value: true});\r\n        context.commit('setComplete', {index: \"audioFeaturesDone\", value: true});\r\n        console.log('%c Processing Track Audio Features Complete.', 'color: purple;');\r\n        await this.dispatch('checkArtists');\r\n        console.log('%c Processing Artists Complete.', 'color: purple;');\r\n        await this.dispatch('checkGenres');\r\n        console.log('%c Processing Genres Complete.', 'color: purple;');\r\n        let topPlayed = await this.dispatch('getTopTracks',{limit: 20, time_range: \"long_term\"});\r\n        let topArtists = await this.dispatch('getTopArtists',{limit: 20, time_range: \"long_term\"});\r\n        let newTopPlayed = [];\r\n        let newTopArtists = [];\r\n        for (let i = 0; i < topPlayed.length; i++)\r\n        {\r\n          let trackArtists = topPlayed[i].artists.map(x => x.name);\r\n          newTopPlayed.push({name: topPlayed[i].name, artists: trackArtists, image: topPlayed[i].album.images[0].url});\r\n        }\r\n        for (let i = 0; i < topArtists.length; i++)\r\n        {\r\n          newTopArtists.push({name: topArtists[i].name, image: topArtists[i].images[0].url, genres: topArtists[i].genres});\r\n        }\r\n        await context.commit('setTopPlayed', newTopPlayed);\r\n        await context.commit('setTopArtists', newTopArtists);\r\n      }\r\n    },\r\n    banger(context, payload) {\r\n      let bangerLevel = ((payload.tempo - 96 + (payload.energy * 100) + (payload.danceability*50)) / 210);\r\n      context.commit('setTempBanger', bangerLevel);\r\n    },\r\n    async analyseData(context, tracks) {\r\n      context.commit('addTracks', tracks);\r\n      let keys = Object.keys(this.state.libraryData.audio_features);\r\n      for (let i = 0; i < tracks.length; i++)\r\n      {\r\n        await this.dispatch('banger', {tempo: tracks[i].tempo, energy: tracks[i].energy, danceability: tracks[i].danceability});\r\n        context.commit('addBangerValue', this.state.tempBanger);\r\n        let bangersPos = (Math.floor(this.state.tempBanger * 10));\r\n        if (bangersPos < this.state.libraryData.bangers.plot.length)\r\n          context.commit('plotBanger', bangersPos);\r\n        else\r\n          context.commit('plotBanger', this.state.libraryData.bangers.plot.length - 1);\r\n        for (let j = 0; j < keys.length; j++)\r\n        {\r\n          if (keys[j] == \"total\")\r\n          {\r\n            context.commit('addAudioFeaturesTotal');\r\n            continue;\r\n          }\r\n          context.commit('addAudioFeature', {key: keys[j], value: tracks[i][keys[j]]})\r\n          if (this.state.libraryData.audio_features[keys[j]].plot[0] != -1)\r\n            context.commit('plotAudioFeature', {key: keys[j], index: (Math.floor(tracks[i][keys[j]] * 10))})\r\n          for (let k = 0; k < this.state.libraryData.audio_features[keys[j]].minchart.length; k++)\r\n          {\r\n            if (this.state.libraryData.audio_features[keys[j]].minchart[k].value > tracks[i][keys[j]])\r\n            {\r\n              context.commit('spliceAudioFeatures', {key: keys[j], type: \"minchart\", index: k, num: 0, replace: {id: tracks[i].id, value: tracks[i][keys[j]]}});\r\n              if (this.state.libraryData.audio_features[keys[j]].minchart.length > 20)\r\n                context.commit('spliceAudioFeatures', {key: keys[j], type: \"minchart\", index: 20, num: 1, replace: null});\r\n              break;\r\n            }\r\n            if (k == this.state.libraryData.audio_features[keys[j]].minchart.length - 1 && this.state.libraryData.audio_features[keys[j]].minchart.length < 20)\r\n            {\r\n              context.commit('pushAudioFeatures', {key: keys[j], type: \"minchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\r\n              break;\r\n            }\r\n          }\r\n          if (this.state.libraryData.audio_features[keys[j]].minchart.length == 0)\r\n            context.commit('pushAudioFeatures', {key: keys[j], type: \"minchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\r\n          for (let k = 0; k < this.state.libraryData.audio_features[keys[j]].maxchart.length; k++)\r\n          {\r\n            if (this.state.libraryData.audio_features[keys[j]].maxchart[k].value < tracks[i][keys[j]])\r\n            {\r\n              context.commit('spliceAudioFeatures', {key: keys[j], type: \"maxchart\", index: k, num: 0, replace: {id: tracks[i].id, value: tracks[i][keys[j]]}});\r\n              if (this.state.libraryData.audio_features[keys[j]].maxchart.length > 20)\r\n                context.commit('spliceAudioFeatures', {key: keys[j], type: \"maxchart\", index: 20, num: 1, replace: null});\r\n              break;\r\n            }\r\n            if (k == this.state.libraryData.audio_features[keys[j]].maxchart.length - 1 && this.state.libraryData.audio_features[keys[j]].maxchart.length < 20)\r\n            {\r\n              context.commit('pushAudioFeatures', {key: keys[j], type: \"maxchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\r\n              break;\r\n            }\r\n          }\r\n          if (this.state.libraryData.audio_features[keys[j]].maxchart.length == 0)\r\n            context.commit('pushAudioFeatures', {key: keys[j], type: \"maxchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\r\n        }\r\n        await this.dispatch('banger', {tempo: tracks[i].tempo, energy: tracks[i].energy, danceability: tracks[i].danceability});\r\n        let bangindex = this.state.tempBanger;\r\n        for (let k = 0; k < this.state.libraryData.bangers.minchart.length; k++)\r\n        {\r\n          if (this.state.libraryData.bangers.minchart[k].value > bangindex)\r\n          {\r\n            context.commit('spliceBanger', {type: \"minchart\", index: k, num: 0, replace: {id: tracks[i].id, value: bangindex}});\r\n            if (this.state.libraryData.bangers.minchart.length > 20)\r\n              context.commit('spliceBanger', {type: \"minchart\", index: 20, num: 1, replace: null});\r\n            break;\r\n          }\r\n          if (k == this.state.libraryData.bangers.minchart.length - 1 && this.state.libraryData.bangers.minchart.length < 20)\r\n          {\r\n            context.commit('pushBanger', {type: \"minchart\", value: {id: tracks[i].id, value: bangindex}});\r\n            break;\r\n          }\r\n        }\r\n        if (this.state.libraryData.bangers.minchart.length == 0)\r\n          context.commit('pushBanger', {type: \"minchart\", value: {id: tracks[i].id, value: bangindex}});\r\n        for (let k = 0; k < this.state.libraryData.bangers.maxchart.length; k++)\r\n        {\r\n          if (this.state.libraryData.bangers.maxchart[k].value < bangindex)\r\n          {\r\n            context.commit('spliceBanger', {type: \"maxchart\", index: k, num: 0, replace: {id: tracks[i].id, value: bangindex}});\r\n            if (this.state.libraryData.bangers.maxchart.length > 20)\r\n              context.commit('spliceBanger', {type: \"maxchart\", index: 20, num: 1, replace: null});\r\n            break;\r\n          }\r\n          if (k == this.state.libraryData.bangers.maxchart.length - 1 && this.state.libraryData.bangers.maxchart.length < 20)\r\n          {\r\n            context.commit('pushBanger', {type: \"maxchart\", value: {id: tracks[i].id, value: bangindex}});\r\n            break;\r\n          }\r\n        }\r\n        if (this.state.libraryData.bangers.maxchart.length == 0)\r\n          context.commit('pushBanger', {type: \"maxchart\", value: {id: tracks[i].id, value: bangindex}});\r\n        context.commit('setProgress');\r\n      }\r\n    },\r\n    async checkArtists(context) {\r\n      let max = 4;\r\n      for (var artist in this.state.libraryData.artists) {\r\n        let added = false;\r\n        for (var i = 0; i < this.state.libraryData.favoriteArtists.length; i++)\r\n        {\r\n          if (this.state.libraryData.favoriteArtists[i].num < this.state.libraryData.artists[artist].num)\r\n          {\r\n            context.commit('spliceFavoriteArtists', {index: i, num: 0, replace: {name: artist, num: this.state.libraryData.artists[artist].num, id: this.state.libraryData.artists[artist].id}});\r\n            added = true;\r\n            break;\r\n          }\r\n          if (this.state.libraryData.favoriteArtists.length > max)\r\n            context.commit('spliceFavoriteArtists', {index: this.state.libraryData.favoriteArtists.length - 1, num: 1, replace: null});\r\n        }\r\n        if (this.state.libraryData.favoriteArtists.length < max && !added) \r\n          context.commit('pushFavoriteArtists', {name: artist, num: this.state.libraryData.artists[artist].num, id: this.state.libraryData.artists[artist].id});\r\n      }\r\n      let favoriteArtist = await this.dispatch('getArtist', this.state.libraryData.favoriteArtists[0].id);\r\n      context.commit('setFavoriteArtistImage', favoriteArtist.images[0].url);\r\n      \r\n      context.commit('setComplete', {index: \"artistsDone\", value: true});\r\n    },\r\n    async checkGenres(context) {\r\n      let max = 4;\r\n      let querymax = 50;\r\n      let artistsIds = [];\r\n      for (var artist in this.state.libraryData.artists) {\r\n        if (querymax == 0)\r\n        {\r\n          let artistsData = await this.dispatch('getArtists', artistsIds);\r\n          for (var i = 0; i < artistsData.artists.length; i++)\r\n          {\r\n            for (var j = 0; j < artistsData.artists[i].genres.length; j++)\r\n            {\r\n              if (!(artistsData.artists[i].genres[j] in this.state.libraryData.genres))\r\n                context.commit('addGenre', {genre: artistsData.artists[i].genres[j], value: {num: this.state.libraryData.artists[artist].num, genre: artistsData.artists[i].genres[j]}})\r\n              else \r\n                context.commit('addToGenre', {genre: artistsData.artists[i].genres[j], num: this.state.libraryData.artists[artist].num})\r\n            }\r\n          }\r\n          querymax = 50;\r\n          artistsIds = [];\r\n        }\r\n        if (artist in this.state.libraryData.artists)\r\n        { \r\n          artistsIds.push(this.state.libraryData.artists[artist].id);\r\n          querymax -= 1;\r\n        }\r\n      }\r\n\r\n      for (var genre in this.state.libraryData.genres) {\r\n        let added = false;\r\n        for (var i = 0; i < this.state.libraryData.favoriteGenres.length; i++)\r\n        {\r\n          if (this.state.libraryData.favoriteGenres[i].num < this.state.libraryData.genres[genre].num)\r\n          {\r\n            context.commit('spliceFavoriteGenres', {index: i, num: 0, replace: {genre: genre, num: this.state.libraryData.genres[genre].num}});\r\n            added = true;\r\n            break;\r\n          }\r\n          if (this.state.libraryData.favoriteGenres.length > max)\r\n            context.commit('spliceFavoriteGenres', {index: this.state.libraryData.favoriteGenres.length - 1, num: 1, replace: null});\r\n        }\r\n        if (this.state.libraryData.favoriteGenres.length < max && !added)\r\n          context.commit('pushFavoriteGenres', {genre: genre, num: this.state.libraryData.genres[genre].num})\r\n      }\r\n      context.commit('setComplete', {index: \"genresDone\", value: true});\r\n    },\r\n    changeIndex(context, payload) {\r\n      context.commit('setIndex', payload.index);\r\n    },\r\n    async inicializeSpotifyApi(context) {\r\n      console.log('%c Inicializing Authorization.', 'color: purple;');\r\n      this.state.spotifyApi.setAccessToken(this.state.accessToken);\r\n      await context.commit('setInicialized', true);\r\n      this.dispatch('getUser');\r\n    },\r\n    // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\n    async getTopArtists(context, payload) {\r\n        try {\r\n            console.log('%c Retrieving Top Played Artists.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getMyTopArtists({limit: payload.limit, time_range: payload.time_range});\r\n            return response.items;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }  \r\n    },\r\n    // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\n    async getTopTracks(context, payload) {\r\n        try {\r\n            console.log('%c Retrieving Top Played Tracks.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getMyTopTracks({limit: payload.limit, time_range: payload.time_range});\r\n            return response.items;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }  \r\n    },\r\n    // {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds\r\n    async getRecentlyPlayed(context, payload) {\r\n        try {\r\n            console.log('%c Retrieving Recently Played Tracks.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getMyRecentlyPlayedTracks({limit: payload.limit});\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },  \r\n    async getTrack(context, track_id) {\r\n      try {\r\n          console.log('%c Requesting Song Data.', 'color: blue;');\r\n          let response = await this.state.spotifyApi.getTrack(track_id);\r\n          return response;\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    },\r\n    async getTracks(context, track_ids) {\r\n      try {\r\n          console.log('%c Requesting Songs Data.', 'color: blue;');\r\n          let response = await this.state.spotifyApi.getTracks(track_ids);\r\n          return response;\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    },\r\n    // {artistId: String}\r\n    async getArtist(context, id) {\r\n        try {\r\n            console.log('%c Requesting Artist.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getArtist(id);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },  \r\n    // []\r\n    async getArtists(context, ids) {\r\n      try {\r\n          console.log('%c Requesting Artists.', 'color: blue;');\r\n          let response = await this.state.spotifyApi.getArtists(ids);\r\n          return response;\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    }, \r\n    // Array IDs\r\n    async getAudioFeaturesForTracks(context, track_ids) {\r\n        try {\r\n            console.log('%c Requesting Song Data.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getAudioFeaturesForTracks(track_ids);\r\n            return response.audio_features;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    async getAudioFeaturesForTrack(context, track_id) {\r\n      try {\r\n          console.log('%c Requesting Song Analysis.', 'color: blue;');\r\n          let response = await this.state.spotifyApi.getAudioFeaturesForTracks([track_id]);\r\n          return response.audio_features[0];\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    },\r\n    async getAudioAnalysisForTrack(context, track_id) {\r\n        try {\r\n            console.log('%c Requesting Audio Analysis.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getAudioAnalysisForTrack(track_id);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    // {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\r\n    async getRecomendations(context, payload) {\r\n        try {\r\n            console.log('%c Requesting Recommendations.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getRecommendations(payload);\r\n            console.table(response);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    // {limit: 1-50, offset: first index}\r\n    async getSavedTracks(context, payload) {\r\n        try {\r\n            console.log('%c Requesting Library Data. ' + payload.offset + '-' + (payload.offset + payload.limit), 'color: blue;');\r\n            let response = await this.state.spotifyApi.getMySavedTracks({limit: payload.limit, offset: payload.offset});\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    // None\r\n    async getUser(context) {\r\n        try {\r\n          if (this.state.inicialized)\r\n          {\r\n            console.log('%c Requesting user Data.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.getMe();\r\n            await context.commit('setUser', response);\r\n          }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    // Array IDs\r\n    async searchSpotify(context, payload) {\r\n        try {\r\n            console.log('%c Searching.', 'color: blue;');\r\n            let response = await this.state.spotifyApi.search(payload.query, ['track'], {limit: 25});\r\n            return response.tracks.items;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n  }\r\n})"]}]}