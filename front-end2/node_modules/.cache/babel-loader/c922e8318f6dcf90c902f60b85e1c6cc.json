{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\spotify-calls.js","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\spotify-calls.js","mtime":1571525818796},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\andre\\\\Documents\\\\GitHub\\\\Spotify-Features\\\\spotify-features-website\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport SpotifyWebApi from \"./spotify-web-api\";\nmodule.exports = {\n  spotifyApi: new SpotifyWebApi(),\n  inicialized: false,\n  inicializeSpotifyApi: function inicializeSpotifyApi(access_token) {\n    spotifyApi.setAccessToken(access_token);\n    inicialized = true;\n  },\n  // clientID 42903eeb2bf943c4bd4903370f7a93f5\n  // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\n  getTopArtists: function () {\n    var _getTopArtists = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log('%c Retrieving Top Played Tracks.', 'color: blue;');\n              _context.next = 4;\n              return spotifyApi.getMyTopTracks({\n                limit: payload.limit,\n                time_range: payload.time_range\n              });\n\n            case 4:\n              response = _context.sent;\n              console.table(response.items);\n              return _context.abrupt(\"return\", response);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    function getTopArtists(_x) {\n      return _getTopArtists.apply(this, arguments);\n    }\n\n    return getTopArtists;\n  }(),\n  // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\n  getTopTracks: function () {\n    var _getTopTracks = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              console.log('%c Retrieving Top Played Tracks.', 'color: blue;');\n              _context2.next = 4;\n              return spotifyApi.getMyTopTracks({\n                limit: payload.limit,\n                time_range: payload.time_range\n              });\n\n            case 4:\n              response = _context2.sent;\n              console.table(response.items);\n              return _context2.abrupt(\"return\", response);\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    function getTopTracks(_x2) {\n      return _getTopTracks.apply(this, arguments);\n    }\n\n    return getTopTracks;\n  }(),\n  // {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds}\n  getRecentlyPlayed: function () {\n    var _getRecentlyPlayed = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              console.log('%c Retrieving Recently Played Tracks.', 'color: blue;');\n              _context3.next = 4;\n              return spotifyApi.getMyRecentlyPlayedTracks({\n                limit: payload.limit,\n                after: payload.range\n              });\n\n            case 4:\n              response = _context3.sent;\n              console.table(response.items);\n              return _context3.abrupt(\"return\", response);\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 9]]);\n    }));\n\n    function getRecentlyPlayed(_x3) {\n      return _getRecentlyPlayed.apply(this, arguments);\n    }\n\n    return getRecentlyPlayed;\n  }(),\n  // {trackId: String}\n  getTrack: function () {\n    var _getTrack = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              console.log('%c Requesting Track.', 'color: blue;');\n              _context4.next = 4;\n              return spotifyApi.getTrack(payload.trackId);\n\n            case 4:\n              response = _context4.sent;\n              console.table(response);\n              return _context4.abrupt(\"return\", response);\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 9]]);\n    }));\n\n    function getTrack(_x4) {\n      return _getTrack.apply(this, arguments);\n    }\n\n    return getTrack;\n  }(),\n  // {artistId: String}\n  getArtist: function () {\n    var _getArtist = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              console.log('%c Requesting Artist.', 'color: blue;');\n              _context5.next = 4;\n              return spotifyApi.getArtist(payload.artistId);\n\n            case 4:\n              response = _context5.sent;\n              console.table(response);\n              return _context5.abrupt(\"return\", response);\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 9]]);\n    }));\n\n    function getArtist(_x5) {\n      return _getArtist.apply(this, arguments);\n    }\n\n    return getArtist;\n  }(),\n  // Array IDs\n  getAudioFeaturesForTracks: function () {\n    var _getAudioFeaturesForTracks = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(track_ids) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              console.log('%c Requesting Song Data.', 'color: blue;');\n              _context6.next = 4;\n              return spotifyApi.getAudioFeaturesForTracks(track_ids);\n\n            case 4:\n              response = _context6.sent;\n              console.table(response.audio_features);\n              return _context6.abrupt(\"return\", response);\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 9]]);\n    }));\n\n    function getAudioFeaturesForTracks(_x6) {\n      return _getAudioFeaturesForTracks.apply(this, arguments);\n    }\n\n    return getAudioFeaturesForTracks;\n  }(),\n  getAudioAnalysis: function () {\n    var _getAudioAnalysis = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(track_id) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              console.log('%c Requesting Audio Analysis.', 'color: blue;');\n              _context7.next = 4;\n              return spotifyApi.getAudioAnalysisForTrack(track_id);\n\n            case 4:\n              response = _context7.sent;\n              console.table(response);\n              return _context7.abrupt(\"return\", response);\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.log(_context7.t0);\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 9]]);\n    }));\n\n    function getAudioAnalysis(_x7) {\n      return _getAudioAnalysis.apply(this, arguments);\n    }\n\n    return getAudioAnalysis;\n  }(),\n  // {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\n  getRecomendations: function () {\n    var _getRecomendations = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              console.log('%c Requesting Recommendations.', 'color: blue;');\n              _context8.next = 4;\n              return spotifyApi.getRecommendations(payload);\n\n            case 4:\n              response = _context8.sent;\n              console.table(response);\n              return _context8.abrupt(\"return\", response);\n\n            case 9:\n              _context8.prev = 9;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log(_context8.t0);\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 9]]);\n    }));\n\n    function getRecomendations(_x8) {\n      return _getRecomendations.apply(this, arguments);\n    }\n\n    return getRecomendations;\n  }(),\n  // {limit: 1-50, offset: first index}\n  getMaxSavedTracks: function () {\n    var _getMaxSavedTracks = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              console.log('%c Requesting Library Data.', 'color: blue;');\n              _context9.next = 4;\n              return spotifyApi.getMySavedTracks(payload);\n\n            case 4:\n              response = _context9.sent;\n              console.table(response.items);\n              return _context9.abrupt(\"return\", response);\n\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.log(_context9.t0);\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 9]]);\n    }));\n\n    function getMaxSavedTracks(_x9) {\n      return _getMaxSavedTracks.apply(this, arguments);\n    }\n\n    return getMaxSavedTracks;\n  }(),\n  // None\n  getUser: function () {\n    var _getUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10() {\n      var response;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              console.log('%c Requesting Library Data.', 'color: blue;');\n              _context10.next = 4;\n              return spotifyApi.getMe();\n\n            case 4:\n              response = _context10.sent;\n              console.table(response);\n              return _context10.abrupt(\"return\", response);\n\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](0);\n              console.log(_context10.t0);\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 9]]);\n    }));\n\n    function getUser() {\n      return _getUser.apply(this, arguments);\n    }\n\n    return getUser;\n  }(),\n  // Array IDs\n  searchSpotify: function () {\n    var _searchSpotify = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(payload) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              console.log('%c Searching.', 'color: blue;');\n              _context11.next = 4;\n              return spotifyApi.search(payload.query, ['track'], {\n                limit: 25\n              });\n\n            case 4:\n              response = _context11.sent;\n              console.table(response.audio_features);\n              return _context11.abrupt(\"return\", response);\n\n            case 9:\n              _context11.prev = 9;\n              _context11.t0 = _context11[\"catch\"](0);\n              console.log(_context11.t0);\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 9]]);\n    }));\n\n    function searchSpotify(_x10) {\n      return _searchSpotify.apply(this, arguments);\n    }\n\n    return searchSpotify;\n  }()\n};",{"version":3,"sources":["C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\spotify-calls.js"],"names":["SpotifyWebApi","module","exports","spotifyApi","inicialized","inicializeSpotifyApi","access_token","setAccessToken","getTopArtists","payload","console","log","getMyTopTracks","limit","time_range","response","table","items","getTopTracks","getRecentlyPlayed","getMyRecentlyPlayedTracks","after","range","getTrack","trackId","getArtist","artistId","getAudioFeaturesForTracks","track_ids","audio_features","getAudioAnalysis","track_id","getAudioAnalysisForTrack","getRecomendations","getRecommendations","getMaxSavedTracks","getMySavedTracks","getUser","getMe","searchSpotify","search","query"],"mappings":";;;AACA,OAAOA,aAAP;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,UAAU,EAAE,IAAIH,aAAJ,EADC;AAEbI,EAAAA,WAAW,EAAE,KAFA;AAIbC,EAAAA,oBAJa,gCAIQC,YAJR,EAIsB;AAC/BH,IAAAA,UAAU,CAACI,cAAX,CAA0BD,YAA1B;AACAF,IAAAA,WAAW,GAAG,IAAd;AACH,GAPY;AASb;AAGA;AACMI,EAAAA,aAbO;AAAA;AAAA;AAAA,6CAaOC,OAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeLC,cAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgD,cAAhD;AAfK;AAAA,qBAgBgBR,UAAU,CAACS,cAAX,CAA0B;AAACC,gBAAAA,KAAK,EAAEJ,OAAO,CAACI,KAAhB;AAAuBC,gBAAAA,UAAU,EAAEL,OAAO,CAACK;AAA3C,eAA1B,CAhBhB;;AAAA;AAgBDC,cAAAA,QAhBC;AAiBLL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAQ,CAACE,KAAvB;AAjBK,+CAkBEF,QAlBF;;AAAA;AAAA;AAAA;AAoBLL,cAAAA,OAAO,CAACC,GAAR;;AApBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwBb;AACMO,EAAAA,YAzBO;AAAA;AAAA;AAAA,8CAyBMT,OAzBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BLC,cAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgD,cAAhD;AA3BK;AAAA,qBA4BgBR,UAAU,CAACS,cAAX,CAA0B;AAACC,gBAAAA,KAAK,EAAEJ,OAAO,CAACI,KAAhB;AAAuBC,gBAAAA,UAAU,EAAEL,OAAO,CAACK;AAA3C,eAA1B,CA5BhB;;AAAA;AA4BDC,cAAAA,QA5BC;AA6BLL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAQ,CAACE,KAAvB;AA7BK,gDA8BEF,QA9BF;;AAAA;AAAA;AAAA;AAgCLL,cAAAA,OAAO,CAACC,GAAR;;AAhCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCb;AACMQ,EAAAA,iBArCO;AAAA;AAAA;AAAA,8CAqCWV,OArCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCLC,cAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqD,cAArD;AAvCK;AAAA,qBAwCgBR,UAAU,CAACiB,yBAAX,CAAqC;AAACP,gBAAAA,KAAK,EAAEJ,OAAO,CAACI,KAAhB;AAAuBQ,gBAAAA,KAAK,EAAEZ,OAAO,CAACa;AAAtC,eAArC,CAxChB;;AAAA;AAwCDP,cAAAA,QAxCC;AAyCLL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAQ,CAACE,KAAvB;AAzCK,gDA0CEF,QA1CF;;AAAA;AAAA;AAAA;AA4CLL,cAAAA,OAAO,CAACC,GAAR;;AA5CK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgDb;AACMY,EAAAA,QAjDO;AAAA;AAAA;AAAA,8CAiDEd,OAjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDLC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,cAApC;AAnDK;AAAA,qBAoDgBR,UAAU,CAACoB,QAAX,CAAoBd,OAAO,CAACe,OAA5B,CApDhB;;AAAA;AAoDDT,cAAAA,QApDC;AAqDLL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAd;AArDK,gDAsDEA,QAtDF;;AAAA;AAAA;AAAA;AAwDLL,cAAAA,OAAO,CAACC,GAAR;;AAxDK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4Db;AACMc,EAAAA,SA7DO;AAAA;AAAA;AAAA,8CA6DGhB,OA7DH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DLC,cAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,cAArC;AA/DK;AAAA,qBAgEgBR,UAAU,CAACsB,SAAX,CAAqBhB,OAAO,CAACiB,QAA7B,CAhEhB;;AAAA;AAgEDX,cAAAA,QAhEC;AAiELL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAd;AAjEK,gDAkEEA,QAlEF;;AAAA;AAAA;AAAA;AAoELL,cAAAA,OAAO,CAACC,GAAR;;AApEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwEb;AACMgB,EAAAA,yBAzEO;AAAA;AAAA;AAAA,8CAyEmBC,SAzEnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2ELlB,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,cAAxC;AA3EK;AAAA,qBA4EgBR,UAAU,CAACwB,yBAAX,CAAqCC,SAArC,CA5EhB;;AAAA;AA4EDb,cAAAA,QA5EC;AA6ELL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAQ,CAACc,cAAvB;AA7EK,gDA8EEd,QA9EF;;AAAA;AAAA;AAAA;AAgFLL,cAAAA,OAAO,CAACC,GAAR;;AAhFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoFPmB,EAAAA,gBApFO;AAAA;AAAA;AAAA,8CAoFUC,QApFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsFLrB,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,cAA7C;AAtFK;AAAA,qBAuFgBR,UAAU,CAAC6B,wBAAX,CAAoCD,QAApC,CAvFhB;;AAAA;AAuFDhB,cAAAA,QAvFC;AAwFLL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAd;AAxFK,gDAyFEA,QAzFF;;AAAA;AAAA;AAAA;AA2FLL,cAAAA,OAAO,CAACC,GAAR;;AA3FK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+Fb;AACMsB,EAAAA,iBAhGO;AAAA;AAAA;AAAA,8CAgGWxB,OAhGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkGLC,cAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,cAA9C;AAlGK;AAAA,qBAmGgBR,UAAU,CAAC+B,kBAAX,CAA8BzB,OAA9B,CAnGhB;;AAAA;AAmGDM,cAAAA,QAnGC;AAoGLL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAd;AApGK,gDAqGEA,QArGF;;AAAA;AAAA;AAAA;AAuGLL,cAAAA,OAAO,CAACC,GAAR;;AAvGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2Gb;AACMwB,EAAAA,iBA5GO;AAAA;AAAA;AAAA,8CA4GW1B,OA5GX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8GLC,cAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,cAA3C;AA9GK;AAAA,qBA+GgBR,UAAU,CAACiC,gBAAX,CAA4B3B,OAA5B,CA/GhB;;AAAA;AA+GDM,cAAAA,QA/GC;AAgHLL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAQ,CAACE,KAAvB;AAhHK,gDAiHEF,QAjHF;;AAAA;AAAA;AAAA;AAmHLL,cAAAA,OAAO,CAACC,GAAR;;AAnHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuHb;AACM0B,EAAAA,OAxHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0HT3B,cAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,cAA3C;AA1HS;AAAA,qBA2HYR,UAAU,CAACmC,KAAX,EA3HZ;;AAAA;AA2HLvB,cAAAA,QA3HK;AA4HTL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAd;AA5HS,iDA6HFA,QA7HE;;AAAA;AAAA;AAAA;AA+HLL,cAAAA,OAAO,CAACC,GAAR;;AA/HK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmIb;AACM4B,EAAAA,aApIO;AAAA;AAAA;AAAA,+CAoIO9B,OApIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsILC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,cAA7B;AAtIK;AAAA,qBAuIgBR,UAAU,CAACqC,MAAX,CAAkB/B,OAAO,CAACgC,KAA1B,EAAiC,CAAC,OAAD,CAAjC,EAA4C;AAAC5B,gBAAAA,KAAK,EAAE;AAAR,eAA5C,CAvIhB;;AAAA;AAuIDE,cAAAA,QAvIC;AAwILL,cAAAA,OAAO,CAACM,KAAR,CAAcD,QAAQ,CAACc,cAAvB;AAxIK,iDAyIEd,QAzIF;;AAAA;AAAA;AAAA;AA2ILL,cAAAA,OAAO,CAACC,GAAR;;AA3IK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["\r\nimport SpotifyWebApi from './spotify-web-api'\r\n\r\nmodule.exports = {\r\n    spotifyApi: new SpotifyWebApi(),\r\n    inicialized: false,\r\n\r\n    inicializeSpotifyApi(access_token) {\r\n        spotifyApi.setAccessToken(access_token);\r\n        inicialized = true;\r\n    },\r\n    \r\n    // clientID 42903eeb2bf943c4bd4903370f7a93f5\r\n    \r\n    \r\n    // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\n    async getTopArtists(payload) {\r\n        try {\r\n            console.log('%c Retrieving Top Played Tracks.', 'color: blue;');\r\n            let response = await spotifyApi.getMyTopTracks({limit: payload.limit, time_range: payload.time_range});\r\n            console.table(response.items);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }  \r\n    },\r\n    \r\n    // {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\n    async getTopTracks(payload) {\r\n        try {\r\n            console.log('%c Retrieving Top Played Tracks.', 'color: blue;');\r\n            let response = await spotifyApi.getMyTopTracks({limit: payload.limit, time_range: payload.time_range});\r\n            console.table(response.items);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }  \r\n    },\r\n    \r\n    // {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds}\r\n    async getRecentlyPlayed(payload) {\r\n        try {\r\n            console.log('%c Retrieving Recently Played Tracks.', 'color: blue;');\r\n            let response = await spotifyApi.getMyRecentlyPlayedTracks({limit: payload.limit, after: payload.range});\r\n            console.table(response.items);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    // {trackId: String}\r\n    async getTrack(payload) {\r\n        try {\r\n            console.log('%c Requesting Track.', 'color: blue;');\r\n            let response = await spotifyApi.getTrack(payload.trackId);\r\n            console.table(response);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    // {artistId: String}\r\n    async getArtist(payload) {\r\n        try {\r\n            console.log('%c Requesting Artist.', 'color: blue;');\r\n            let response = await spotifyApi.getArtist(payload.artistId);\r\n            console.table(response);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    // Array IDs\r\n    async getAudioFeaturesForTracks(track_ids) {\r\n        try {\r\n            console.log('%c Requesting Song Data.', 'color: blue;');\r\n            let response = await spotifyApi.getAudioFeaturesForTracks(track_ids);\r\n            console.table(response.audio_features);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    async getAudioAnalysis(track_id) {\r\n        try {\r\n            console.log('%c Requesting Audio Analysis.', 'color: blue;');\r\n            let response = await spotifyApi.getAudioAnalysisForTrack(track_id);\r\n            console.table(response);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    // {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\r\n    async getRecomendations(payload) {\r\n        try {\r\n            console.log('%c Requesting Recommendations.', 'color: blue;');\r\n            let response = await spotifyApi.getRecommendations(payload);\r\n            console.table(response);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    // {limit: 1-50, offset: first index}\r\n    async getMaxSavedTracks(payload) {\r\n        try {\r\n            console.log('%c Requesting Library Data.', 'color: blue;');\r\n            let response = await spotifyApi.getMySavedTracks(payload);\r\n            console.table(response.items);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    // None\r\n    async getUser() {\r\n        try {\r\n        console.log('%c Requesting Library Data.', 'color: blue;');\r\n        let response = await spotifyApi.getMe();\r\n        console.table(response);\r\n        return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n    // Array IDs\r\n    async searchSpotify(payload) {\r\n        try {\r\n            console.log('%c Searching.', 'color: blue;');\r\n            let response = await spotifyApi.search(payload.query, ['track'], {limit: 25});\r\n            console.table(response.audio_features);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    \r\n\r\n}\r\n\r\n\r\n"]}]}