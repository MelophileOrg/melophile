{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\views\\About.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\views\\About.vue","mtime":1571956055470},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport NavBar from '@/components/NavBar.vue'\r\n\r\nexport default {\r\n  name: 'about',\r\n  components: {\r\n    NavBar\r\n  },\r\n  methods: {\r\n\r\n  }, \r\n  computed: {\r\n\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"about maindiv\">\r\n    <NavBar path=\"h\" />\r\n    <div id=\"main\">\r\n      <div id=\"about-div\">\r\n        <h1>About My Music Taste</h1>\r\n        <h2>Spotify Authorization</h2>\r\n        <p>Authorization through Spotify is done through Implicit Grant Flow, meaning the access token is not refreshable and lasts an hour before a new token is needed.</p>\r\n        <p>All authorization is run through the user's browser and is not saved by My Music Mood. Data about your library is not saved unless explicitly done so within Library Analysis for sharing purposes.</p>\r\n        <p>My Music Mood asks permission to the following scopes: </p>\r\n        <ul>\r\n          <li>Read the User's Recently Played (My Music Mood)</li>\r\n          <li>Read the User's Top Tracks and Artists (My Charts)</li>\r\n          <li>Read the User's Library (Library Analysis)</li>\r\n          <li>Read the User's Data (Save Library - Usage Described Below)</li>\r\n        </ul>\r\n\r\n        <h2>Sharing Library Analysis</h2>\r\n        <h3>Public vs. Link Only</h3>\r\n        <p>Public Profiles will be available and listed on the social page.</p>\r\n        <p>Link Only Profiles will be available to anyone on the internet, but only by those who know the link extension.</p>\r\n        <p>The link to your page is http://mymusic.andrewdanielyoung.com/view/ followed by your Spotify ID.</p>\r\n        <p>If you save your library at a future date, your old information will be updated, thus deleting your old information.</p>\r\n        <p>Your ID is used in order to achieve this.</p>\r\n        <h3>Data Shared</h3>\r\n        <p>Sharing your library analysis will save the following data and create a link for others to view. Those who view your data will not have to login to Spotify.</p>\r\n        <h4>Data Saved:</h4>\r\n        <ul>\r\n          <li>Chosen Display Name</li>\r\n          <li>Top 20 Played Songs</li>\r\n          <li>Top 20 Played Artists</li>\r\n          <li>Total Saved Song</li>\r\n          <li>Total Saved Artists</li>\r\n          <li>Total Saved Genres</li>\r\n          <li>Top Four Saved Artists</li>\r\n          <li>Top Four Saved Genres</li>\r\n          <li>Happiness, Energy and Danceability Values</li>\r\n          <li>Tempo, Major/Minor Averages</li>\r\n          <li>Chances of Accoustic, Instrumental, Live and Speaking Tracks</li>\r\n          <li>Song Add Date Graph</li>\r\n          <li>Happiness Distribution Graph</li>\r\n          <li>Energy Distribution Graph</li>\r\n          <li>Danceability Distribution Graph</li>\r\n          <li>Banger Distribution Graph</li>\r\n          <li>Top 10 and Least 10 of Extreme Catagories</li>\r\n        </ul>\r\n\r\n        <h2>Happiness, Energy, Danceability?</h2>\r\n        <h3>Spotify provides all that information via their API!</h3>\r\n        <p>A machine learning algorithm has run through their tracks and set values for the following fields:</p>\r\n        <ul>\r\n          <li>acousticness</li>\r\n          <li>danceability</li>\r\n          <li>energy</li>\r\n          <li>instrumentalness</li>\r\n          <li>liveness</li>\r\n          <li>loudness</li>\r\n          <li>speechiness</li>\r\n          <li>valence (Happiness)</li>\r\n          <li>tempo</li>\r\n          <li>mode (Major/Minor)</li>\r\n          <li>key</li>\r\n        </ul>\r\n        <p>Most of these values are decimals between 0-1.</p>\r\n        <p>Library analysis asks for your saved songs 50 (the max) at a time. It then gathers song ID's and requests these audio features for each song.</p>\r\n        <p>It then takes all the audio features values from each track and averages them out to give you your library's details.</p>\r\n        <p>While it's sorting through, it stores the highest and lowest of each catagory.</p>\r\n        <h2>What about Bangers?</h2>\r\n        <p>The idea started from an article I read while doing some research.</p>\r\n        <a href=\"https://towardsdatascience.com/is-my-spotify-music-boring-an-analysis-involving-music-data-and-machine-learning-47550ae931de\">Is my Spotify music boring? An analysis involving music, data, and machine learning</a>\r\n        <p>In this article by Juan De Dios Santos, he tries to figure out if his library is \"boring\", as so claims his friend.</p>\r\n        <p>He goes through a few different methods, one of which I ended up using for the Boring-Radar: standard deviation.</p>\r\n        <p>One of his methods was an equation he created, based on what he think would be good at a party:</p>\r\n        <p class=\"equation\">boringness  =  loudness + tempo + (energy  x  100) + (danceability  x  100)</p>\r\n        <p>While writing an equation for \"boringness\" is amusing, I disagree with the idea that \"boring\" music is anything not great to head bang to at a party.</p>\r\n        <p>I did decided to use this equation for my Banger-Level, but made adjustments.</p>\r\n        <p>Loudness is a weird inconsistant value that in my opinion has no place in the equation, so I removed it.</p>\r\n        <p>Tracks have gotten louder over time, which doesn't serve to prove that they're LOUD, just means you don't have to turn your speakers up as much.</p>\r\n        <p>The average tempo of all music is around 116 BPM, which means an \"average\" tempo already has more weight than energy and danceability which max at 100.</p>\r\n        <p>I thought it was stupid to weight tempo that much, so I equalized it. If tempo is higher than an average, it adds. If it's lower, it subtracks from the score.</p>\r\n        <p>Finally I though energy was far more important than danceability.</p>\r\n        <p>Conceptually danceability should be equal with energy, but I found it's value to be inconsistant and not as worth while as energy</p>\r\n        <p>Here's my equation:</p>\r\n        <p class=\"equation\">bangerness  =  (tempo  -  96) + (energy  x  100) + (danceability  x  50)</p>\r\n        <p>Very opinion based, but I found my personal results consistant. I find it easier to look at your \"Top Bangers\" to understand how the value works, than to look up songs you attribute to being \"bangers\".</p>\r\n        <p>I needed the value to be between 0-1, so from trial and error I found that a consistant max for my \"banger equation\" was 210, giving my library of 4,300 songs a consistant bell curve.</p>\r\n        <p>The final equation:</p>\r\n        <p class=\"equation\">bangerness  =  ((tempo  -  96) + (energy  x  100) + (danceability  x  50))  /  210</p>\r\n        <p>Quantifiable Track Banger-Level</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from '@/components/NavBar.vue'\r\n\r\nexport default {\r\n  name: 'about',\r\n  components: {\r\n    NavBar\r\n  },\r\n  methods: {\r\n\r\n  }, \r\n  computed: {\r\n\r\n  }\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n#about-div {\r\n  display: block;\r\n  width: calc(100% - 64px);\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  margin-top: 64px;\r\n  color: white;\r\n  text-align: left;\r\n  margin-bottom: 100px;\r\n  background: rgba(255, 255, 255, 0.075);\r\n  padding: 50px;\r\n  border-radius: 10px;\r\n}\r\n\r\nh1 {\r\n  font-size: 3em;\r\n  margin-bottom: 20px;\r\n  margin-top: 0px;\r\n}\r\n\r\nh2 {\r\n  margin-top: 40px;\r\n  font-size: 2em;\r\n}\r\n\r\nh3 {\r\n  color: rgba(255, 255, 255, 0.356);\r\n  font-size: 1.5em;\r\n}\r\n\r\nh4 {\r\n  font-weight: lighter;\r\n}\r\n\r\np {\r\n  line-height: 25px;\r\n  font-size: 1em;\r\n  text-overflow:clip;\r\n  white-space:pre-wrap;\r\n}\r\n\r\nli {\r\n  margin-bottom: 5px;\r\n  color: rgba(255, 255, 255, 0.466);\r\n}\r\n\r\na {\r\n  color: rgb(173, 173, 173);\r\n}\r\n\r\n.equation {\r\n  padding: 10px;\r\n  background: rgba(255, 255, 255, 0.068);\r\n}\r\n</style>"]}]}