{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\components\\Select.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\src\\components\\Select.vue","mtime":1571903424904},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\spotify-features-website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n/*\r\ntypes: [\r\n        {value: \"\", text: \"Tracks\"},\r\n        {value: \"artists\", text: \"Artists\"},\r\n      ],\r\n*/\r\nexport default {\r\n    name: 'Select',\r\n    props: {\r\n        options: Array,\r\n        load: Boolean,\r\n        setTitle: String,\r\n        override: Boolean,\r\n    },\r\n    data() {\r\n        return {\r\n            show: false,\r\n            index: -1,\r\n            hover: false,\r\n        }\r\n    },\r\n    methods: {\r\n        hovering() {\r\n            this.hover = true;\r\n        },\r\n        leave() {\r\n            this.hover = false;\r\n        },\r\n        open() {\r\n            this.show = true;\r\n            this.$emit('pending');\r\n        },\r\n        close() {\r\n            this.show = false;\r\n        },\r\n        toggle() {\r\n            if (this.show)\r\n            {\r\n                this.index = -1;\r\n                this.close();\r\n            }\r\n            else\r\n                this.open();\r\n        },\r\n        select(num) {\r\n            this.index = num;\r\n            this.show = false;\r\n            this.$emit('selection', this.options[this.index].value);\r\n        }\r\n    },\r\n    computed: {\r\n        selected() {\r\n            if (this.show)\r\n            {\r\n                return \"______\";\r\n            }\r\n            if (this.index == -1)\r\n            {\r\n                return \"______\";\r\n            }\r\n            else\r\n                return this.options[this.index].text;\r\n        }\r\n    },\r\n    created() {\r\n        if (!this.load) {\r\n            let title = this.setTitle;\r\n            for (var i = 0; i < this.options.length; i++)\r\n            {\r\n                if (this.options[i].value == title)\r\n                {\r\n                    this.index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.index = -1;\r\n    }\r\n}\r\n",{"version":3,"sources":["Select.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Select.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"Select\">\r\n        <h1 :class=\"{throb: show || hover, load: load, throbempty: (load && index == -1)}\" @mouseover=\"hovering\" @mouseout=\"leave\" @click=\"toggle\">{{selected}}</h1>\r\n        <div v-if=\"show\" class=\"dropdown\">\r\n            <h1 @click=\"select(index)\" v-for=\"(option, index) in options\" :style=\"{'--delay': + index}\" :key=\"option.value\">{{option.text}}</h1>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/*\r\ntypes: [\r\n        {value: \"\", text: \"Tracks\"},\r\n        {value: \"artists\", text: \"Artists\"},\r\n      ],\r\n*/\r\nexport default {\r\n    name: 'Select',\r\n    props: {\r\n        options: Array,\r\n        load: Boolean,\r\n        setTitle: String,\r\n        override: Boolean,\r\n    },\r\n    data() {\r\n        return {\r\n            show: false,\r\n            index: -1,\r\n            hover: false,\r\n        }\r\n    },\r\n    methods: {\r\n        hovering() {\r\n            this.hover = true;\r\n        },\r\n        leave() {\r\n            this.hover = false;\r\n        },\r\n        open() {\r\n            this.show = true;\r\n            this.$emit('pending');\r\n        },\r\n        close() {\r\n            this.show = false;\r\n        },\r\n        toggle() {\r\n            if (this.show)\r\n            {\r\n                this.index = -1;\r\n                this.close();\r\n            }\r\n            else\r\n                this.open();\r\n        },\r\n        select(num) {\r\n            this.index = num;\r\n            this.show = false;\r\n            this.$emit('selection', this.options[this.index].value);\r\n        }\r\n    },\r\n    computed: {\r\n        selected() {\r\n            if (this.show)\r\n            {\r\n                return \"______\";\r\n            }\r\n            if (this.index == -1)\r\n            {\r\n                return \"______\";\r\n            }\r\n            else\r\n                return this.options[this.index].text;\r\n        }\r\n    },\r\n    created() {\r\n        if (!this.load) {\r\n            let title = this.setTitle;\r\n            for (var i = 0; i < this.options.length; i++)\r\n            {\r\n                if (this.options[i].value == title)\r\n                {\r\n                    this.index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.index = -1;\r\n    }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.Select {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.Select h1 {\r\n    font-size: 40px;\r\n    font-weight: bolder;\r\n    color: rgb(255, 255, 255);\r\n    cursor: pointer;\r\n    margin: 0;\r\n    \r\n}\r\n\r\n\r\n.throb {\r\n    animation: throb 2s ease infinite;\r\n}\r\n\r\n.throbempty {\r\n    animation: throb-empty 2s ease infinite;\r\n}\r\n\r\n@keyframes throb {\r\n    50% {\r\n        opacity: .3;\r\n    }\r\n}\r\n\r\n@keyframes throb-empty {\r\n    0% {\r\n        opacity: 1;\r\n        text-shadow:01px 0px 10px white;\r\n    }\r\n    50% {\r\n        opacity: .1;\r\n        text-shadow: 0px 0px 0px white;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n        text-shadow: 0px 0px 10px white;\r\n    }\r\n}\r\n\r\n.dropdown {\r\n    position: absolute;\r\n    width: 300px;\r\n    top: 90%;\r\n    margin-top: 10px;\r\n    left: calc((100% - 300px) / 2);\r\n    z-index: 100;\r\n}\r\n\r\n.dropdown h1 {\r\n    --delay: 0;\r\n    margin: 5px 0px;\r\n    animation: slide-up .3s ease calc(var(--delay) * .1s), peekaboo calc(var(--delay) * .1s);\r\n}\r\n\r\n@keyframes slide-up {\r\n    from {\r\n        transform: translateY(50px);\r\n        opacity: 0;\r\n    }\r\n}\r\n</style>\r\n"]}]}