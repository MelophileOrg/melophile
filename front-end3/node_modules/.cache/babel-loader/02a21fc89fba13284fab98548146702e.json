{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\src\\store\\actions.js","mtime":1572984567491},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/andre/Documents/GitHub/Spotify-Features/my-music-taste/src/store/actions.js"],"names":["inicializeGetToken","context","authEndpoint","clientId","redirectUri","state","dev","scopes","access_token","window","location","join","inicializeParseToken","token","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","dispatch","inicializeSetToken","spotifyApi","setAccessToken","commit","loadLibrary","limit","offset","retrieveSavedTracks","payload","response","total","items","length","keys","Object","audioFeatures","i","processTracks","ids","trackAudioFeatures","now","Date","nowTime","getTime","MONTH","tempo","energy","danceability","banger","addedDate","tracks","id","date","addedDateTime","month","Math","floor","value","valence","inicialScanReduceIds","artistsToFind","trackObject","track","j","artists","includes","push","added_at","album","album_type","available_markets","href","external_urls","spotify","type","uri","disc_number","external_ids","images","image","url","findAndStoreArtists","values","map","artist","trackSets","sectionIds","splice","newArtists","concat","artistObject","followers","genres","name","tracknum","distributeTrackAudioFeatures","acousticness","instrumentalness","liveness","loudness","speechiness","key","mode","properties","duration_ms","time_signature","calcTracksPerGenre","artistIds","genreTuples","entries","topGenres","sort","a","b","slice","topGenreIds","genre","artistTuples","topArtists","topArtistIds","calcExtremes","trackTuples","charts","topTracks","topTracksIds","chart","retrieveTopPlayed","retrieveTopPlayedArtists","ranges","time_range","index","retrieveTopPlayedTracks","bangerCalc","saveLibrary","private","include","numerical_data","audio_features","most_played_tracks","most_played_artists","data","progress","most_saved_artists","most_saved_genres","topSaved","topPlayed","numerical_features","extremes","probability_features","happiness_distribution","plot","energy_distribution","danceability_distribution","banger_distribution","added_timeline","dateAdded","convertTracks","reqTracks","addTracks","nonRepeatedTracks","gatherMostPlayedTracks","gatherExtremes","k","compressTrack","convertArtists","reqArtists","addArtists","nonRepeatedArtists","gatherMostPlayedArtists","gatherMostSavedArtists","compressArtist","convertGenres","reqGenres","songAnalysis","trackData","audioAnalysis","songAnalysisFeatures","song","cleanAudioAnalysis","audioAnalysisSegments","newSegments","segments","width","round","itemIndex","sum","pitches","averagePitch","hue","saturation","color","loudness_max","start","red","r","green","g","blue","getPercentiles","lower","HSVtoRGB","f","p","q","t","artistAnalysis","processArtist","artistTracks","artistTimeline","timeline","oldest","newest","artistSaved","dateTime","diff","diffMonth","time","artistTopTracks","getTopArtists","getMyTopArtists","getTopTracks","getMyTopTracks","getRecentlyPlayed","getMyRecentlyPlayedTracks","getTrack","track_id","getTracks","track_ids","getArtist","getArtists","getAudioFeaturesForTracks","getAudioFeaturesForTrack","getAudioAnalysisForTrack","getRecomendations","getRecommendations","getSavedTracks","getMySavedTracks","getUser","inicialized","getMe","searchSpotify","search","query","getArtistTopTracks"],"mappings":"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","sourcesContent":["////////////////////////////////////////////////////////////////\r\n// INICIALIZATION //////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// None\r\nconst inicializeGetToken = (context) => {\r\n    const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n    const clientId = '42903eeb2bf943c4bd4903370f7a93f5';\r\n    let redirectUri = 'http://mymusic.andrewdanielyoung.com/redirect/';\r\n    if (context.state.dev)\r\n        redirectUri = 'http://localhost:8080/redirect/';\r\n    const scopes = [\r\n        'user-read-recently-played',\r\n        'user-top-read',\r\n        'user-library-read',\r\n        'user-read-email',\r\n    ];\r\n    if (!context.state.access_token) {\r\n        window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\r\n    }\r\n};\r\n// None\r\nconst inicializeParseToken = (context) => {\r\n    let token = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\r\n        if (item) {\r\n            let parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n    }, {});\r\n    context.dispatch('inicializeSetToken', token.access_token);\r\n};\r\n// Token\r\nconst inicializeSetToken = async (context, token) => {\r\n    await context.state.spotifyApi.setAccessToken(token);\r\n    await context.commit('setInicialized', true);\r\n    context.dispatch('getUser');\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// LOAD PROGRESS ///////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// None\r\nconst loadLibrary = async (context) => {\r\n    context.commit('resetProgress');\r\n    await context.dispatch('retrieveSavedTracks', {limit: 50, offset: 0});\r\n    await context.dispatch('retrieveTopPlayed');\r\n    await context.dispatch('calcTracksPerGenre');\r\n    await context.dispatch('calcExtremes');\r\n};\r\n// {limit: Number, offset: Number}\r\nconst retrieveSavedTracks = async (context, payload) => {\r\n    let response = await context.dispatch('getSavedTracks', {limit: payload.limit, offset: payload.offset});\r\n    if (payload.offset == 0)\r\n        context.commit('setTotal', response.total);\r\n    await context.dispatch('processTracks', response.items);\r\n    if (response.items.length == payload.limit)\r\n        await context.dispatch('retrieveSavedTracks', {limit: 50, offset: payload.offset + payload.limit});\r\n    else {\r\n        let keys = Object.keys(context.state.audioFeatures);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            await context.commit('averageAudioFeatureValue', keys[i]);\r\n        }\r\n        await context.commit('averageMode');\r\n        await context.commit('averageValenceOverTime');\r\n        context.commit('setTracksLoaded');\r\n    }\r\n};\r\n// Track Array\r\nconst processTracks = async (context, payload) => {\r\n    let ids = await context.dispatch('inicialScanReduceIds', payload);\r\n    let trackAudioFeatures = await context.dispatch('getAudioFeaturesForTracks', ids);\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    for (let i = 0; i < trackAudioFeatures.length; i++) {\r\n        trackAudioFeatures[i].banger = await context.dispatch('bangerCalc', {tempo: trackAudioFeatures[i].tempo, energy: trackAudioFeatures[i].energy, danceability: trackAudioFeatures[i].danceability});\r\n        let addedDate = new Date(context.state.tracks[trackAudioFeatures[i].id].date);\r\n        let addedDateTime = addedDate.getTime();\r\n        await context.commit('addValenceOverTime', {month: Math.floor((nowTime - addedDateTime) / MONTH), value:  trackAudioFeatures[i].valence});\r\n    }\r\n    await context.dispatch('distributeTrackAudioFeatures', trackAudioFeatures);\r\n};\r\n// Track Array\r\nconst inicialScanReduceIds = async (context, payload) => {\r\n    let ids = [];\r\n    let artistsToFind = {};\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    for (let i = 0; i < payload.length; i++) {\r\n        let trackObject = payload[i].track;\r\n        for (let j = 0; j < trackObject.artists.length; j++) {\r\n            if (!(trackObject.artists[j].id in context.state.artists)) {\r\n                if (!(trackObject.artists[j].id in artistsToFind))\r\n                    artistsToFind[trackObject.artists[j].id] = {id: trackObject.artists[j].id, tracks: [trackObject.id]};\r\n                else {\r\n                    if (!(artistsToFind[trackObject.artists[j].id].tracks.includes(trackObject.id)))\r\n                        artistsToFind[trackObject.artists[j].id].tracks.push(trackObject.id);\r\n                }\r\n            }\r\n            else\r\n                context.commit('addTrackToArtist', {id: trackObject.artists[j].id, track: trackObject.id});\r\n            trackObject.artists[j] = trackObject.artists[j].id;\r\n        }\r\n        trackObject.date = payload[i].added_at;\r\n        let addedDate = new Date(trackObject.date);\r\n        let addedDateTime = addedDate.getTime();\r\n        context.commit('addDateAddedTrack', Math.floor((nowTime - addedDateTime) / MONTH));\r\n        delete trackObject.album.album_type;\r\n        delete trackObject.album.artists;\r\n        delete trackObject.album.available_markets;\r\n        delete trackObject.album.available_markets;\r\n        trackObject.album.href = trackObject.album.external_urls.spotify;\r\n        delete trackObject.album.type;\r\n        delete trackObject.album.uri;\r\n        delete trackObject.available_markets;\r\n        delete trackObject.disc_number;\r\n        delete trackObject.external_ids;\r\n        trackObject.href = trackObject.external_urls.spotify;\r\n        delete trackObject.external_urls;\r\n        delete trackObject.type;\r\n        delete trackObject.uri;\r\n        if (trackObject.album.images.length > 1)\r\n            trackObject.image = trackObject.album.images[0].url;\r\n        ids.push(trackObject.id);\r\n        context.commit('pushTrack', {id: trackObject.id, value: trackObject});\r\n        context.commit('addProcessed');\r\n    }\r\n    await context.dispatch('findAndStoreArtists', artistsToFind);\r\n    return ids;\r\n};\r\n// Array {id: String, tracks: [String]}\r\nconst findAndStoreArtists = async (context, payload) => {\r\n    let ids = Object.values(payload).map(artist => artist.id);\r\n    let trackSets = Object.values(payload).map(artist => artist.tracks);\r\n    let artists = [];\r\n    while (ids.length > 0) {\r\n        let sectionIds = ids.splice(0, 50);\r\n        let newArtists = await context.dispatch('getArtists', sectionIds);\r\n        artists = artists.concat(newArtists);\r\n    }\r\n    for (let i = 0; i < artists.length; i++) {\r\n        let artistObject = artists[i];\r\n        artistObject.href = artistObject.external_urls.spotify;\r\n        delete artistObject.external_urls;\r\n        artistObject.followers = artistObject.followers.total;\r\n        for (let j = 0; j < artistObject.genres.length; j++) {\r\n            if (!(artistObject.genres[j] in context.state.genres))  \r\n                await context.commit('pushGenre', {id: artistObject.genres[j], value: {name: artistObject.genres[j], artists: [artistObject.id], tracknum: 0}});\r\n            else \r\n                await context.commit('addArtistToGenre', {id: artistObject.genres[j], artist: artistObject.id});\r\n        }\r\n        delete artistObject.type;\r\n        delete artistObject.uri;\r\n        if (artistObject.images.length > 0)\r\n            artistObject.image = artistObject.images[0].url;\r\n        delete artistObject.images;\r\n        artistObject.tracks = trackSets[i];\r\n        await context.commit('pushArtist', {id: artistObject.id, value: artistObject});\r\n    }\r\n};\r\n// Audio Features Array\r\nconst distributeTrackAudioFeatures = async (context, payload) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let values = {\r\n        acousticness: 0,\r\n        danceability: 0,\r\n        energy: 0,\r\n        instrumentalness: 0,\r\n        liveness: 0,\r\n        loudness: 0,\r\n        speechiness: 0,\r\n        valence: 0,\r\n        tempo: 0,\r\n        banger: 0,\r\n    };\r\n    for (let i = 0; i < payload.length; i++) {\r\n        for (let j = 0; j < keys.length; j++) {\r\n            values[keys[j]] += payload[i][keys[j]];\r\n            context.commit('plotAudioFeatureValue', {key: keys[j], value: payload[i][keys[j]]});\r\n        }\r\n        context.commit('addMode', payload[i].mode);\r\n        await context.commit('addTrackProperties', {id: payload[i].id, properties: {\r\n            danceability: payload[i].danceability,\r\n            energy: payload[i].energy,\r\n            key: payload[i].key,\r\n            loudness: payload[i].loudness,\r\n            mode: payload[i].mode,\r\n            speechiness: payload[i].speechiness,\r\n            acousticness: payload[i].acousticness,\r\n            instrumentalness: payload[i].instrumentalness,\r\n            liveness: payload[i].liveness,\r\n            valence: payload[i].valence,\r\n            tempo: payload[i].tempo,\r\n            duration_ms: payload[i].duration_ms,\r\n            time_signature: payload[i].time_signature,\r\n            banger: payload[i].banger,\r\n        }});\r\n    }\r\n    for (let i = 0; i < keys.length; i++) {\r\n        await context.commit('addAudioFeatureValue', {key: keys[i], value: values[keys[i]]});\r\n    }   \r\n};\r\nconst calcTracksPerGenre = async (context) => {\r\n    let artistIds = Object.keys(context.state.artists);\r\n    for (let i = 0; i < artistIds.length; i++) {\r\n        for (let j = 0; j < context.state.artists[artistIds[i]].genres.length; j++) {\r\n            await context.commit('addGenreTrackNum', {id: context.state.artists[artistIds[i]].genres[j], value: context.state.artists[artistIds[i]].tracks.length});\r\n        }\r\n    }\r\n    let genreTuples = Object.entries(context.state.genres);\r\n    let topGenres = genreTuples.sort((a,b) => b[1].tracknum - a[1].tracknum).slice(0,50);\r\n    let topGenreIds = topGenres.map(genre => genre[0]);\r\n    context.commit('setTopSavedGenres', topGenreIds);\r\n    let artistTuples = Object.entries(context.state.artists);\r\n    let topArtists = artistTuples.sort((a,b) => b[1].tracks.length - a[1].tracks.length).slice(0,50);\r\n    let topArtistIds = topArtists.map(artist => artist[0]);\r\n    context.commit('setTopSavedArtists', topArtistIds);\r\n    context.commit('setArtistsLoaded');\r\n    context.commit('setGenresLoaded');\r\n};\r\nconst calcExtremes = async (context) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let trackTuples = Object.entries(context.state.tracks);\r\n    let charts = [\"minchart\", \"maxchart\"];\r\n    let topTracks;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        for (let j = 0; j < charts.length; j++) {\r\n            if (charts[j] == \"minchart\") {\r\n                topTracks = trackTuples.sort((a,b) => a[1][keys[i]] - b[1][keys[i]]).slice(0,25);\r\n            }\r\n            else {\r\n                topTracks = trackTuples.sort((a,b) => b[1][keys[i]] - a[1][keys[i]]).slice(0,25);\r\n            }\r\n            let topTracksIds = topTracks.map(track => track[0]);\r\n            context.commit('setAudioFeatureChart', {key: keys[i], chart: [charts[j]], value: topTracksIds});\r\n        }\r\n    }\r\n    context.commit('setExtremesLoaded');\r\n};\r\nconst retrieveTopPlayed = async (context) => {\r\n    await context.dispatch('retrieveTopPlayedArtists');\r\n    await context.dispatch('retrieveTopPlayedTracks');\r\n};\r\nconst retrieveTopPlayedArtists = async (context) => {\r\n    let ranges = ['short_term', 'medium_term', 'long_term'];\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        let artists = await context.dispatch('getTopArtists', {limit: 50, time_range: ranges[i], offset: 0});\r\n        let ids = [];\r\n        for (let j = 0; j < artists.length; j++) {\r\n            ids.push(artists[j].id);\r\n            if (!(artists[j].id in context.state.artists)) {\r\n                let artistObject = artists[j];\r\n                artistObject.href = artistObject.external_urls.spotify;\r\n                delete artistObject.external_urls;\r\n                artistObject.followers = artistObject.followers.total;\r\n                delete artistObject.type;\r\n                delete artistObject.uri;\r\n                context.commit('pushArtist', {id: artists[j].id, value: artistObject});\r\n            }\r\n        }\r\n        context.commit('setTopPlayedArtists', {index: i, value: ids});\r\n    }\r\n};\r\nconst retrieveTopPlayedTracks = async (context) => {\r\n    let ranges = ['short_term', 'medium_term', 'long_term'];\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        let tracks = await context.dispatch('getTopTracks', {limit: 50, time_range: ranges[i], offset: 0});\r\n        let ids = [];\r\n        for (let j = 0; j < tracks.length; j++) {\r\n            ids.push(tracks[j].id);\r\n            if (!(tracks[j].id in context.state.tracks)) {\r\n                let trackObject = tracks[j];\r\n                delete trackObject.album.album_type;\r\n                delete trackObject.album.artists;\r\n                delete trackObject.album.available_markets;\r\n                delete trackObject.album.available_markets;\r\n                trackObject.album.href = trackObject.album.external_urls.spotify;\r\n                delete trackObject.album.type;\r\n                delete trackObject.album.uri;\r\n                delete trackObject.available_markets;\r\n                delete trackObject.disc_number;\r\n                delete trackObject.external_ids;\r\n                trackObject.href = trackObject.external_urls.spotify;\r\n                delete trackObject.external_urls;\r\n                delete trackObject.type;\r\n                delete trackObject.uri;\r\n                context.commit('pushTrack', {id: tracks[j].id, value: trackObject});\r\n            }\r\n        }\r\n        context.commit('setTopPlayedTracks', {index: i, value: ids});\r\n    }\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// AUDIO FEATURES //////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {tempo: Number, energy: Number, danceability: Number}\r\nconst bangerCalc = async (context, payload) => {\r\n    return ((payload.tempo - 96 + (payload.energy * 100) + (payload.danceability*50)) / 210);\r\n}\r\n////////////////////////////////////////////////////////////////\r\n// SAVE LIBRARY ////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {name: String, privacy: Boolean, include: Object}\r\n// INCLUDE ITEM               KEY                        PUBLIC REQ\r\n// Numerical Data: True.      numerical_data             True\r\n// Most Saved Artists:        most_saved_artists         \r\n// Audio Features: True.      audio_features             True\r\n// Top Saved Genres:          most_saved_genres\r\n// Numerical Features:        numerical_features\r\n// Probability Features:      probability_features\r\n// Date Added Timeline:       added_timeline\r\n// Happiness Distribution:    happiness_distribution\r\n// Energy Distribution:       energy_distribution\r\n// Danceability Distribution: danceability_distribution\r\n// Banger Distribution:       banger_distribution\r\n// Top 30 Songs:              most_played_tracks          True\r\n// Top 30 Artists:            most_played_artists         True\r\n// Extremes Top 10:           extremes\r\nconst saveLibrary = async (context, payload) => {\r\n    if (!payload.private && !payload.include.numerical_data && !payload.include.audio_features && !payload.include.most_played_tracks && !payload.include.most_played_artists)\r\n        return false;\r\n    let data = {};\r\n    data.include = payload.include;\r\n    data.name = payload.name;\r\n    data.private = payload.private;\r\n    data.tracks = await context.dispatch('convertTracks', payload.include);\r\n    data.artists = await context.dispatch('convertArtists', payload.include);\r\n    data.genres = await context.dispatch('convertGenres', payload.include);\r\n    if (payload.include.numerical_data)\r\n        data.numerical_data = {total: context.state.progress.total, artists: (Object.keys(context.state.artists)).length, genres: (Object.keys(context.state.genres)).length};\r\n    if (payload.include.most_saved_artists || payload.include.most_saved_genres) {\r\n        data.topSaved = {};\r\n        if (payload.include.most_saved_artists)\r\n            data.topSaved.artists = context.state.topSaved.artists;\r\n        if (payload.include.most_saved_genres)\r\n            data.topSaved.genres = context.state.topSaved.genres;\r\n    }\r\n    if (payload.include.most_played_tracks || payload.include.most_played_artists) {\r\n        data.topPlayed = {};\r\n        if (payload.include.most_played_tracks) \r\n            data.topPlayed.tracks = context.state.topPlayed.tracks;\r\n        if (payload.include.most_played_artists) \r\n            data.topPlayed.artists = context.state.topPlayed.artists;\r\n    }\r\n    if (payload.include.audio_features || payload.include.numerical_features || payload.include.extremes || payload.include.probability_features) {\r\n        data.audioFeatures = {\r\n            acousticness: {},\r\n            danceability: {},\r\n            energy: {},\r\n            instrumentalness: {},\r\n            liveness: {},\r\n            loudness: {},\r\n            speechiness: {},\r\n            tempo: {},\r\n            valence: {},\r\n            banger: {},\r\n        };\r\n        if (payload.include.audio_features) {\r\n            data.audioFeatures.valence.value = context.state.audioFeatures.valence.value;\r\n            data.audioFeatures.energy.value = context.state.audioFeatures.energy.value;\r\n            data.audioFeatures.danceability.value = context.state.audioFeatures.danceability.value;\r\n        }\r\n        if (payload.include.probability_features) {\r\n            data.audioFeatures.acousticness.value = context.state.audioFeatures.acousticness.value;\r\n            data.audioFeatures.instrumentalness.value = context.state.audioFeatures.instrumentalness.value;\r\n            data.audioFeatures.liveness.value = context.state.audioFeatures.liveness.value;\r\n            data.audioFeatures.speechiness.value = context.state.audioFeatures.speechiness.value;\r\n        }\r\n        if (payload.include.extremes) {\r\n            let keys = Object.keys(data.audioFeatures);\r\n            let charts = [\"minchart\", \"maxchart\"]\r\n            for (let i = 0; i < keys.length; i++) {\r\n                for (let j = 0; j < charts.length; j++) {\r\n                    data.audioFeatures[keys[i]][charts[j]] = context.state.audioFeatures[keys[i]][charts[j]];\r\n                }\r\n            }\r\n        }\r\n        if (payload.include.happiness_distribution) {\r\n            data.audioFeatures.valence.plot = context.state.audioFeatures.valence.plot;\r\n        }\r\n        if (payload.include.energy_distribution) {\r\n            data.audioFeatures.energy.plot = context.state.audioFeatures.energy.plot;\r\n        }\r\n        if (payload.include.danceability_distribution) {\r\n            data.audioFeatures.danceability.plot = context.state.audioFeatures.danceability.plot;\r\n        }\r\n        if (payload.include.banger_distribution) {\r\n            data.audioFeatures.banger.plot = context.state.audioFeatures.banger.plot;\r\n        }\r\n    }\r\n    if (payload.include.added_timeline) \r\n        data.dateAdded = context.state.dateAdded;\r\n    // SERVER CALLS\r\n    return true;\r\n};\r\n// Include Object\r\nconst convertTracks = async (context, payload) => {\r\n    let reqTracks = {};\r\n    let addTracks = [];\r\n    if (payload.most_played_tracks)\r\n        addTracks = addTracks.concat(await context.dispatch('gatherMostPlayedTracks'));\r\n    if (payload.extremes) \r\n        addTracks = addTracks.concat(await context.dispatch('gatherExtremes'));\r\n    let nonRepeatedTracks = {};\r\n    for (let i = 0; i < addTracks.length; i++) {\r\n        if (!(addTracks[i] in nonRepeatedTracks))\r\n            nonRepeatedTracks[addTracks[i]] = 0;\r\n        else {\r\n            nonRepeatedTracks[addTracks[i]] += 1;\r\n        }\r\n    }\r\n    let ids = Object.keys(nonRepeatedTracks);\r\n    for (let i = 0; i < ids.length; i++) {\r\n        reqTracks[ids[i]] = await context.dispatch(\"compressTrack\", context.state.tracks[ids[i]]);\r\n    }\r\n    return reqTracks;\r\n};\r\n// Nothing\r\nconst gatherMostPlayedTracks = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topPlayed.tracks.length; i++) {\r\n        for (let j = 0; j < context.state.topPlayed.tracks[i].length && j < 20; j++) {\r\n            ids.push(context.state.topPlayed.tracks[i][j]);\r\n        }\r\n    }\r\n    return ids;\r\n}\r\n// Nothing\r\nconst gatherExtremes = async (context) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let charts = [\"minchart\", \"maxchart\"];\r\n    let ids = [];\r\n    for (let i = 0; i < keys.length; i++) {\r\n        for (let j = 0; j < charts.length; j++) {\r\n            for (let k = 0; k < context.state.audioFeatures[keys[i]][charts[j]].length && k < 10; k++) {\r\n                ids.push(context.state.audioFeatures[keys[i]][charts[j]][k]);\r\n            }\r\n        }\r\n    }\r\n    return ids;\r\n}\r\n// Track object\r\nconst compressTrack = async (context, payload) => {\r\n    return {name: payload.name, image: payload.album.images[0].url, artists: payload.artists};\r\n};\r\n// None\r\nconst convertArtists = async (context, payload) => {\r\n    let reqArtists = {};\r\n    let addArtists = [];\r\n    if (payload.most_played_artists)\r\n        addArtists = addArtists.concat(await context.dispatch('gatherMostPlayedArtists'));\r\n    if (payload.most_saved_artists) \r\n        addArtists = addArtists.concat(await context.dispatch('gatherMostSavedArtists'));\r\n    let nonRepeatedArtists = {};\r\n    for (let i = 0; i < addArtists.length; i++) {\r\n        if (!(addArtists[i] in nonRepeatedArtists))\r\n            nonRepeatedArtists[addArtists[i]] = 0;\r\n        else {\r\n            nonRepeatedArtists[addArtists[i]] += 1;\r\n        }\r\n    }\r\n    let ids = Object.keys(nonRepeatedArtists);\r\n    for (let i = 0; i < ids.length; i++) {\r\n        reqArtists[ids[i]] = await context.dispatch(\"compressArtist\", context.state.artists[ids[i]]);\r\n    }\r\n    return reqArtists;\r\n};\r\n// Nothing\r\nconst gatherMostPlayedArtists = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topPlayed.artists.length; i++) {\r\n        for (let j = 0; j < context.state.topPlayed.artists[i].length && j < 20; j++) {\r\n            ids.push(context.state.topPlayed.artists[i][j]);\r\n        }\r\n    }\r\n    return ids;\r\n};\r\n// Nothing\r\nconst gatherMostSavedArtists = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topSaved.artists.length; i++) {\r\n        ids.push(context.state.topSaved.artists[i]);\r\n    }\r\n    return ids;\r\n};\r\n// Track object\r\nconst compressArtist = async (context, payload) => {\r\n    return {name: payload.name, image: payload.images[0].url, genres: payload.genres};\r\n};\r\n// Include Object\r\nconst convertGenres = async (context, payload) => {\r\n    let reqGenres = {};\r\n    if (payload.most_saved_genres) {\r\n        for (let i = 0; i < context.state.topSaved.genres.length; i++) {\r\n            reqGenres[context.state.topSaved.genres[i]] = context.state.genres[context.state.topSaved.genres[i]];\r\n        }\r\n    }\r\n    return reqGenres;\r\n};\r\n\r\n////////////////////////////////////////////////////////////////\r\n// ANALYSIS ////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n/*\r\n    album: {album_type: \"album\", artists: Array(1), available_markets: Array(78), external_urls: {…}, href: \"https://api.spotify.com/v1/albums/5MmMomspau1V5YpXjHYJRy\", …}\r\n    artists: [{…}]\r\n    available_markets: (78) [\"AD\", \"AE\", \"AR\", \"AT\", \"AU\", \"BE\", \"BG\", \"BH\", \"BO\", \"BR\", \"CA\", \"CH\", \"CL\", \"CO\", \"CR\", \"CY\", \"CZ\", \"DE\", \"DK\", \"DO\", \"DZ\", \"EC\", \"EE\", \"EG\", \"ES\", \"FI\", \"FR\", \"GB\", \"GR\", \"GT\", \"HK\", \"HN\", \"HU\", \"ID\", \"IE\", \"IL\", \"IN\", \"IS\", \"IT\", \"JO\", \"KW\", \"LB\", \"LI\", \"LT\", \"LU\", \"LV\", \"MA\", \"MC\", \"MT\", \"MX\", \"MY\", \"NI\", \"NL\", \"NO\", \"NZ\", \"OM\", \"PA\", \"PE\", \"PH\", \"PL\", \"PS\", \"PT\", \"PY\", \"QA\", \"RO\", \"SA\", \"SE\", \"SG\", \"SK\", \"SV\", \"TH\", \"TN\", \"TR\", \"TW\", \"US\", \"UY\", \"VN\", \"ZA\"]\r\n    disc_number: 1\r\n    duration_ms: 296899\r\n    explicit: false\r\n    external_ids: {isrc: \"GBCFB1200106\"}\r\n    external_urls: {spotify: \"https://open.spotify.com/track/74Csq5DMaOBShLUhI6NU5A\"}\r\n    href: \"https://api.spotify.com/v1/tracks/74Csq5DMaOBShLUhI6NU5A\"\r\n    id: \"74Csq5DMaOBShLUhI6NU5A\"\r\n    is_local: false\r\n    name: \"Curse Me Good\"\r\n    popularity: 50\r\n    preview_url: \"https://p.scdn.co/mp3-preview/ea8af91eefd28faf2ab5c73b6dc5a596bf0d5b9b?cid=42903eeb2bf943c4bd4903370f7a93f5\"\r\n    track_number: 2\r\n    type: \"track\"\r\n    uri: \"spotify:track:74\r\n\r\n\r\n    acousticness: 0.0105\r\n    album: {external_urls: {…}, href: \"https://open.spotify.com/album/5MmMomspau1V5YpXjHYJRy\", id: \"5MmMomspau1V5YpXjHYJRy\", images: Array(3), name: \"The Glorious Dead\", …}\r\n    artists: [\"0bZCak2tcRMY1dzEIuwF42\"]\r\n    banger: 0.6849999999999999\r\n    danceability: 0.809\r\n    date: \"2018-09-23T23:34:33Z\"\r\n    duration_ms: 296900\r\n    energy: 0.814\r\n    explicit: false\r\n    href: \"https://open.spotify.com/track/74Csq5DMaOBShLUhI6NU5A\"\r\n    id: \"74Csq5DMaOBShLUhI6NU5A\"\r\n    instrumentalness: 0.0000248\r\n    is_local: false\r\n    key: 6\r\n    liveness: 0.099\r\n    loudness: -6.829\r\n    mode: 0\r\n    name: \"Curse Me Good\"\r\n    popularity: 50\r\n    preview_url: \"https://p.scdn.co/mp3-preview/ea8af91eefd28faf2ab5c73b6dc5a596bf0d5b9b?cid=42903eeb2bf943c4bd4903370f7a93f5\"\r\n    speechiness: 0.0338\r\n    tempo: 118\r\n    time_signature: 4\r\n    track_number: 2\r\n    valence: 0.804\r\n*/\r\nconst songAnalysis = async (context, id) => {\r\n    let trackData;\r\n    trackData = await context.dispatch('getTrack', id);\r\n    trackData = await context.dispatch('songAnalysisFeatures', {trackData: trackData, id: id});\r\n    trackData.audioAnalysis = await context.dispatch('cleanAudioAnalysis', {id: id});\r\n    return trackData;\r\n};\r\n// {id: String}\r\nconst songAnalysisFeatures = async (context, payload) => {\r\n    let song = payload.trackData;\r\n    let audioFeatures = await context.dispatch('getAudioFeaturesForTrack', payload.id);\r\n    song.acousticness = audioFeatures.acousticness;\r\n    song.danceability = audioFeatures.danceability;\r\n    song.energy = audioFeatures.energy;\r\n    song.instrumentalness = audioFeatures.instrumentalness;\r\n    song.key = audioFeatures.key;\r\n    song.liveness = audioFeatures.liveness;\r\n    song.loudness = audioFeatures.loudness;\r\n    song.mode = audioFeatures.mode;\r\n    song.speechiness = audioFeatures.speechiness;\r\n    song.tempo = audioFeatures.tempo;\r\n    song.valence = audioFeatures.valence;\r\n    return song;\r\n};\r\nconst cleanAudioAnalysis = async (context, payload) => {\r\n    let audioAnalysisSegments = 80;\r\n    let audioAnalysis = await context.dispatch('getAudioAnalysisForTrack', payload.id);\r\n    let newSegments = [];\r\n    if (audioAnalysis.segments.length < audioAnalysisSegments)\r\n        audioAnalysisSegments = audioAnalysis.segments.length;\r\n    let width = Math.round(audioAnalysis.segments.length / audioAnalysisSegments);\r\n    \r\n    for (var i = 0; i < audioAnalysisSegments; i++)\r\n    {\r\n        let itemIndex = Math.round(width * i);\r\n        if (itemIndex > audioAnalysis.segments.length - 1)\r\n        {\r\n            itemIndex = audioAnalysis.segments.length - 2;\r\n        }\r\n        let sum = 0;\r\n        for (var j = 0; j < audioAnalysis.segments[itemIndex].pitches.length; j++)\r\n        {\r\n            sum += audioAnalysis.segments[itemIndex].pitches[j];\r\n        }\r\n        let averagePitch = sum / audioAnalysis.segments[itemIndex].pitches.length; \r\n        let color = await context.dispatch('HSVtoRGB', {hue: (((1 - averagePitch) * 229 + -50) / 360), saturation: 0.51, value: 0.89});\r\n        let loudness = (Math.round(((audioAnalysis.segments[itemIndex].loudness_max / 60) + 1) * 100) / 100);\r\n\r\n        newSegments.push({\r\n            start: Math.round(audioAnalysis.segments[itemIndex].start),\r\n            loudness_max: loudness, \r\n            red: color.r,\r\n            green: color.g,\r\n            blue: color.b,\r\n        });\r\n    }\r\n    audioAnalysis.segments = null;\r\n    return newSegments\r\n};\r\nconst getPercentiles = async (context, payload) => {\r\n    let ids = Object.keys(context.state.tracks);\r\n    let keys = Object.keys(payload);\r\n    let response = {valence: 0, danceability: 0, energy: 0, banger: 0};\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let lower = 0;\r\n        for (let j = 0; j < ids.length; j++) {\r\n            if (context.state.tracks[ids[j]][keys[i]] <= payload[keys[i]]) {\r\n                lower += 1;\r\n            }\r\n        }\r\n        response[keys[i]] = lower / context.state.progress.total;\r\n    }\r\n    return response;\r\n};\r\n//{h, s, v}\r\nconst HSVtoRGB = async (context, payload) => {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(payload.hue * 6);\r\n    f = payload.hue * 6 - i;\r\n    p = payload.value * (1 - payload.saturation);\r\n    q = payload.value * (1 - f * payload.saturation);\r\n    t = payload.value * (1 - (1 - f) * payload.saturation);\r\n    switch (i % 6) {\r\n        case 0: r = payload.value, g = t, b = p; break;\r\n        case 1: r = q, g = payload.value, b = p; break;\r\n        case 2: r = p, g = payload.value, b = t; break;\r\n        case 3: r = p, g = q, b = payload.value; break;\r\n        case 4: r = t, g = p, b = payload.value; break;\r\n        case 5: r = payload.value, g = p, b = q; break;\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n};\r\nconst artistAnalysis = async (context, payload) => {\r\n    let artist = await context.dispatch(\"getArtist\", payload);\r\n    let artistObject = await context.dispatch(\"processArtist\", artist);\r\n    return artistObject;\r\n};\r\nconst processArtist = async (context, payload) => {\r\n    payload.href = payload.external_urls.spotify;\r\n    delete payload.external_urls;\r\n    payload.followers = payload.followers.total;\r\n    payload.image = payload.images[0].url;\r\n    delete payload.images;\r\n    return payload;\r\n};\r\nconst artistTracks = async (context, payload) => {\r\n    if (!(payload.id in context.state.artists))\r\n        return [];\r\n    let ids = context.state.artists[payload.id].tracks;\r\n    let tracks = [];\r\n    for (let i = 0; i < ids.length; i++) {\r\n        tracks.push(context.state.tracks[ids[i]]);\r\n    }\r\n    return tracks;\r\n};\r\nconst artistTimeline = async (context, payload) => {\r\n    if (!(payload.id in context.state.artists))\r\n        return {timeline: [], oldest: [], newest: []};\r\n    let artistObject = payload;\r\n    let timeline = [];\r\n    let tracks = [];\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    let artistSaved = context.state.artists[artistObject.id];\r\n    for (let i = 0; i < artistSaved.tracks.length; i++) {\r\n        let date = new Date(context.state.tracks[artistSaved.tracks[i]].date);\r\n        let dateTime = date.getTime();\r\n        let diff = nowTime - dateTime;\r\n        let diffMonth = Math.floor(diff / MONTH);\r\n        tracks.push({id: artistSaved.tracks[i], time: dateTime, month: diffMonth});\r\n        if (diffMonth >= timeline.length) {\r\n            while (diffMonth >= timeline.length) {\r\n                timeline.push(0);\r\n            }\r\n        }\r\n        timeline[diffMonth] += 1;\r\n    }\r\n    tracks.sort((a, b) => (a.time > b.time) ? 1 : -1);\r\n    let oldest = tracks.slice(0, 3);\r\n    let newest = tracks.slice(tracks.length - 3, tracks.length);\r\n    while (timeline.length < context.state.dateAdded.length) {\r\n        timeline.push(0);\r\n    }\r\n    return {timeline: timeline, oldest: oldest, newest: newest};\r\n};\r\nconst artistTopTracks = async (context, id) => {\r\n    let tracks = await context.dispatch('getArtistTopTracks', id);\r\n    let ids = [];\r\n    for (let i = 0; i < tracks.length; i++) {\r\n        delete tracks[i].album.album_type;\r\n        delete tracks[i].album.artists;\r\n        delete tracks[i].album.available_markets;\r\n        delete tracks[i].album.available_markets;\r\n        tracks[i].album.href = tracks[i].album.external_urls.spotify;\r\n        delete tracks[i].album.type;\r\n        delete tracks[i].album.uri;\r\n        delete tracks[i].available_markets;\r\n        delete tracks[i].disc_number;\r\n        delete tracks[i].external_ids;\r\n        tracks[i].href = tracks[i].external_urls.spotify;\r\n        delete tracks[i].external_urls;\r\n        delete tracks[i].type;\r\n        delete tracks[i].uri;\r\n        if (tracks[i].album.images.length > 1)\r\n            tracks[i].image = tracks[i].album.images[0].url;\r\n        ids.push(tracks[i].id);\r\n    }\r\n    let audioFeatures = await context.dispatch('getAudioFeaturesForTracks', ids);\r\n\r\n    for (let i = 0; i < tracks.length; i++) {\r\n        tracks[i].valence = audioFeatures[i].valence;\r\n        tracks[i].energy = audioFeatures[i].energy;\r\n        tracks[i].danceability = audioFeatures[i].danceability;\r\n    }\r\n\r\n    return tracks;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// SOCIAL //////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////\r\n// API CALLS ///////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopArtists = async (context, payload) => {\r\n    try { \r\n        let response = await context.state.spotifyApi.getMyTopArtists({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    } \r\n};\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyTopTracks({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    }  \r\n};\r\n// {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds\r\nconst getRecentlyPlayed = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyRecentlyPlayedTracks({limit: payload.limit});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\nconst getTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTrack(track_id);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\nconst getTracks = async (context, track_ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTracks(track_ids);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// {artistId: String}\r\nconst getArtist = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtist(id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n}; \r\n// []\r\nconst getArtists = async (context, ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getArtists(ids);\r\n      return response.artists;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// Array IDs\r\nconst getAudioFeaturesForTracks = async (context, track_ids) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioFeaturesForTracks(track_ids);\r\n        return response.audio_features;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\nconst getAudioFeaturesForTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getAudioFeaturesForTracks([track_id]);\r\n      return response.audio_features[0];\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\nconst getAudioAnalysisForTrack = async (context, track_id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioAnalysisForTrack(track_id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\r\nconst getRecomendations = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getRecommendations(payload);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {limit: 1-50, offset: first index}\r\nconst getSavedTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMySavedTracks({limit: payload.limit, offset: payload.offset});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// None\r\nconst getUser = async (context) => {\r\n    try {\r\n      if (context.state.inicialized)\r\n      {\r\n        let response = await context.state.spotifyApi.getMe();\r\n        await context.commit('setUserData', response);\r\n      }\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// Array IDs\r\nconst searchSpotify = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.search(payload.query, ['track'], {limit: 25});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\nconst getArtistTopTracks = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtistTopTracks(id, \"US\", {});\r\n        return response.tracks;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\n  \r\nexport default {\r\n    inicializeGetToken,\r\n    inicializeParseToken,\r\n    inicializeSetToken,\r\n\r\n    loadLibrary,\r\n    retrieveSavedTracks,\r\n    processTracks,\r\n    inicialScanReduceIds,\r\n    findAndStoreArtists,\r\n    distributeTrackAudioFeatures,\r\n    calcTracksPerGenre,\r\n    calcExtremes,\r\n    retrieveTopPlayed,\r\n    retrieveTopPlayedArtists,\r\n    retrieveTopPlayedTracks,\r\n\r\n    saveLibrary,\r\n    convertTracks,\r\n    gatherMostPlayedTracks,\r\n    gatherExtremes,\r\n    compressTrack,\r\n    convertArtists,\r\n    gatherMostPlayedArtists,\r\n    gatherMostSavedArtists,\r\n    compressArtist,\r\n    convertGenres,\r\n\r\n    songAnalysis,\r\n    songAnalysisFeatures,\r\n    cleanAudioAnalysis,\r\n    getPercentiles,\r\n    HSVtoRGB,\r\n\r\n    artistAnalysis,\r\n    processArtist,\r\n    artistTracks,\r\n    artistTimeline,\r\n    artistTopTracks,\r\n\r\n    bangerCalc,\r\n\r\n    getTopArtists,\r\n    getTopTracks,\r\n    getRecentlyPlayed,\r\n    getTrack,\r\n    getTracks,\r\n    getArtist,\r\n    getArtists,\r\n    getAudioFeaturesForTracks,\r\n    getAudioFeaturesForTrack,\r\n    getAudioAnalysisForTrack,\r\n    getRecomendations,\r\n    getSavedTracks,\r\n    getUser,\r\n    getArtistTopTracks,\r\n    searchSpotify\r\n};"]}]}