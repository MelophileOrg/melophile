{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\src\\store\\actions.js","mtime":1573365772992},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/andre/Documents/GitHub/Spotify-Features/front-end3/src/store/actions.js"],"names":["inicializeGetToken","context","authEndpoint","clientId","redirectUri","state","dev","scopes","access_token","window","location","join","inicializeParseToken","token","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","dispatch","inicializeSetToken","spotifyApi","setAccessToken","commit","loadLibrary","limit","offset","retrieveSavedTracks","payload","response","total","items","length","keys","Object","audioFeatures","i","processTracks","ids","trackAudioFeatures","now","Date","nowTime","getTime","MONTH","tempo","energy","danceability","banger","addedDate","tracks","id","date","addedDateTime","month","Math","floor","value","valence","inicialScanReduceIds","artistsToFind","trackObject","track","j","artists","includes","push","map","artist","added_at","album","album_type","available_markets","href","external_urls","spotify","type","uri","disc_number","external_ids","images","image","url","findAndStoreArtists","values","trackSets","sectionIds","splice","newArtists","concat","artistObject","followers","genres","name","tracknum","distributeTrackAudioFeatures","acousticness","instrumentalness","liveness","loudness","speechiness","key","mode","properties","duration_ms","time_signature","calcTracksPerGenre","artistIds","genreTuples","entries","topGenres","sort","a","b","slice","topGenreIds","genre","artistTuples","topArtists","topArtistIds","calcExtremes","trackTuples","charts","topTracks","topTracksIds","chart","retrieveTopPlayed","retrieveTopPlayedArtists","ranges","time_range","index","retrieveTopPlayedTracks","bangerCalc","saveLibrary","private","include","numerical_data","audio_features","most_played_tracks","most_played_artists","data","progress","most_saved_artists","most_saved_genres","topSaved","topPlayed","numerical_features","extremes","probability_features","happiness_distribution","plot","energy_distribution","danceability_distribution","banger_distribution","added_timeline","dateAdded","happiness_timeline","happinessTimeline","timeline","convertTracks","reqTracks","addTracks","nonRepeatedTracks","gatherMostPlayedTracks","gatherExtremes","k","compressTrack","convertArtists","reqArtists","addArtists","nonRepeatedArtists","gatherMostPlayedArtists","gatherMostSavedArtists","compressArtist","convertGenres","reqGenres","songAnalysis","trackData","audioAnalysis","songAnalysisFeatures","song","cleanAudioAnalysis","audioAnalysisSegments","newSegments","segments","width","round","itemIndex","sum","pitches","averagePitch","hue","saturation","color","loudness_max","start","red","r","green","g","blue","getPercentiles","lower","HSVtoRGB","f","p","q","t","artistAnalysis","processArtist","artistTracks","artistTimeline","oldest","newest","artistSaved","dateTime","diff","diffMonth","time","artistTopTracks","getTopArtists","getMyTopArtists","getTopTracks","getMyTopTracks","getRecentlyPlayed","getMyRecentlyPlayedTracks","getTrack","track_id","getTracks","track_ids","getArtist","getArtists","getAudioFeaturesForTracks","getAudioFeaturesForTrack","getAudioAnalysisForTrack","getRecomendations","getRecommendations","getSavedTracks","getMySavedTracks","getUser","inicialized","getMe","searchSpotify","search","query","getArtistTopTracks"],"mappings":"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","sourcesContent":["\r\n\r\n////////////////////////////////////////////////////////////////\r\n// INICIALIZATION //////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// None\r\nconst inicializeGetToken = (context) => {\r\n    const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n    const clientId = '42903eeb2bf943c4bd4903370f7a93f5';\r\n    let redirectUri = 'http://mymusictaste.org/redirect/';\r\n    if (context.state.dev)\r\n        redirectUri = 'http://localhost:8080/redirect/';\r\n    const scopes = [\r\n        'user-read-recently-played',\r\n        'user-top-read',\r\n        'user-library-read',\r\n        'user-read-email',\r\n    ];\r\n    if (!context.state.access_token) {\r\n        window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\r\n    }\r\n};\r\n// None\r\nconst inicializeParseToken = (context) => {\r\n    let token = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\r\n        if (item) {\r\n            let parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n    }, {});\r\n    context.dispatch('inicializeSetToken', token.access_token);\r\n};\r\n// Token\r\nconst inicializeSetToken = async (context, token) => {\r\n    await context.state.spotifyApi.setAccessToken(token);\r\n    await context.commit('setInicialized', true);\r\n    context.dispatch('getUser');\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// LOAD PROGRESS ///////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// None\r\nconst loadLibrary = async (context) => {\r\n    context.commit('resetProgress');\r\n    await context.dispatch('retrieveSavedTracks', {limit: 50, offset: 0});\r\n    await context.dispatch('retrieveTopPlayed');\r\n    await context.dispatch('calcTracksPerGenre');\r\n    await context.dispatch('calcExtremes');\r\n};\r\n// {limit: Number, offset: Number}\r\nconst retrieveSavedTracks = async (context, payload) => {\r\n    let response = await context.dispatch('getSavedTracks', {limit: payload.limit, offset: payload.offset});\r\n    if (payload.offset == 0)\r\n        context.commit('setTotal', response.total);\r\n    await context.dispatch('processTracks', response.items);\r\n    if (response.items.length == payload.limit)\r\n        await context.dispatch('retrieveSavedTracks', {limit: 50, offset: payload.offset + payload.limit});\r\n    else {\r\n        let keys = Object.keys(context.state.audioFeatures);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            await context.commit('averageAudioFeatureValue', keys[i]);\r\n        }\r\n        await context.commit('averageMode');\r\n        await context.commit('averageValenceOverTime');\r\n        context.commit('setTracksLoaded');\r\n    }\r\n};\r\n// Track Array\r\nconst processTracks = async (context, payload) => {\r\n    let ids = await context.dispatch('inicialScanReduceIds', payload);\r\n    let trackAudioFeatures = await context.dispatch('getAudioFeaturesForTracks', ids);\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    for (let i = 0; i < trackAudioFeatures.length; i++) {\r\n        trackAudioFeatures[i].banger = await context.dispatch('bangerCalc', {tempo: trackAudioFeatures[i].tempo, energy: trackAudioFeatures[i].energy, danceability: trackAudioFeatures[i].danceability});\r\n        let addedDate = new Date(context.state.tracks[trackAudioFeatures[i].id].date);\r\n        let addedDateTime = addedDate.getTime();\r\n        await context.commit('addValenceOverTime', {month: Math.floor((nowTime - addedDateTime) / MONTH), value:  trackAudioFeatures[i].valence});\r\n    }\r\n    await context.dispatch('distributeTrackAudioFeatures', trackAudioFeatures);\r\n};\r\n// Track Array\r\nconst inicialScanReduceIds = async (context, payload) => {\r\n    let ids = [];\r\n    let artistsToFind = {};\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    for (let i = 0; i < payload.length; i++) {\r\n        let trackObject = payload[i].track;\r\n        for (let j = 0; j < trackObject.artists.length; j++) {\r\n            if (!(trackObject.artists[j].id in context.state.artists)) {\r\n                if (!(trackObject.artists[j].id in artistsToFind))\r\n                    artistsToFind[trackObject.artists[j].id] = {id: trackObject.artists[j].id, tracks: [trackObject.id]};\r\n                else {\r\n                    if (!(artistsToFind[trackObject.artists[j].id].tracks.includes(trackObject.id)))\r\n                        artistsToFind[trackObject.artists[j].id].tracks.push(trackObject.id);\r\n                }\r\n            }\r\n            else\r\n                context.commit('addTrackToArtist', {id: trackObject.artists[j].id, track: trackObject.id});\r\n        }\r\n        trackObject.artists = trackObject.artists.map(artist => artist.id);\r\n        trackObject.date = payload[i].added_at;\r\n        let addedDate = new Date(trackObject.date);\r\n        let addedDateTime = addedDate.getTime();\r\n        context.commit('addDateAddedTrack', Math.floor((nowTime - addedDateTime) / MONTH));\r\n        delete trackObject.album.album_type;\r\n        delete trackObject.album.artists;\r\n        delete trackObject.album.available_markets;\r\n        delete trackObject.album.available_markets;\r\n        trackObject.album.href = trackObject.album.external_urls.spotify;\r\n        delete trackObject.album.type;\r\n        delete trackObject.album.uri;\r\n        delete trackObject.available_markets;\r\n        delete trackObject.disc_number;\r\n        delete trackObject.external_ids;\r\n        trackObject.href = trackObject.external_urls.spotify;\r\n        delete trackObject.external_urls;\r\n        delete trackObject.type;\r\n        delete trackObject.uri;\r\n        if (trackObject.album.images.length > 1)\r\n            trackObject.image = trackObject.album.images[0].url;\r\n        ids.push(trackObject.id);\r\n        context.commit('pushTrack', {id: trackObject.id, value: trackObject});\r\n        context.commit('addProcessed');\r\n    }\r\n    await context.dispatch('findAndStoreArtists', artistsToFind);\r\n    return ids;\r\n};\r\n// Array {id: String, tracks: [String]}\r\nconst findAndStoreArtists = async (context, payload) => {\r\n    let ids = Object.values(payload).map(artist => artist.id);\r\n    let trackSets = Object.values(payload);\r\n    let artists = [];\r\n    while (ids.length > 0) {\r\n        let sectionIds = ids.splice(0, 50);\r\n        let newArtists = await context.dispatch('getArtists', sectionIds);\r\n        artists = artists.concat(newArtists);\r\n    }\r\n    for (let i = 0; i < artists.length; i++) {\r\n        let artistObject = artists[i];\r\n        for (let j = 0; j < trackSets.length; j++) {\r\n            if (artistObject.id == trackSets[j].id){\r\n                artistObject.tracks = trackSets[j].tracks;\r\n                trackSets.splice(j, 1);\r\n                break;\r\n            }\r\n        }\r\n        artistObject.href = artistObject.external_urls.spotify;\r\n        delete artistObject.external_urls;\r\n        artistObject.followers = artistObject.followers.total;\r\n        for (let j = 0; j < artistObject.genres.length; j++) {\r\n            if (!(artistObject.genres[j] in context.state.genres))  \r\n                await context.commit('pushGenre', {id: artistObject.genres[j], value: {name: artistObject.genres[j], artists: [artistObject.id], tracknum: 0}});\r\n            else \r\n                await context.commit('addArtistToGenre', {id: artistObject.genres[j], artist: artistObject.id});\r\n        }\r\n        delete artistObject.type;\r\n        delete artistObject.uri;\r\n        if (artistObject.images.length > 0)\r\n            artistObject.image = artistObject.images[0].url;\r\n        delete artistObject.images;\r\n        await context.commit('pushArtist', {id: artistObject.id, value: artistObject});\r\n    }\r\n};\r\n// Audio Features Array\r\nconst distributeTrackAudioFeatures = async (context, payload) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let values = {\r\n        acousticness: 0,\r\n        danceability: 0,\r\n        energy: 0,\r\n        instrumentalness: 0,\r\n        liveness: 0,\r\n        loudness: 0,\r\n        speechiness: 0,\r\n        valence: 0,\r\n        tempo: 0,\r\n        banger: 0,\r\n    };\r\n    for (let i = 0; i < payload.length; i++) {\r\n        for (let j = 0; j < keys.length; j++) {\r\n            values[keys[j]] += payload[i][keys[j]];\r\n            context.commit('plotAudioFeatureValue', {key: keys[j], value: payload[i][keys[j]]});\r\n        }\r\n        context.commit('addMode', payload[i].mode);\r\n        await context.commit('addTrackProperties', {id: payload[i].id, properties: {\r\n            danceability: payload[i].danceability,\r\n            energy: payload[i].energy,\r\n            key: payload[i].key,\r\n            loudness: payload[i].loudness,\r\n            mode: payload[i].mode,\r\n            speechiness: payload[i].speechiness,\r\n            acousticness: payload[i].acousticness,\r\n            instrumentalness: payload[i].instrumentalness,\r\n            liveness: payload[i].liveness,\r\n            valence: payload[i].valence,\r\n            tempo: payload[i].tempo,\r\n            duration_ms: payload[i].duration_ms,\r\n            time_signature: payload[i].time_signature,\r\n            banger: payload[i].banger,\r\n        }});\r\n    }\r\n    for (let i = 0; i < keys.length; i++) {\r\n        await context.commit('addAudioFeatureValue', {key: keys[i], value: values[keys[i]]});\r\n    }   \r\n};\r\nconst calcTracksPerGenre = async (context) => {\r\n    let artistIds = Object.keys(context.state.artists);\r\n    for (let i = 0; i < artistIds.length; i++) \r\n        for (let j = 0; j < context.state.artists[artistIds[i]].genres.length; j++) \r\n            if (\"tracks\" in context.state.artists[artistIds[i]])\r\n                if (context.state.artists[artistIds[i]].tracks.length > 0)\r\n                    await context.commit('addGenreTrackNum', {id: context.state.artists[artistIds[i]].genres[j], value: context.state.artists[artistIds[i]].tracks.length});\r\n    let genreTuples = Object.entries(context.state.genres);\r\n    let topGenres = genreTuples.sort(function(a,b) {\r\n        if (!(\"tracknum\" in a[1]) && !(\"tracknum\" in b[1]))\r\n            return 0;\r\n        if (!(\"tracknum\" in b[1]))\r\n            return 0 - a[1].tracknum;\r\n        if (!(\"tracknum\" in a[1]))\r\n            return b[1].tracknum;\r\n        return b[1].tracknum - a[1].tracknum\r\n    }).slice(0,50);\r\n    let topGenreIds = topGenres.map(genre => genre[0]);\r\n    context.commit('setTopSavedGenres', topGenreIds);\r\n    let artistTuples = Object.entries(context.state.artists);\r\n    let topArtists = artistTuples.sort(function(a,b) {\r\n        if (!(\"tracks\" in a[1]) && !(\"tracks\" in b[1]))\r\n            return 0;\r\n        if (!(\"tracks\" in b[1]))\r\n            return 0 - a[1].tracks.length;\r\n        if (!(\"tracks\" in a[1]))\r\n            return b[1].tracks.length;\r\n        return b[1].tracks.length - a[1].tracks.length\r\n    }).slice(0,50);\r\n    let topArtistIds = topArtists.map(artist => artist[0]);\r\n    context.commit('setTopSavedArtists', topArtistIds);\r\n    context.commit('setArtistsLoaded');\r\n    context.commit('setGenresLoaded');\r\n};\r\nconst calcExtremes = async (context) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let trackTuples = Object.entries(context.state.tracks);\r\n    let charts = [\"minchart\", \"maxchart\"];\r\n    let topTracks;\r\n    for (let i = 0; i < keys.length; i++) \r\n        for (let j = 0; j < charts.length; j++) {\r\n            if (charts[j] == \"minchart\")\r\n                topTracks = trackTuples.sort((a,b) => a[1][keys[i]] - b[1][keys[i]]).slice(0,25);\r\n            else\r\n                topTracks = trackTuples.sort((a,b) => b[1][keys[i]] - a[1][keys[i]]).slice(0,25);\r\n            let topTracksIds = topTracks.map(track => track[0]);\r\n            context.commit('setAudioFeatureChart', {key: keys[i], chart: [charts[j]], value: topTracksIds});\r\n        }\r\n    context.commit('setExtremesLoaded');\r\n};\r\nconst retrieveTopPlayed = async (context) => {\r\n    await context.dispatch('retrieveTopPlayedArtists');\r\n    await context.dispatch('retrieveTopPlayedTracks');\r\n};\r\nconst retrieveTopPlayedArtists = async (context) => {\r\n    let ranges = ['short_term', 'medium_term', 'long_term'];\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        let artists = await context.dispatch('getTopArtists', {limit: 50, time_range: ranges[i], offset: 0});\r\n        let ids = [];\r\n        for (let j = 0; j < artists.length; j++) {\r\n            ids.push(artists[j].id);\r\n            if (!(artists[j].id in context.state.artists)) {\r\n                let artistObject = artists[j];\r\n                artistObject.href = artistObject.external_urls.spotify;\r\n                delete artistObject.external_urls;\r\n                artistObject.followers = artistObject.followers.total;\r\n                delete artistObject.type;\r\n                delete artistObject.uri;\r\n                artistObject.tracks = [];\r\n                context.commit('pushArtist', {id: artists[j].id, value: artistObject});\r\n            }\r\n        }\r\n        context.commit('setTopPlayedArtists', {index: i, value: ids});\r\n    }\r\n};\r\nconst retrieveTopPlayedTracks = async (context) => {\r\n    let ranges = ['short_term', 'medium_term', 'long_term'];\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        let tracks = await context.dispatch('getTopTracks', {limit: 50, time_range: ranges[i], offset: 0});\r\n        let ids = [];\r\n        for (let j = 0; j < tracks.length; j++) {\r\n            ids.push(tracks[j].id);\r\n            if (!(tracks[j].id in context.state.tracks)) {\r\n                let trackObject = tracks[j];\r\n                delete trackObject.album.album_type;\r\n                delete trackObject.album.artists;\r\n                delete trackObject.album.available_markets;\r\n                delete trackObject.album.available_markets;\r\n                trackObject.album.href = trackObject.album.external_urls.spotify;\r\n                delete trackObject.album.type;\r\n                delete trackObject.album.uri;\r\n                delete trackObject.available_markets;\r\n                delete trackObject.disc_number;\r\n                delete trackObject.external_ids;\r\n                trackObject.href = trackObject.external_urls.spotify;\r\n                delete trackObject.external_urls;\r\n                delete trackObject.type;\r\n                delete trackObject.uri;\r\n                context.commit('pushTrack', {id: tracks[j].id, value: trackObject});\r\n            }\r\n        }\r\n        context.commit('setTopPlayedTracks', {index: i, value: ids});\r\n    }\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// AUDIO FEATURES //////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {tempo: Number, energy: Number, danceability: Number}\r\nconst bangerCalc = async (context, payload) => {\r\n    return ((payload.tempo - 96 + (payload.energy * 100) + (payload.danceability*50)) / 210);\r\n}\r\n////////////////////////////////////////////////////////////////\r\n// SAVE LIBRARY ////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {name: String, privacy: Boolean, include: Object}\r\n// INCLUDE ITEM               KEY                        PUBLIC REQ\r\n// Numerical Data: True.      numerical_data             True\r\n// Most Saved Artists:        most_saved_artists         \r\n// Audio Features: True.      audio_features             True\r\n// Top Saved Genres:          most_saved_genres\r\n// Numerical Features:        numerical_features\r\n// Probability Features:      probability_features\r\n// Date Added Timeline:       added_timeline\r\n// Happiness Distribution:    happiness_distribution\r\n// Energy Distribution:       energy_distribution\r\n// Danceability Distribution: danceability_distribution\r\n// Banger Distribution:       banger_distribution\r\n// Happiness Timeline         happiness_timeline\r\n// Top 30 Songs:              most_played_tracks          True\r\n// Top 30 Artists:            most_played_artists         True\r\n// Extremes Top 10:           extremes\r\n\r\nconst saveLibrary = async (context, payload) => {\r\n    if (!payload.private && !payload.include.numerical_data && !payload.include.audio_features && !payload.include.most_played_tracks && !payload.include.most_played_artists)\r\n        return null;\r\n    let data = {};\r\n    data.include = payload.include;\r\n    data.name = payload.name;\r\n    data.private = payload.private;\r\n    data.tracks = await context.dispatch('convertTracks', payload.include);\r\n    data.artists = await context.dispatch('convertArtists', payload.include);\r\n    data.genres = await context.dispatch('convertGenres', payload.include);\r\n    if (payload.include.numerical_data)\r\n        data.numerical_data = {total: context.state.progress.total, artists: (Object.keys(context.state.artists)).length, genres: (Object.keys(context.state.genres)).length};\r\n    if (payload.include.most_saved_artists || payload.include.most_saved_genres) {\r\n        data.topSaved = {};\r\n        if (payload.include.most_saved_artists)\r\n            data.topSaved.artists = context.state.topSaved.artists.slice(0, 20);\r\n        if (payload.include.most_saved_genres)\r\n            data.topSaved.genres = context.state.topSaved.genres.slice(0, 20);\r\n    }\r\n    if (payload.include.most_played_tracks || payload.include.most_played_artists) {\r\n        data.topPlayed = {};\r\n        if (payload.include.most_played_tracks) \r\n            data.topPlayed.tracks = [];\r\n            data.topPlayed.tracks[0] = context.state.topPlayed.tracks[0].slice(0, 20);\r\n            data.topPlayed.tracks[1] = context.state.topPlayed.tracks[1].slice(0, 20);\r\n            data.topPlayed.tracks[2] = context.state.topPlayed.tracks[2].slice(0, 20);\r\n        if (payload.include.most_played_artists) \r\n            data.topPlayed.artists = [];\r\n            data.topPlayed.artists[0] = context.state.topPlayed.artists[0].slice(0, 20);\r\n            data.topPlayed.artists[1] = context.state.topPlayed.artists[1].slice(0, 20);\r\n            data.topPlayed.artists[2] = context.state.topPlayed.artists[2].slice(0, 20);\r\n    }\r\n    if (payload.include.audio_features || payload.include.numerical_features || payload.include.extremes || payload.include.probability_features) {\r\n        data.audioFeatures = {\r\n            acousticness: {},\r\n            danceability: {},\r\n            energy: {},\r\n            instrumentalness: {},\r\n            liveness: {},\r\n            loudness: {},\r\n            speechiness: {},\r\n            tempo: {},\r\n            valence: {},\r\n            banger: {},\r\n        };\r\n        if (payload.include.audio_features) {\r\n            data.audioFeatures.valence.value = context.state.audioFeatures.valence.value;\r\n            data.audioFeatures.energy.value = context.state.audioFeatures.energy.value;\r\n            data.audioFeatures.danceability.value = context.state.audioFeatures.danceability.value;\r\n        }\r\n        if (payload.include.numerical_features) {\r\n            data.audioFeatures.tempo.value = context.state.audioFeatures.tempo.value;\r\n            data.audioFeatures.loudness.value = context.state.audioFeatures.loudness.value;\r\n            data.mode = context.state.mode.value;\r\n        }\r\n        if (payload.include.probability_features) {\r\n            data.audioFeatures.acousticness.value = context.state.audioFeatures.acousticness.value;\r\n            data.audioFeatures.instrumentalness.value = context.state.audioFeatures.instrumentalness.value;\r\n            data.audioFeatures.liveness.value = context.state.audioFeatures.liveness.value;\r\n            data.audioFeatures.speechiness.value = context.state.audioFeatures.speechiness.value;\r\n        }\r\n        if (payload.include.extremes) {\r\n            let keys = Object.keys(data.audioFeatures);\r\n            let charts = [\"minchart\", \"maxchart\"]\r\n            for (let i = 0; i < keys.length; i++) {\r\n                for (let j = 0; j < charts.length; j++) {\r\n                    data.audioFeatures[keys[i]][charts[j]] = context.state.audioFeatures[keys[i]][charts[j]].slice(0, 10);\r\n                }\r\n            }\r\n        }\r\n        if (payload.include.happiness_distribution) {\r\n            data.audioFeatures.valence.plot = context.state.audioFeatures.valence.plot;\r\n        }\r\n        if (payload.include.energy_distribution) {\r\n            data.audioFeatures.energy.plot = context.state.audioFeatures.energy.plot;\r\n        }\r\n        if (payload.include.danceability_distribution) {\r\n            data.audioFeatures.danceability.plot = context.state.audioFeatures.danceability.plot;\r\n        }\r\n        if (payload.include.banger_distribution) {\r\n            data.audioFeatures.banger.plot = context.state.audioFeatures.banger.plot;\r\n        }\r\n    }\r\n    if (payload.include.added_timeline) \r\n        data.dateAdded = context.state.dateAdded;\r\n    if (payload.include.happiness_timeline) {\r\n        data.happinessTimeline = context.state.audioFeatures.valence.timeline;\r\n    }\r\n    return data;\r\n};\r\n// Include Object\r\nconst convertTracks = async (context, payload) => {\r\n    let reqTracks = {};\r\n    let addTracks = [];\r\n    if (payload.most_played_tracks)\r\n        addTracks = addTracks.concat(await context.dispatch('gatherMostPlayedTracks'));\r\n    if (payload.extremes) \r\n        addTracks = addTracks.concat(await context.dispatch('gatherExtremes'));\r\n    let nonRepeatedTracks = {};\r\n    for (let i = 0; i < addTracks.length; i++) {\r\n        if (!(addTracks[i] in nonRepeatedTracks))\r\n            nonRepeatedTracks[addTracks[i]] = 0;\r\n        else {\r\n            nonRepeatedTracks[addTracks[i]] += 1;\r\n        }\r\n    }\r\n    let ids = Object.keys(nonRepeatedTracks);\r\n    for (let i = 0; i < ids.length; i++) {\r\n        reqTracks[ids[i]] = await context.dispatch(\"compressTrack\", context.state.tracks[ids[i]]);\r\n    }\r\n    return reqTracks;\r\n};\r\n// Nothing\r\nconst gatherMostPlayedTracks = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topPlayed.tracks.length; i++) {\r\n        for (let j = 0; (j < context.state.topPlayed.tracks[i].length && j < 20); j++) {\r\n            ids.push(context.state.topPlayed.tracks[i][j]);\r\n        }\r\n    }\r\n    return ids;\r\n}\r\n// Nothing\r\nconst gatherExtremes = async (context) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let charts = [\"minchart\", \"maxchart\"];\r\n    let ids = [];\r\n    for (let i = 0; i < keys.length; i++) {\r\n        for (let j = 0; j < charts.length; j++) {\r\n            for (let k = 0; k < (context.state.audioFeatures[keys[i]][charts[j]].length) && k < 10; k++) {\r\n                ids.push(context.state.audioFeatures[keys[i]][charts[j]][k]);\r\n            }\r\n        }\r\n    }\r\n    return ids;\r\n}\r\n// Track object\r\nconst compressTrack = async (context, payload) => {\r\n    let newArtists = [];\r\n    for (let i = 0; i < payload.artists.length; i++) {\r\n        if (typeof(payload.artists[i]) == 'object')\r\n            newArtists.push({id: payload.artists[i], name: payload.artists[i].name});\r\n        else \r\n            newArtists.push({id: payload.artists[i], name: context.state.artists[payload.artists[i]].name});\r\n    }\r\n    return {id: payload.id, name: payload.name, image: payload.album.images[0].url, artists: newArtists};\r\n};\r\n// None\r\nconst convertArtists = async (context, payload) => {\r\n    let reqArtists = {};\r\n    let addArtists = [];\r\n    if (payload.most_played_artists)\r\n        addArtists = addArtists.concat(await context.dispatch('gatherMostPlayedArtists'));\r\n    if (payload.most_saved_artists) \r\n        addArtists = addArtists.concat(await context.dispatch('gatherMostSavedArtists'));\r\n    let nonRepeatedArtists = {};\r\n    for (let i = 0; i < addArtists.length; i++) {\r\n        if (!(addArtists[i] in nonRepeatedArtists))\r\n            nonRepeatedArtists[addArtists[i]] = 1;\r\n        else {\r\n            nonRepeatedArtists[addArtists[i]] += 1;\r\n        }\r\n    }\r\n    let ids = Object.keys(nonRepeatedArtists);\r\n    for (let i = 0; i < ids.length; i++) {\r\n        reqArtists[ids[i]] = await context.dispatch(\"compressArtist\", context.state.artists[ids[i]]);\r\n    }\r\n    return reqArtists;\r\n};\r\n// Nothing\r\nconst gatherMostPlayedArtists = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topPlayed.artists.length; i++) {\r\n        for (let j = 0; (j < context.state.topPlayed.artists[i].length && j < 20); j++) {\r\n            ids.push(context.state.topPlayed.artists[i][j]);\r\n        }\r\n    }\r\n    return ids;\r\n};\r\n// Nothing\r\nconst gatherMostSavedArtists = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topSaved.artists.length; i++) {\r\n        ids.push(context.state.topSaved.artists[i]);\r\n    }\r\n    return ids;\r\n};\r\n// Track object\r\nconst compressArtist = async (context, payload) => {\r\n    return {id: payload.id, name: payload.name, image: payload.image, genres: payload.genres, tracks: payload.tracks};\r\n};\r\n// Include Object\r\nconst convertGenres = async (context, payload) => {\r\n    let reqGenres = {};\r\n    if (payload.most_saved_genres) {\r\n        for (let i = 0; (i < context.state.topSaved.genres.length && i < 20); i++) {\r\n            reqGenres[context.state.topSaved.genres[i]] = context.state.genres[context.state.topSaved.genres[i]];\r\n        }\r\n    }\r\n    return reqGenres;\r\n};\r\n\r\n////////////////////////////////////////////////////////////////\r\n// ANALYSIS ////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n/*\r\n    album: {album_type: \"album\", artists: Array(1), available_markets: Array(78), external_urls: {…}, href: \"https://api.spotify.com/v1/albums/5MmMomspau1V5YpXjHYJRy\", …}\r\n    artists: [{…}]\r\n    available_markets: (78) [\"AD\", \"AE\", \"AR\", \"AT\", \"AU\", \"BE\", \"BG\", \"BH\", \"BO\", \"BR\", \"CA\", \"CH\", \"CL\", \"CO\", \"CR\", \"CY\", \"CZ\", \"DE\", \"DK\", \"DO\", \"DZ\", \"EC\", \"EE\", \"EG\", \"ES\", \"FI\", \"FR\", \"GB\", \"GR\", \"GT\", \"HK\", \"HN\", \"HU\", \"ID\", \"IE\", \"IL\", \"IN\", \"IS\", \"IT\", \"JO\", \"KW\", \"LB\", \"LI\", \"LT\", \"LU\", \"LV\", \"MA\", \"MC\", \"MT\", \"MX\", \"MY\", \"NI\", \"NL\", \"NO\", \"NZ\", \"OM\", \"PA\", \"PE\", \"PH\", \"PL\", \"PS\", \"PT\", \"PY\", \"QA\", \"RO\", \"SA\", \"SE\", \"SG\", \"SK\", \"SV\", \"TH\", \"TN\", \"TR\", \"TW\", \"US\", \"UY\", \"VN\", \"ZA\"]\r\n    disc_number: 1\r\n    duration_ms: 296899\r\n    explicit: false\r\n    external_ids: {isrc: \"GBCFB1200106\"}\r\n    external_urls: {spotify: \"https://open.spotify.com/track/74Csq5DMaOBShLUhI6NU5A\"}\r\n    href: \"https://api.spotify.com/v1/tracks/74Csq5DMaOBShLUhI6NU5A\"\r\n    id: \"74Csq5DMaOBShLUhI6NU5A\"\r\n    is_local: false\r\n    name: \"Curse Me Good\"\r\n    popularity: 50\r\n    preview_url: \"https://p.scdn.co/mp3-preview/ea8af91eefd28faf2ab5c73b6dc5a596bf0d5b9b?cid=42903eeb2bf943c4bd4903370f7a93f5\"\r\n    track_number: 2\r\n    type: \"track\"\r\n    uri: \"spotify:track:74\r\n\r\n\r\n    acousticness: 0.0105\r\n    album: {external_urls: {…}, href: \"https://open.spotify.com/album/5MmMomspau1V5YpXjHYJRy\", id: \"5MmMomspau1V5YpXjHYJRy\", images: Array(3), name: \"The Glorious Dead\", …}\r\n    artists: [\"0bZCak2tcRMY1dzEIuwF42\"]\r\n    banger: 0.6849999999999999\r\n    danceability: 0.809\r\n    date: \"2018-09-23T23:34:33Z\"\r\n    duration_ms: 296900\r\n    energy: 0.814\r\n    explicit: false\r\n    href: \"https://open.spotify.com/track/74Csq5DMaOBShLUhI6NU5A\"\r\n    id: \"74Csq5DMaOBShLUhI6NU5A\"\r\n    instrumentalness: 0.0000248\r\n    is_local: false\r\n    key: 6\r\n    liveness: 0.099\r\n    loudness: -6.829\r\n    mode: 0\r\n    name: \"Curse Me Good\"\r\n    popularity: 50\r\n    preview_url: \"https://p.scdn.co/mp3-preview/ea8af91eefd28faf2ab5c73b6dc5a596bf0d5b9b?cid=42903eeb2bf943c4bd4903370f7a93f5\"\r\n    speechiness: 0.0338\r\n    tempo: 118\r\n    time_signature: 4\r\n    track_number: 2\r\n    valence: 0.804\r\n*/\r\nconst songAnalysis = async (context, id) => {\r\n    let trackData;\r\n    trackData = await context.dispatch('getTrack', id);\r\n    trackData = await context.dispatch('songAnalysisFeatures', {trackData: trackData, id: id});\r\n    trackData.audioAnalysis = await context.dispatch('cleanAudioAnalysis', {id: id});\r\n    return trackData;\r\n};\r\n// {id: String}\r\nconst songAnalysisFeatures = async (context, payload) => {\r\n    let song = payload.trackData;\r\n    let audioFeatures = await context.dispatch('getAudioFeaturesForTrack', payload.id);\r\n    song.acousticness = audioFeatures.acousticness;\r\n    song.danceability = audioFeatures.danceability;\r\n    song.energy = audioFeatures.energy;\r\n    song.instrumentalness = audioFeatures.instrumentalness;\r\n    song.key = audioFeatures.key;\r\n    song.liveness = audioFeatures.liveness;\r\n    song.loudness = audioFeatures.loudness;\r\n    song.mode = audioFeatures.mode;\r\n    song.speechiness = audioFeatures.speechiness;\r\n    song.tempo = audioFeatures.tempo;\r\n    song.valence = audioFeatures.valence;\r\n    return song;\r\n};\r\nconst cleanAudioAnalysis = async (context, payload) => {\r\n    let audioAnalysisSegments = 80;\r\n    let audioAnalysis = await context.dispatch('getAudioAnalysisForTrack', payload.id);\r\n    let newSegments = [];\r\n    if (audioAnalysis.segments.length < audioAnalysisSegments)\r\n        audioAnalysisSegments = audioAnalysis.segments.length;\r\n    let width = Math.round(audioAnalysis.segments.length / audioAnalysisSegments);\r\n    \r\n    for (var i = 0; i < audioAnalysisSegments; i++)\r\n    {\r\n        let itemIndex = Math.round(width * i);\r\n        if (itemIndex > audioAnalysis.segments.length - 1)\r\n        {\r\n            itemIndex = audioAnalysis.segments.length - 2;\r\n        }\r\n        let sum = 0;\r\n        for (var j = 0; j < audioAnalysis.segments[itemIndex].pitches.length; j++)\r\n        {\r\n            sum += audioAnalysis.segments[itemIndex].pitches[j];\r\n        }\r\n        let averagePitch = sum / audioAnalysis.segments[itemIndex].pitches.length; \r\n        let color = await context.dispatch('HSVtoRGB', {hue: (((1 - averagePitch) * 229 + -50) / 360), saturation: 0.51, value: 0.89});\r\n        let loudness = (Math.round(((audioAnalysis.segments[itemIndex].loudness_max / 60) + 1) * 100) / 100);\r\n\r\n        newSegments.push({\r\n            start: Math.round(audioAnalysis.segments[itemIndex].start),\r\n            loudness_max: loudness, \r\n            red: color.r,\r\n            green: color.g,\r\n            blue: color.b,\r\n        });\r\n    }\r\n    audioAnalysis.segments = null;\r\n    return newSegments\r\n};\r\nconst getPercentiles = async (context, payload) => {\r\n    let ids = Object.keys(context.state.tracks);\r\n    let keys = Object.keys(payload);\r\n    let response = {valence: 0, danceability: 0, energy: 0, banger: 0};\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let lower = 0;\r\n        for (let j = 0; j < ids.length; j++) {\r\n            if (context.state.tracks[ids[j]][keys[i]] <= payload[keys[i]]) {\r\n                lower += 1;\r\n            }\r\n        }\r\n        response[keys[i]] = lower / context.state.progress.total;\r\n    }\r\n    return response;\r\n};\r\n//{h, s, v}\r\nconst HSVtoRGB = async (context, payload) => {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(payload.hue * 6);\r\n    f = payload.hue * 6 - i;\r\n    p = payload.value * (1 - payload.saturation);\r\n    q = payload.value * (1 - f * payload.saturation);\r\n    t = payload.value * (1 - (1 - f) * payload.saturation);\r\n    switch (i % 6) {\r\n        case 0: r = payload.value, g = t, b = p; break;\r\n        case 1: r = q, g = payload.value, b = p; break;\r\n        case 2: r = p, g = payload.value, b = t; break;\r\n        case 3: r = p, g = q, b = payload.value; break;\r\n        case 4: r = t, g = p, b = payload.value; break;\r\n        case 5: r = payload.value, g = p, b = q; break;\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n};\r\nconst artistAnalysis = async (context, payload) => {\r\n    let artist = await context.dispatch(\"getArtist\", payload);\r\n    let artistObject = await context.dispatch(\"processArtist\", artist);\r\n    return artistObject;\r\n};\r\nconst processArtist = async (context, payload) => {\r\n    payload.href = payload.external_urls.spotify;\r\n    delete payload.external_urls;\r\n    payload.followers = payload.followers.total;\r\n    payload.image = payload.images[0].url;\r\n    delete payload.images;\r\n    return payload;\r\n};\r\nconst artistTracks = async (context, payload) => {\r\n    if (!(payload.id in context.state.artists))\r\n        return [];\r\n    let ids = context.state.artists[payload.id].tracks;\r\n    let tracks = [];\r\n    for (let i = 0; i < ids.length; i++) {\r\n        tracks.push(context.state.tracks[ids[i]]);\r\n    }\r\n    return tracks;\r\n};\r\nconst artistTimeline = async (context, payload) => {\r\n    if (!(payload.id in context.state.artists))\r\n        return {timeline: [], oldest: [], newest: []};\r\n    let artistObject = payload;\r\n    let timeline = [];\r\n    let tracks = [];\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    let artistSaved = context.state.artists[artistObject.id];\r\n    for (let i = 0; i < artistSaved.tracks.length; i++) {\r\n        let date = new Date(context.state.tracks[artistSaved.tracks[i]].date);\r\n        let dateTime = date.getTime();\r\n        let diff = nowTime - dateTime;\r\n        let diffMonth = Math.floor(diff / MONTH);\r\n        tracks.push({id: artistSaved.tracks[i], time: dateTime, month: diffMonth});\r\n        if (diffMonth >= timeline.length) {\r\n            while (diffMonth >= timeline.length) {\r\n                timeline.push(0);\r\n            }\r\n        }\r\n        timeline[diffMonth] += 1;\r\n    }\r\n    tracks.sort((a, b) => (a.time > b.time) ? 1 : -1);\r\n    let oldest = tracks.slice(0, 3);\r\n    let newest = tracks.slice(tracks.length - 3, tracks.length);\r\n    while (timeline.length < context.state.dateAdded.length) {\r\n        timeline.push(0);\r\n    }\r\n    return {timeline: timeline, oldest: oldest, newest: newest};\r\n};\r\nconst artistTopTracks = async (context, id) => {\r\n    let tracks = await context.dispatch('getArtistTopTracks', id);\r\n    let ids = [];\r\n    for (let i = 0; i < tracks.length; i++) {\r\n        delete tracks[i].album.album_type;\r\n        delete tracks[i].album.artists;\r\n        delete tracks[i].album.available_markets;\r\n        delete tracks[i].album.available_markets;\r\n        tracks[i].album.href = tracks[i].album.external_urls.spotify;\r\n        delete tracks[i].album.type;\r\n        delete tracks[i].album.uri;\r\n        delete tracks[i].available_markets;\r\n        delete tracks[i].disc_number;\r\n        delete tracks[i].external_ids;\r\n        tracks[i].href = tracks[i].external_urls.spotify;\r\n        delete tracks[i].external_urls;\r\n        delete tracks[i].type;\r\n        delete tracks[i].uri;\r\n        if (tracks[i].album.images.length > 1)\r\n            tracks[i].image = tracks[i].album.images[0].url;\r\n        ids.push(tracks[i].id);\r\n    }\r\n    let audioFeatures = await context.dispatch('getAudioFeaturesForTracks', ids);\r\n\r\n    for (let i = 0; i < tracks.length; i++) {\r\n        tracks[i].valence = audioFeatures[i].valence;\r\n        tracks[i].energy = audioFeatures[i].energy;\r\n        tracks[i].danceability = audioFeatures[i].danceability;\r\n    }\r\n\r\n    return tracks;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// SOCIAL //////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////\r\n// API CALLS ///////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopArtists = async (context, payload) => {\r\n    try { \r\n        let response = await context.state.spotifyApi.getMyTopArtists({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    } \r\n};\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyTopTracks({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    }  \r\n};\r\n// {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds\r\nconst getRecentlyPlayed = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyRecentlyPlayedTracks({limit: payload.limit});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\nconst getTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTrack(track_id);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\nconst getTracks = async (context, track_ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTracks(track_ids);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// {artistId: String}\r\nconst getArtist = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtist(id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n}; \r\n// []\r\nconst getArtists = async (context, ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getArtists(ids);\r\n      return response.artists;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// Array IDs\r\nconst getAudioFeaturesForTracks = async (context, track_ids) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioFeaturesForTracks(track_ids);\r\n        return response.audio_features;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\nconst getAudioFeaturesForTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getAudioFeaturesForTracks([track_id]);\r\n      return response.audio_features[0];\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\nconst getAudioAnalysisForTrack = async (context, track_id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioAnalysisForTrack(track_id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\r\nconst getRecomendations = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getRecommendations(payload);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {limit: 1-50, offset: first index}\r\nconst getSavedTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMySavedTracks({limit: payload.limit, offset: payload.offset});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// None\r\nconst getUser = async (context) => {\r\n    try {\r\n      if (context.state.inicialized)\r\n      {\r\n        let response = await context.state.spotifyApi.getMe();\r\n        await context.commit('setUserData', response);\r\n      }\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// Array IDs\r\nconst searchSpotify = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.search(payload.query, ['track'], {limit: 25});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\nconst getArtistTopTracks = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtistTopTracks(id, \"US\", {});\r\n        return response.tracks;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\n  \r\nexport default {\r\n    inicializeGetToken,\r\n    inicializeParseToken,\r\n    inicializeSetToken,\r\n\r\n    loadLibrary,\r\n    retrieveSavedTracks,\r\n    processTracks,\r\n    inicialScanReduceIds,\r\n    findAndStoreArtists,\r\n    distributeTrackAudioFeatures,\r\n    calcTracksPerGenre,\r\n    calcExtremes,\r\n    retrieveTopPlayed,\r\n    retrieveTopPlayedArtists,\r\n    retrieveTopPlayedTracks,\r\n\r\n    saveLibrary,\r\n    convertTracks,\r\n    gatherMostPlayedTracks,\r\n    gatherExtremes,\r\n    compressTrack,\r\n    convertArtists,\r\n    gatherMostPlayedArtists,\r\n    gatherMostSavedArtists,\r\n    compressArtist,\r\n    convertGenres,\r\n\r\n    songAnalysis,\r\n    songAnalysisFeatures,\r\n    cleanAudioAnalysis,\r\n    getPercentiles,\r\n    HSVtoRGB,\r\n\r\n    artistAnalysis,\r\n    processArtist,\r\n    artistTracks,\r\n    artistTimeline,\r\n    artistTopTracks,\r\n\r\n    bangerCalc,\r\n\r\n    getTopArtists,\r\n    getTopTracks,\r\n    getRecentlyPlayed,\r\n    getTrack,\r\n    getTracks,\r\n    getArtist,\r\n    getArtists,\r\n    getAudioFeaturesForTracks,\r\n    getAudioFeaturesForTrack,\r\n    getAudioAnalysisForTrack,\r\n    getRecomendations,\r\n    getSavedTracks,\r\n    getUser,\r\n    getArtistTopTracks,\r\n    searchSpotify\r\n};"]}]}