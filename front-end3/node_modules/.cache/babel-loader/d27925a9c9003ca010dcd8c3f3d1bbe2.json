{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\src\\store\\actions.js","mtime":1573147579959},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zZWFyY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgX3R5cGVvZiBmcm9tICJDOlxcVXNlcnNcXGFuZHJlXFxEb2N1bWVudHNcXEdpdEh1YlxcU3BvdGlmeS1GZWF0dXJlc1xcbXktbXVzaWMtdGFzdGVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vdHlwZW9mIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzpcXFVzZXJzXFxhbmRyZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNwb3RpZnktRmVhdHVyZXNcXG15LW11c2ljLXRhc3RlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwoKLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwovLyBJTklDSUFMSVpBVElPTiAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8gTm9uZQp2YXIgaW5pY2lhbGl6ZUdldFRva2VuID0gZnVuY3Rpb24gaW5pY2lhbGl6ZUdldFRva2VuKGNvbnRleHQpIHsKICB2YXIgYXV0aEVuZHBvaW50ID0gJ2h0dHBzOi8vYWNjb3VudHMuc3BvdGlmeS5jb20vYXV0aG9yaXplJzsKICB2YXIgY2xpZW50SWQgPSAnNDI5MDNlZWIyYmY5NDNjNGJkNDkwMzM3MGY3YTkzZjUnOwogIHZhciByZWRpcmVjdFVyaSA9ICdodHRwOi8vbXltdXNpY3Rhc3RlLm9yZy9yZWRpcmVjdC8nOwogIGlmIChjb250ZXh0LnN0YXRlLmRldikgcmVkaXJlY3RVcmkgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlZGlyZWN0Lyc7CiAgdmFyIHNjb3BlcyA9IFsndXNlci1yZWFkLXJlY2VudGx5LXBsYXllZCcsICd1c2VyLXRvcC1yZWFkJywgJ3VzZXItbGlicmFyeS1yZWFkJywgJ3VzZXItcmVhZC1lbWFpbCddOwoKICBpZiAoIWNvbnRleHQuc3RhdGUuYWNjZXNzX3Rva2VuKSB7CiAgICB3aW5kb3cubG9jYXRpb24gPSAiIi5jb25jYXQoYXV0aEVuZHBvaW50LCAiP2NsaWVudF9pZD0iKS5jb25jYXQoY2xpZW50SWQsICImcmVkaXJlY3RfdXJpPSIpLmNvbmNhdChyZWRpcmVjdFVyaSwgIiZzY29wZT0iKS5jb25jYXQoc2NvcGVzLmpvaW4oJyUyMCcpLCAiJnJlc3BvbnNlX3R5cGU9dG9rZW4mc2hvd19kaWFsb2c9dHJ1ZSIpOwogIH0KfTsgLy8gTm9uZQoKCnZhciBpbmljaWFsaXplUGFyc2VUb2tlbiA9IGZ1bmN0aW9uIGluaWNpYWxpemVQYXJzZVRva2VuKGNvbnRleHQpIHsKICB2YXIgdG9rZW4gPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSkuc3BsaXQoJyYnKS5yZWR1Y2UoZnVuY3Rpb24gKGluaXRpYWwsIGl0ZW0pIHsKICAgIGlmIChpdGVtKSB7CiAgICAgIHZhciBwYXJ0cyA9IGl0ZW0uc3BsaXQoJz0nKTsKICAgICAgaW5pdGlhbFtwYXJ0c1swXV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFydHNbMV0pOwogICAgfQoKICAgIHJldHVybiBpbml0aWFsOwogIH0sIHt9KTsKICBjb250ZXh0LmRpc3BhdGNoKCdpbmljaWFsaXplU2V0VG9rZW4nLCB0b2tlbi5hY2Nlc3NfdG9rZW4pOwp9OyAvLyBUb2tlbgoKCnZhciBpbmljaWFsaXplU2V0VG9rZW4gPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGNvbnRleHQsIHRva2VuKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5zdGF0ZS5zcG90aWZ5QXBpLnNldEFjY2Vzc1Rva2VuKHRva2VuKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5jb21taXQoJ3NldEluaWNpYWxpemVkJywgdHJ1ZSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjb250ZXh0LmRpc3BhdGNoKCdnZXRVc2VyJyk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGluaWNpYWxpemVTZXRUb2tlbihfeCwgX3gyKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwovLyBMT0FEIFBST0dSRVNTIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8gTm9uZQoKCnZhciBsb2FkTGlicmFyeSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihjb250ZXh0KSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgncmVzZXRQcm9ncmVzcycpOwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdyZXRyaWV2ZVNhdmVkVHJhY2tzJywgewogICAgICAgICAgICAgIGxpbWl0OiA1MCwKICAgICAgICAgICAgICBvZmZzZXQ6IDAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdyZXRyaWV2ZVRvcFBsYXllZCcpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgnY2FsY1RyYWNrc1BlckdlbnJlJyk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdjYWxjRXh0cmVtZXMnKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBsb2FkTGlicmFyeShfeDMpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8ge2xpbWl0OiBOdW1iZXIsIG9mZnNldDogTnVtYmVyfQoKCnZhciByZXRyaWV2ZVNhdmVkVHJhY2tzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHZhciByZXNwb25zZSwga2V5cywgaTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dldFNhdmVkVHJhY2tzJywgewogICAgICAgICAgICAgIGxpbWl0OiBwYXlsb2FkLmxpbWl0LAogICAgICAgICAgICAgIG9mZnNldDogcGF5bG9hZC5vZmZzZXQKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICBpZiAocGF5bG9hZC5vZmZzZXQgPT0gMCkgY29udGV4dC5jb21taXQoJ3NldFRvdGFsJywgcmVzcG9uc2UudG90YWwpOwogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdwcm9jZXNzVHJhY2tzJywgcmVzcG9uc2UuaXRlbXMpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgaWYgKCEocmVzcG9uc2UuaXRlbXMubGVuZ3RoID09IHBheWxvYWQubGltaXQpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgncmV0cmlldmVTYXZlZFRyYWNrcycsIHsKICAgICAgICAgICAgICBsaW1pdDogNTAsCiAgICAgICAgICAgICAgb2Zmc2V0OiBwYXlsb2FkLm9mZnNldCArIHBheWxvYWQubGltaXQKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI0OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBrZXlzID0gT2JqZWN0LmtleXMoY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzKTsKICAgICAgICAgICAgaSA9IDA7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgaWYgKCEoaSA8IGtleXMubGVuZ3RoKSkgewogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTY7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmNvbW1pdCgnYXZlcmFnZUF1ZGlvRmVhdHVyZVZhbHVlJywga2V5c1tpXSk7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgaSsrOwogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEzOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDIxOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5jb21taXQoJ2F2ZXJhZ2VNb2RlJyk7CgogICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuY29tbWl0KCdhdmVyYWdlVmFsZW5jZU92ZXJUaW1lJyk7CgogICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3NldFRyYWNrc0xvYWRlZCcpOwoKICAgICAgICAgIGNhc2UgMjQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiByZXRyaWV2ZVNhdmVkVHJhY2tzKF94NCwgX3g1KSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIFRyYWNrIEFycmF5CgoKdmFyIHByb2Nlc3NUcmFja3MgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoY29udGV4dCwgcGF5bG9hZCkgewogICAgdmFyIGlkcywgdHJhY2tBdWRpb0ZlYXR1cmVzLCBub3csIG5vd1RpbWUsIE1PTlRILCBpLCBhZGRlZERhdGUsIGFkZGVkRGF0ZVRpbWU7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdpbmljaWFsU2NhblJlZHVjZUlkcycsIHBheWxvYWQpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgaWRzID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dldEF1ZGlvRmVhdHVyZXNGb3JUcmFja3MnLCBpZHMpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgdHJhY2tBdWRpb0ZlYXR1cmVzID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIG5vd1RpbWUgPSBub3cuZ2V0VGltZSgpOwogICAgICAgICAgICBNT05USCA9IDI2MjY1NjAwMDA7CiAgICAgICAgICAgIGkgPSAwOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGlmICghKGkgPCB0cmFja0F1ZGlvRmVhdHVyZXMubGVuZ3RoKSkgewogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjE7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTM7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdiYW5nZXJDYWxjJywgewogICAgICAgICAgICAgIHRlbXBvOiB0cmFja0F1ZGlvRmVhdHVyZXNbaV0udGVtcG8sCiAgICAgICAgICAgICAgZW5lcmd5OiB0cmFja0F1ZGlvRmVhdHVyZXNbaV0uZW5lcmd5LAogICAgICAgICAgICAgIGRhbmNlYWJpbGl0eTogdHJhY2tBdWRpb0ZlYXR1cmVzW2ldLmRhbmNlYWJpbGl0eQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICB0cmFja0F1ZGlvRmVhdHVyZXNbaV0uYmFuZ2VyID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIGFkZGVkRGF0ZSA9IG5ldyBEYXRlKGNvbnRleHQuc3RhdGUudHJhY2tzW3RyYWNrQXVkaW9GZWF0dXJlc1tpXS5pZF0uZGF0ZSk7CiAgICAgICAgICAgIGFkZGVkRGF0ZVRpbWUgPSBhZGRlZERhdGUuZ2V0VGltZSgpOwogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDE4OwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5jb21taXQoJ2FkZFZhbGVuY2VPdmVyVGltZScsIHsKICAgICAgICAgICAgICBtb250aDogTWF0aC5mbG9vcigobm93VGltZSAtIGFkZGVkRGF0ZVRpbWUpIC8gTU9OVEgpLAogICAgICAgICAgICAgIHZhbHVlOiB0cmFja0F1ZGlvRmVhdHVyZXNbaV0udmFsZW5jZQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICBpKys7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTA7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjM7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdkaXN0cmlidXRlVHJhY2tBdWRpb0ZlYXR1cmVzJywgdHJhY2tBdWRpb0ZlYXR1cmVzKTsKCiAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNCk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gcHJvY2Vzc1RyYWNrcyhfeDYsIF94NykgewogICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBUcmFjayBBcnJheQoKCnZhciBpbmljaWFsU2NhblJlZHVjZUlkcyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgaWRzLCBhcnRpc3RzVG9GaW5kLCBub3csIG5vd1RpbWUsIE1PTlRILCBpLCB0cmFja09iamVjdCwgaiwgYWRkZWREYXRlLCBhZGRlZERhdGVUaW1lOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWRzID0gW107CiAgICAgICAgICAgIGFydGlzdHNUb0ZpbmQgPSB7fTsKICAgICAgICAgICAgbm93ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgbm93VGltZSA9IG5vdy5nZXRUaW1lKCk7CiAgICAgICAgICAgIE1PTlRIID0gMjYyNjU2MDAwMDsKCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBwYXlsb2FkLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgdHJhY2tPYmplY3QgPSBwYXlsb2FkW2ldLnRyYWNrOwoKICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgdHJhY2tPYmplY3QuYXJ0aXN0cy5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgaWYgKCEodHJhY2tPYmplY3QuYXJ0aXN0c1tqXS5pZCBpbiBjb250ZXh0LnN0YXRlLmFydGlzdHMpKSB7CiAgICAgICAgICAgICAgICAgIGlmICghKHRyYWNrT2JqZWN0LmFydGlzdHNbal0uaWQgaW4gYXJ0aXN0c1RvRmluZCkpIGFydGlzdHNUb0ZpbmRbdHJhY2tPYmplY3QuYXJ0aXN0c1tqXS5pZF0gPSB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IHRyYWNrT2JqZWN0LmFydGlzdHNbal0uaWQsCiAgICAgICAgICAgICAgICAgICAgdHJhY2tzOiBbdHJhY2tPYmplY3QuaWRdCiAgICAgICAgICAgICAgICAgIH07ZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFhcnRpc3RzVG9GaW5kW3RyYWNrT2JqZWN0LmFydGlzdHNbal0uaWRdLnRyYWNrcy5pbmNsdWRlcyh0cmFja09iamVjdC5pZCkpIGFydGlzdHNUb0ZpbmRbdHJhY2tPYmplY3QuYXJ0aXN0c1tqXS5pZF0udHJhY2tzLnB1c2godHJhY2tPYmplY3QuaWQpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgY29udGV4dC5jb21taXQoJ2FkZFRyYWNrVG9BcnRpc3QnLCB7CiAgICAgICAgICAgICAgICAgIGlkOiB0cmFja09iamVjdC5hcnRpc3RzW2pdLmlkLAogICAgICAgICAgICAgICAgICB0cmFjazogdHJhY2tPYmplY3QuaWQKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdHJhY2tPYmplY3QuYXJ0aXN0cyA9IHRyYWNrT2JqZWN0LmFydGlzdHMubWFwKGZ1bmN0aW9uIChhcnRpc3QpIHsKICAgICAgICAgICAgICAgIHJldHVybiBhcnRpc3QuaWQ7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgdHJhY2tPYmplY3QuZGF0ZSA9IHBheWxvYWRbaV0uYWRkZWRfYXQ7CiAgICAgICAgICAgICAgYWRkZWREYXRlID0gbmV3IERhdGUodHJhY2tPYmplY3QuZGF0ZSk7CiAgICAgICAgICAgICAgYWRkZWREYXRlVGltZSA9IGFkZGVkRGF0ZS5nZXRUaW1lKCk7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ2FkZERhdGVBZGRlZFRyYWNrJywgTWF0aC5mbG9vcigobm93VGltZSAtIGFkZGVkRGF0ZVRpbWUpIC8gTU9OVEgpKTsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QuYWxidW0uYWxidW1fdHlwZTsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QuYWxidW0uYXJ0aXN0czsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QuYWxidW0uYXZhaWxhYmxlX21hcmtldHM7CiAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmFsYnVtLmF2YWlsYWJsZV9tYXJrZXRzOwogICAgICAgICAgICAgIHRyYWNrT2JqZWN0LmFsYnVtLmhyZWYgPSB0cmFja09iamVjdC5hbGJ1bS5leHRlcm5hbF91cmxzLnNwb3RpZnk7CiAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmFsYnVtLnR5cGU7CiAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmFsYnVtLnVyaTsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QuYXZhaWxhYmxlX21hcmtldHM7CiAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmRpc2NfbnVtYmVyOwogICAgICAgICAgICAgIGRlbGV0ZSB0cmFja09iamVjdC5leHRlcm5hbF9pZHM7CiAgICAgICAgICAgICAgdHJhY2tPYmplY3QuaHJlZiA9IHRyYWNrT2JqZWN0LmV4dGVybmFsX3VybHMuc3BvdGlmeTsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QuZXh0ZXJuYWxfdXJsczsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QudHlwZTsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QudXJpOwogICAgICAgICAgICAgIGlmICh0cmFja09iamVjdC5hbGJ1bS5pbWFnZXMubGVuZ3RoID4gMSkgdHJhY2tPYmplY3QuaW1hZ2UgPSB0cmFja09iamVjdC5hbGJ1bS5pbWFnZXNbMF0udXJsOwogICAgICAgICAgICAgIGlkcy5wdXNoKHRyYWNrT2JqZWN0LmlkKTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgncHVzaFRyYWNrJywgewogICAgICAgICAgICAgICAgaWQ6IHRyYWNrT2JqZWN0LmlkLAogICAgICAgICAgICAgICAgdmFsdWU6IHRyYWNrT2JqZWN0CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ2FkZFByb2Nlc3NlZCcpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDg7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdmaW5kQW5kU3RvcmVBcnRpc3RzJywgYXJ0aXN0c1RvRmluZCk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgaWRzKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU1KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBpbmljaWFsU2NhblJlZHVjZUlkcyhfeDgsIF94OSkgewogICAgcmV0dXJuIF9yZWY1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBBcnJheSB7aWQ6IFN0cmluZywgdHJhY2tzOiBbU3RyaW5nXX0KCgp2YXIgZmluZEFuZFN0b3JlQXJ0aXN0cyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNihjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgaWRzLCB0cmFja1NldHMsIGFydGlzdHMsIHNlY3Rpb25JZHMsIG5ld0FydGlzdHMsIGksIGFydGlzdE9iamVjdCwgaiwgX2o7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWRzID0gT2JqZWN0LnZhbHVlcyhwYXlsb2FkKS5tYXAoZnVuY3Rpb24gKGFydGlzdCkgewogICAgICAgICAgICAgIHJldHVybiBhcnRpc3QuaWQ7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0cmFja1NldHMgPSBPYmplY3QudmFsdWVzKHBheWxvYWQpOwogICAgICAgICAgICBhcnRpc3RzID0gW107CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBpZiAoIShpZHMubGVuZ3RoID4gMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDExOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzZWN0aW9uSWRzID0gaWRzLnNwbGljZSgwLCA1MCk7CiAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dldEFydGlzdHMnLCBzZWN0aW9uSWRzKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIG5ld0FydGlzdHMgPSBfY29udGV4dDYuc2VudDsKICAgICAgICAgICAgYXJ0aXN0cyA9IGFydGlzdHMuY29uY2F0KG5ld0FydGlzdHMpOwogICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGkgPSAwOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGlmICghKGkgPCBhcnRpc3RzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDQ3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBhcnRpc3RPYmplY3QgPSBhcnRpc3RzW2ldOwogICAgICAgICAgICBqID0gMDsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBpZiAoIShqIDwgdHJhY2tTZXRzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDIzOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIShhcnRpc3RPYmplY3QuaWQgPT0gdHJhY2tTZXRzW2pdLmlkKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGFydGlzdE9iamVjdC50cmFja3MgPSB0cmFja1NldHNbal0udHJhY2tzOwogICAgICAgICAgICB0cmFja1NldHMuc3BsaWNlKGosIDEpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdCgiYnJlYWsiLCAyMyk7CgogICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgaisrOwogICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDE1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICBhcnRpc3RPYmplY3QuaHJlZiA9IGFydGlzdE9iamVjdC5leHRlcm5hbF91cmxzLnNwb3RpZnk7CiAgICAgICAgICAgIGRlbGV0ZSBhcnRpc3RPYmplY3QuZXh0ZXJuYWxfdXJsczsKICAgICAgICAgICAgYXJ0aXN0T2JqZWN0LmZvbGxvd2VycyA9IGFydGlzdE9iamVjdC5mb2xsb3dlcnMudG90YWw7CiAgICAgICAgICAgIF9qID0gMDsKCiAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICBpZiAoIShfaiA8IGFydGlzdE9iamVjdC5nZW5yZXMubGVuZ3RoKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMzg7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChhcnRpc3RPYmplY3QuZ2VucmVzW19qXSBpbiBjb250ZXh0LnN0YXRlLmdlbnJlcykgewogICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMzM7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMzE7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmNvbW1pdCgncHVzaEdlbnJlJywgewogICAgICAgICAgICAgIGlkOiBhcnRpc3RPYmplY3QuZ2VucmVzW19qXSwKICAgICAgICAgICAgICB2YWx1ZTogewogICAgICAgICAgICAgICAgbmFtZTogYXJ0aXN0T2JqZWN0LmdlbnJlc1tfal0sCiAgICAgICAgICAgICAgICBhcnRpc3RzOiBbYXJ0aXN0T2JqZWN0LmlkXSwKICAgICAgICAgICAgICAgIHRyYWNrbnVtOiAwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDMxOgogICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDMzOgogICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM1OwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5jb21taXQoJ2FkZEFydGlzdFRvR2VucmUnLCB7CiAgICAgICAgICAgICAgaWQ6IGFydGlzdE9iamVjdC5nZW5yZXNbX2pdLAogICAgICAgICAgICAgIGFydGlzdDogYXJ0aXN0T2JqZWN0LmlkCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzU6CiAgICAgICAgICAgIF9qKys7CiAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMjc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMzg6CiAgICAgICAgICAgIGRlbGV0ZSBhcnRpc3RPYmplY3QudHlwZTsKICAgICAgICAgICAgZGVsZXRlIGFydGlzdE9iamVjdC51cmk7CiAgICAgICAgICAgIGlmIChhcnRpc3RPYmplY3QuaW1hZ2VzLmxlbmd0aCA+IDApIGFydGlzdE9iamVjdC5pbWFnZSA9IGFydGlzdE9iamVjdC5pbWFnZXNbMF0udXJsOwogICAgICAgICAgICBkZWxldGUgYXJ0aXN0T2JqZWN0LmltYWdlczsKICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSA0NDsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuY29tbWl0KCdwdXNoQXJ0aXN0JywgewogICAgICAgICAgICAgIGlkOiBhcnRpc3RPYmplY3QuaWQsCiAgICAgICAgICAgICAgdmFsdWU6IGFydGlzdE9iamVjdAogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDQ0OgogICAgICAgICAgICBpKys7CiAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMTI7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgNDc6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU2KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBmaW5kQW5kU3RvcmVBcnRpc3RzKF94MTAsIF94MTEpIHsKICAgIHJldHVybiBfcmVmNi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gQXVkaW8gRmVhdHVyZXMgQXJyYXkKCgp2YXIgZGlzdHJpYnV0ZVRyYWNrQXVkaW9GZWF0dXJlcyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNyA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNyhjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIga2V5cywgdmFsdWVzLCBpLCBqLCBfaTsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTckKF9jb250ZXh0NykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ3LnByZXYgPSBfY29udGV4dDcubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBrZXlzID0gT2JqZWN0LmtleXMoY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzKTsKICAgICAgICAgICAgdmFsdWVzID0gewogICAgICAgICAgICAgIGFjb3VzdGljbmVzczogMCwKICAgICAgICAgICAgICBkYW5jZWFiaWxpdHk6IDAsCiAgICAgICAgICAgICAgZW5lcmd5OiAwLAogICAgICAgICAgICAgIGluc3RydW1lbnRhbG5lc3M6IDAsCiAgICAgICAgICAgICAgbGl2ZW5lc3M6IDAsCiAgICAgICAgICAgICAgbG91ZG5lc3M6IDAsCiAgICAgICAgICAgICAgc3BlZWNoaW5lc3M6IDAsCiAgICAgICAgICAgICAgdmFsZW5jZTogMCwKICAgICAgICAgICAgICB0ZW1wbzogMCwKICAgICAgICAgICAgICBiYW5nZXI6IDAKICAgICAgICAgICAgfTsKICAgICAgICAgICAgaSA9IDA7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBpZiAoIShpIDwgcGF5bG9hZC5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGtleXMubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICB2YWx1ZXNba2V5c1tqXV0gKz0gcGF5bG9hZFtpXVtrZXlzW2pdXTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgncGxvdEF1ZGlvRmVhdHVyZVZhbHVlJywgewogICAgICAgICAgICAgICAga2V5OiBrZXlzW2pdLAogICAgICAgICAgICAgICAgdmFsdWU6IHBheWxvYWRbaV1ba2V5c1tqXV0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ2FkZE1vZGUnLCBwYXlsb2FkW2ldLm1vZGUpOwogICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDg7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmNvbW1pdCgnYWRkVHJhY2tQcm9wZXJ0aWVzJywgewogICAgICAgICAgICAgIGlkOiBwYXlsb2FkW2ldLmlkLAogICAgICAgICAgICAgIHByb3BlcnRpZXM6IHsKICAgICAgICAgICAgICAgIGRhbmNlYWJpbGl0eTogcGF5bG9hZFtpXS5kYW5jZWFiaWxpdHksCiAgICAgICAgICAgICAgICBlbmVyZ3k6IHBheWxvYWRbaV0uZW5lcmd5LAogICAgICAgICAgICAgICAga2V5OiBwYXlsb2FkW2ldLmtleSwKICAgICAgICAgICAgICAgIGxvdWRuZXNzOiBwYXlsb2FkW2ldLmxvdWRuZXNzLAogICAgICAgICAgICAgICAgbW9kZTogcGF5bG9hZFtpXS5tb2RlLAogICAgICAgICAgICAgICAgc3BlZWNoaW5lc3M6IHBheWxvYWRbaV0uc3BlZWNoaW5lc3MsCiAgICAgICAgICAgICAgICBhY291c3RpY25lc3M6IHBheWxvYWRbaV0uYWNvdXN0aWNuZXNzLAogICAgICAgICAgICAgICAgaW5zdHJ1bWVudGFsbmVzczogcGF5bG9hZFtpXS5pbnN0cnVtZW50YWxuZXNzLAogICAgICAgICAgICAgICAgbGl2ZW5lc3M6IHBheWxvYWRbaV0ubGl2ZW5lc3MsCiAgICAgICAgICAgICAgICB2YWxlbmNlOiBwYXlsb2FkW2ldLnZhbGVuY2UsCiAgICAgICAgICAgICAgICB0ZW1wbzogcGF5bG9hZFtpXS50ZW1wbywKICAgICAgICAgICAgICAgIGR1cmF0aW9uX21zOiBwYXlsb2FkW2ldLmR1cmF0aW9uX21zLAogICAgICAgICAgICAgICAgdGltZV9zaWduYXR1cmU6IHBheWxvYWRbaV0udGltZV9zaWduYXR1cmUsCiAgICAgICAgICAgICAgICBiYW5nZXI6IHBheWxvYWRbaV0uYmFuZ2VyCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGkrKzsKICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAzOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBfaSA9IDA7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgaWYgKCEoX2kgPCBrZXlzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDE4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDE1OwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5jb21taXQoJ2FkZEF1ZGlvRmVhdHVyZVZhbHVlJywgewogICAgICAgICAgICAgIGtleToga2V5c1tfaV0sCiAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlc1trZXlzW19pXV0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgX2krKzsKICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAxMjsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTcpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGRpc3RyaWJ1dGVUcmFja0F1ZGlvRmVhdHVyZXMoX3gxMiwgX3gxMykgewogICAgcmV0dXJuIF9yZWY3LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGNhbGNUcmFja3NQZXJHZW5yZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmOCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOChjb250ZXh0KSB7CiAgICB2YXIgYXJ0aXN0SWRzLCBpLCBqLCBnZW5yZVR1cGxlcywgdG9wR2VucmVzLCB0b3BHZW5yZUlkcywgYXJ0aXN0VHVwbGVzLCB0b3BBcnRpc3RzLCB0b3BBcnRpc3RJZHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTgkKF9jb250ZXh0OCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ4LnByZXYgPSBfY29udGV4dDgubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBhcnRpc3RJZHMgPSBPYmplY3Qua2V5cyhjb250ZXh0LnN0YXRlLmFydGlzdHMpOwogICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGlmICghKGkgPCBhcnRpc3RJZHMubGVuZ3RoKSkgewogICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGogPSAwOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgaWYgKCEoaiA8IGNvbnRleHQuc3RhdGUuYXJ0aXN0c1thcnRpc3RJZHNbaV1dLmdlbnJlcy5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCEoInRyYWNrcyIgaW4gY29udGV4dC5zdGF0ZS5hcnRpc3RzW2FydGlzdElkc1tpXV0pKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIShjb250ZXh0LnN0YXRlLmFydGlzdHNbYXJ0aXN0SWRzW2ldXS50cmFja3MubGVuZ3RoID4gMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gOTsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuY29tbWl0KCdhZGRHZW5yZVRyYWNrTnVtJywgewogICAgICAgICAgICAgIGlkOiBjb250ZXh0LnN0YXRlLmFydGlzdHNbYXJ0aXN0SWRzW2ldXS5nZW5yZXNbal0sCiAgICAgICAgICAgICAgdmFsdWU6IGNvbnRleHQuc3RhdGUuYXJ0aXN0c1thcnRpc3RJZHNbaV1dLnRyYWNrcy5sZW5ndGgKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBqKys7CiAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gNDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgaSsrOwogICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDI7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGdlbnJlVHVwbGVzID0gT2JqZWN0LmVudHJpZXMoY29udGV4dC5zdGF0ZS5nZW5yZXMpOwogICAgICAgICAgICB0b3BHZW5yZXMgPSBnZW5yZVR1cGxlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgICAgaWYgKCEoInRyYWNrbnVtIiBpbiBhWzFdKSAmJiAhKCJ0cmFja251bSIgaW4gYlsxXSkpIHJldHVybiAwOwogICAgICAgICAgICAgIGlmICghKCJ0cmFja251bSIgaW4gYlsxXSkpIHJldHVybiAwIC0gYVsxXS50cmFja251bTsKICAgICAgICAgICAgICBpZiAoISgidHJhY2tudW0iIGluIGFbMV0pKSByZXR1cm4gYlsxXS50cmFja251bTsKICAgICAgICAgICAgICByZXR1cm4gYlsxXS50cmFja251bSAtIGFbMV0udHJhY2tudW07CiAgICAgICAgICAgIH0pLnNsaWNlKDAsIDUwKTsKICAgICAgICAgICAgdG9wR2VucmVJZHMgPSB0b3BHZW5yZXMubWFwKGZ1bmN0aW9uIChnZW5yZSkgewogICAgICAgICAgICAgIHJldHVybiBnZW5yZVswXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRUb3BTYXZlZEdlbnJlcycsIHRvcEdlbnJlSWRzKTsKICAgICAgICAgICAgYXJ0aXN0VHVwbGVzID0gT2JqZWN0LmVudHJpZXMoY29udGV4dC5zdGF0ZS5hcnRpc3RzKTsKICAgICAgICAgICAgdG9wQXJ0aXN0cyA9IGFydGlzdFR1cGxlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgICAgaWYgKCEoInRyYWNrcyIgaW4gYVsxXSkgJiYgISgidHJhY2tzIiBpbiBiWzFdKSkgcmV0dXJuIDA7CiAgICAgICAgICAgICAgaWYgKCEoInRyYWNrcyIgaW4gYlsxXSkpIHJldHVybiAwIC0gYVsxXS50cmFja3MubGVuZ3RoOwogICAgICAgICAgICAgIGlmICghKCJ0cmFja3MiIGluIGFbMV0pKSByZXR1cm4gYlsxXS50cmFja3MubGVuZ3RoOwogICAgICAgICAgICAgIHJldHVybiBiWzFdLnRyYWNrcy5sZW5ndGggLSBhWzFdLnRyYWNrcy5sZW5ndGg7CiAgICAgICAgICAgIH0pLnNsaWNlKDAsIDUwKTsKICAgICAgICAgICAgdG9wQXJ0aXN0SWRzID0gdG9wQXJ0aXN0cy5tYXAoZnVuY3Rpb24gKGFydGlzdCkgewogICAgICAgICAgICAgIHJldHVybiBhcnRpc3RbMF07CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0VG9wU2F2ZWRBcnRpc3RzJywgdG9wQXJ0aXN0SWRzKTsKICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3NldEFydGlzdHNMb2FkZWQnKTsKICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3NldEdlbnJlc0xvYWRlZCcpOwoKICAgICAgICAgIGNhc2UgMjU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU4KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBjYWxjVHJhY2tzUGVyR2VucmUoX3gxNCkgewogICAgcmV0dXJuIF9yZWY4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGNhbGNFeHRyZW1lcyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmOSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOShjb250ZXh0KSB7CiAgICB2YXIga2V5cywgdHJhY2tUdXBsZXMsIGNoYXJ0cywgdG9wVHJhY2tzLCBfbG9vcCwgaTsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTkkKF9jb250ZXh0OSkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ5LnByZXYgPSBfY29udGV4dDkubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBrZXlzID0gT2JqZWN0LmtleXMoY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzKTsKICAgICAgICAgICAgdHJhY2tUdXBsZXMgPSBPYmplY3QuZW50cmllcyhjb250ZXh0LnN0YXRlLnRyYWNrcyk7CiAgICAgICAgICAgIGNoYXJ0cyA9IFsibWluY2hhcnQiLCAibWF4Y2hhcnQiXTsKCiAgICAgICAgICAgIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSkgewogICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgY2hhcnRzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICBpZiAoY2hhcnRzW2pdID09ICJtaW5jaGFydCIpIHRvcFRyYWNrcyA9IHRyYWNrVHVwbGVzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGFbMV1ba2V5c1tpXV0gLSBiWzFdW2tleXNbaV1dOwogICAgICAgICAgICAgICAgfSkuc2xpY2UoMCwgMjUpO2Vsc2UgdG9wVHJhY2tzID0gdHJhY2tUdXBsZXMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICAgICAgICByZXR1cm4gYlsxXVtrZXlzW2ldXSAtIGFbMV1ba2V5c1tpXV07CiAgICAgICAgICAgICAgICB9KS5zbGljZSgwLCAyNSk7CiAgICAgICAgICAgICAgICB2YXIgdG9wVHJhY2tzSWRzID0gdG9wVHJhY2tzLm1hcChmdW5jdGlvbiAodHJhY2spIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYWNrWzBdOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0QXVkaW9GZWF0dXJlQ2hhcnQnLCB7CiAgICAgICAgICAgICAgICAgIGtleToga2V5c1tpXSwKICAgICAgICAgICAgICAgICAgY2hhcnQ6IFtjaGFydHNbal1dLAogICAgICAgICAgICAgICAgICB2YWx1ZTogdG9wVHJhY2tzSWRzCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIF9sb29wKGkpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0RXh0cmVtZXNMb2FkZWQnKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU5KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBjYWxjRXh0cmVtZXMoX3gxNSkgewogICAgcmV0dXJuIF9yZWY5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIHJldHJpZXZlVG9wUGxheWVkID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYxMCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTAoY29udGV4dCkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMCQoX2NvbnRleHQxMCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMC5wcmV2ID0gX2NvbnRleHQxMC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdyZXRyaWV2ZVRvcFBsYXllZEFydGlzdHMnKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdyZXRyaWV2ZVRvcFBsYXllZFRyYWNrcycpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEwLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUxMCk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gcmV0cmlldmVUb3BQbGF5ZWQoX3gxNikgewogICAgcmV0dXJuIF9yZWYxMC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKCnZhciByZXRyaWV2ZVRvcFBsYXllZEFydGlzdHMgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjExID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMShjb250ZXh0KSB7CiAgICB2YXIgcmFuZ2VzLCBpLCBhcnRpc3RzLCBpZHMsIGosIGFydGlzdE9iamVjdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTEkKF9jb250ZXh0MTEpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTEucHJldiA9IF9jb250ZXh0MTEubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICByYW5nZXMgPSBbJ3Nob3J0X3Rlcm0nLCAnbWVkaXVtX3Rlcm0nLCAnbG9uZ190ZXJtJ107CiAgICAgICAgICAgIGkgPSAwOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgaWYgKCEoaSA8IHJhbmdlcy5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0MTEubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdnZXRUb3BBcnRpc3RzJywgewogICAgICAgICAgICAgIGxpbWl0OiA1MCwKICAgICAgICAgICAgICB0aW1lX3JhbmdlOiByYW5nZXNbaV0sCiAgICAgICAgICAgICAgb2Zmc2V0OiAwCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgYXJ0aXN0cyA9IF9jb250ZXh0MTEuc2VudDsKICAgICAgICAgICAgaWRzID0gW107CgogICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgYXJ0aXN0cy5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgIGlkcy5wdXNoKGFydGlzdHNbal0uaWQpOwoKICAgICAgICAgICAgICBpZiAoIShhcnRpc3RzW2pdLmlkIGluIGNvbnRleHQuc3RhdGUuYXJ0aXN0cykpIHsKICAgICAgICAgICAgICAgIGFydGlzdE9iamVjdCA9IGFydGlzdHNbal07CiAgICAgICAgICAgICAgICBhcnRpc3RPYmplY3QuaHJlZiA9IGFydGlzdE9iamVjdC5leHRlcm5hbF91cmxzLnNwb3RpZnk7CiAgICAgICAgICAgICAgICBkZWxldGUgYXJ0aXN0T2JqZWN0LmV4dGVybmFsX3VybHM7CiAgICAgICAgICAgICAgICBhcnRpc3RPYmplY3QuZm9sbG93ZXJzID0gYXJ0aXN0T2JqZWN0LmZvbGxvd2Vycy50b3RhbDsKICAgICAgICAgICAgICAgIGRlbGV0ZSBhcnRpc3RPYmplY3QudHlwZTsKICAgICAgICAgICAgICAgIGRlbGV0ZSBhcnRpc3RPYmplY3QudXJpOwogICAgICAgICAgICAgICAgYXJ0aXN0T2JqZWN0LnRyYWNrcyA9IFtdOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3B1c2hBcnRpc3QnLCB7CiAgICAgICAgICAgICAgICAgIGlkOiBhcnRpc3RzW2pdLmlkLAogICAgICAgICAgICAgICAgICB2YWx1ZTogYXJ0aXN0T2JqZWN0CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRUb3BQbGF5ZWRBcnRpc3RzJywgewogICAgICAgICAgICAgIGluZGV4OiBpLAogICAgICAgICAgICAgIHZhbHVlOiBpZHMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBpKys7CiAgICAgICAgICAgIF9jb250ZXh0MTEubmV4dCA9IDI7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMS5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMTEpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHJldHJpZXZlVG9wUGxheWVkQXJ0aXN0cyhfeDE3KSB7CiAgICByZXR1cm4gX3JlZjExLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIHJldHJpZXZlVG9wUGxheWVkVHJhY2tzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYxMiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTIoY29udGV4dCkgewogICAgdmFyIHJhbmdlcywgaSwgdHJhY2tzLCBpZHMsIGosIHRyYWNrT2JqZWN0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMiQoX2NvbnRleHQxMikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMi5wcmV2ID0gX2NvbnRleHQxMi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJhbmdlcyA9IFsnc2hvcnRfdGVybScsICdtZWRpdW1fdGVybScsICdsb25nX3Rlcm0nXTsKICAgICAgICAgICAgaSA9IDA7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBpZiAoIShpIDwgcmFuZ2VzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dldFRvcFRyYWNrcycsIHsKICAgICAgICAgICAgICBsaW1pdDogNTAsCiAgICAgICAgICAgICAgdGltZV9yYW5nZTogcmFuZ2VzW2ldLAogICAgICAgICAgICAgIG9mZnNldDogMAogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIHRyYWNrcyA9IF9jb250ZXh0MTIuc2VudDsKICAgICAgICAgICAgaWRzID0gW107CgogICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgdHJhY2tzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgaWRzLnB1c2godHJhY2tzW2pdLmlkKTsKCiAgICAgICAgICAgICAgaWYgKCEodHJhY2tzW2pdLmlkIGluIGNvbnRleHQuc3RhdGUudHJhY2tzKSkgewogICAgICAgICAgICAgICAgdHJhY2tPYmplY3QgPSB0cmFja3Nbal07CiAgICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QuYWxidW0uYWxidW1fdHlwZTsKICAgICAgICAgICAgICAgIGRlbGV0ZSB0cmFja09iamVjdC5hbGJ1bS5hcnRpc3RzOwogICAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmFsYnVtLmF2YWlsYWJsZV9tYXJrZXRzOwogICAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmFsYnVtLmF2YWlsYWJsZV9tYXJrZXRzOwogICAgICAgICAgICAgICAgdHJhY2tPYmplY3QuYWxidW0uaHJlZiA9IHRyYWNrT2JqZWN0LmFsYnVtLmV4dGVybmFsX3VybHMuc3BvdGlmeTsKICAgICAgICAgICAgICAgIGRlbGV0ZSB0cmFja09iamVjdC5hbGJ1bS50eXBlOwogICAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmFsYnVtLnVyaTsKICAgICAgICAgICAgICAgIGRlbGV0ZSB0cmFja09iamVjdC5hdmFpbGFibGVfbWFya2V0czsKICAgICAgICAgICAgICAgIGRlbGV0ZSB0cmFja09iamVjdC5kaXNjX251bWJlcjsKICAgICAgICAgICAgICAgIGRlbGV0ZSB0cmFja09iamVjdC5leHRlcm5hbF9pZHM7CiAgICAgICAgICAgICAgICB0cmFja09iamVjdC5ocmVmID0gdHJhY2tPYmplY3QuZXh0ZXJuYWxfdXJscy5zcG90aWZ5OwogICAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrT2JqZWN0LmV4dGVybmFsX3VybHM7CiAgICAgICAgICAgICAgICBkZWxldGUgdHJhY2tPYmplY3QudHlwZTsKICAgICAgICAgICAgICAgIGRlbGV0ZSB0cmFja09iamVjdC51cmk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgncHVzaFRyYWNrJywgewogICAgICAgICAgICAgICAgICBpZDogdHJhY2tzW2pdLmlkLAogICAgICAgICAgICAgICAgICB2YWx1ZTogdHJhY2tPYmplY3QKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3NldFRvcFBsYXllZFRyYWNrcycsIHsKICAgICAgICAgICAgICBpbmRleDogaSwKICAgICAgICAgICAgICB2YWx1ZTogaWRzCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgaSsrOwogICAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSAyOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTEyKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiByZXRyaWV2ZVRvcFBsYXllZFRyYWNrcyhfeDE4KSB7CiAgICByZXR1cm4gX3JlZjEyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCi8vIEFVRElPIEZFQVRVUkVTIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwovLyB7dGVtcG86IE51bWJlciwgZW5lcmd5OiBOdW1iZXIsIGRhbmNlYWJpbGl0eTogTnVtYmVyfQoKCnZhciBiYW5nZXJDYWxjID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYxMyA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTMoY29udGV4dCwgcGF5bG9hZCkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMyQoX2NvbnRleHQxMykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMy5wcmV2ID0gX2NvbnRleHQxMy5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEzLmFicnVwdCgicmV0dXJuIiwgKHBheWxvYWQudGVtcG8gLSA5NiArIHBheWxvYWQuZW5lcmd5ICogMTAwICsgcGF5bG9hZC5kYW5jZWFiaWxpdHkgKiA1MCkgLyAyMTApOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUxMyk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gYmFuZ2VyQ2FsYyhfeDE5LCBfeDIwKSB7CiAgICByZXR1cm4gX3JlZjEzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCi8vIFNBVkUgTElCUkFSWSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwovLyB7bmFtZTogU3RyaW5nLCBwcml2YWN5OiBCb29sZWFuLCBpbmNsdWRlOiBPYmplY3R9Ci8vIElOQ0xVREUgSVRFTSAgICAgICAgICAgICAgIEtFWSAgICAgICAgICAgICAgICAgICAgICAgIFBVQkxJQyBSRVEKLy8gTnVtZXJpY2FsIERhdGE6IFRydWUuICAgICAgbnVtZXJpY2FsX2RhdGEgICAgICAgICAgICAgVHJ1ZQovLyBNb3N0IFNhdmVkIEFydGlzdHM6ICAgICAgICBtb3N0X3NhdmVkX2FydGlzdHMgICAgICAgICAKLy8gQXVkaW8gRmVhdHVyZXM6IFRydWUuICAgICAgYXVkaW9fZmVhdHVyZXMgICAgICAgICAgICAgVHJ1ZQovLyBUb3AgU2F2ZWQgR2VucmVzOiAgICAgICAgICBtb3N0X3NhdmVkX2dlbnJlcwovLyBOdW1lcmljYWwgRmVhdHVyZXM6ICAgICAgICBudW1lcmljYWxfZmVhdHVyZXMKLy8gUHJvYmFiaWxpdHkgRmVhdHVyZXM6ICAgICAgcHJvYmFiaWxpdHlfZmVhdHVyZXMKLy8gRGF0ZSBBZGRlZCBUaW1lbGluZTogICAgICAgYWRkZWRfdGltZWxpbmUKLy8gSGFwcGluZXNzIERpc3RyaWJ1dGlvbjogICAgaGFwcGluZXNzX2Rpc3RyaWJ1dGlvbgovLyBFbmVyZ3kgRGlzdHJpYnV0aW9uOiAgICAgICBlbmVyZ3lfZGlzdHJpYnV0aW9uCi8vIERhbmNlYWJpbGl0eSBEaXN0cmlidXRpb246IGRhbmNlYWJpbGl0eV9kaXN0cmlidXRpb24KLy8gQmFuZ2VyIERpc3RyaWJ1dGlvbjogICAgICAgYmFuZ2VyX2Rpc3RyaWJ1dGlvbgovLyBIYXBwaW5lc3MgVGltZWxpbmUgICAgICAgICBoYXBwaW5lc3NfdGltZWxpbmUKLy8gVG9wIDMwIFNvbmdzOiAgICAgICAgICAgICAgbW9zdF9wbGF5ZWRfdHJhY2tzICAgICAgICAgIFRydWUKLy8gVG9wIDMwIEFydGlzdHM6ICAgICAgICAgICAgbW9zdF9wbGF5ZWRfYXJ0aXN0cyAgICAgICAgIFRydWUKLy8gRXh0cmVtZXMgVG9wIDEwOiAgICAgICAgICAgZXh0cmVtZXMKCgp2YXIgc2F2ZUxpYnJhcnkgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjE0ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgZGF0YSwgX2tleXMsIF9jaGFydHMsIGksIGo7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNCQoX2NvbnRleHQxNCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNC5wcmV2ID0gX2NvbnRleHQxNC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGlmICghKCFwYXlsb2FkLnByaXZhdGUgJiYgIXBheWxvYWQuaW5jbHVkZS5udW1lcmljYWxfZGF0YSAmJiAhcGF5bG9hZC5pbmNsdWRlLmF1ZGlvX2ZlYXR1cmVzICYmICFwYXlsb2FkLmluY2x1ZGUubW9zdF9wbGF5ZWRfdHJhY2tzICYmICFwYXlsb2FkLmluY2x1ZGUubW9zdF9wbGF5ZWRfYXJ0aXN0cykpIHsKICAgICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSAyOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNC5hYnJ1cHQoInJldHVybiIsIG51bGwpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgZGF0YSA9IHt9OwogICAgICAgICAgICBkYXRhLmluY2x1ZGUgPSBwYXlsb2FkLmluY2x1ZGU7CiAgICAgICAgICAgIGRhdGEubmFtZSA9IHBheWxvYWQubmFtZTsKICAgICAgICAgICAgZGF0YS5wcml2YXRlID0gcGF5bG9hZC5wcml2YXRlOwogICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSA4OwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgnY29udmVydFRyYWNrcycsIHBheWxvYWQuaW5jbHVkZSk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBkYXRhLnRyYWNrcyA9IF9jb250ZXh0MTQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQxNC5uZXh0ID0gMTE7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdjb252ZXJ0QXJ0aXN0cycsIHBheWxvYWQuaW5jbHVkZSk7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgZGF0YS5hcnRpc3RzID0gX2NvbnRleHQxNC5zZW50OwogICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSAxNDsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2NvbnZlcnRHZW5yZXMnLCBwYXlsb2FkLmluY2x1ZGUpOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIGRhdGEuZ2VucmVzID0gX2NvbnRleHQxNC5zZW50OwogICAgICAgICAgICBpZiAocGF5bG9hZC5pbmNsdWRlLm51bWVyaWNhbF9kYXRhKSBkYXRhLm51bWVyaWNhbF9kYXRhID0gewogICAgICAgICAgICAgIHRvdGFsOiBjb250ZXh0LnN0YXRlLnByb2dyZXNzLnRvdGFsLAogICAgICAgICAgICAgIGFydGlzdHM6IE9iamVjdC5rZXlzKGNvbnRleHQuc3RhdGUuYXJ0aXN0cykubGVuZ3RoLAogICAgICAgICAgICAgIGdlbnJlczogT2JqZWN0LmtleXMoY29udGV4dC5zdGF0ZS5nZW5yZXMpLmxlbmd0aAogICAgICAgICAgICB9OwoKICAgICAgICAgICAgaWYgKHBheWxvYWQuaW5jbHVkZS5tb3N0X3NhdmVkX2FydGlzdHMgfHwgcGF5bG9hZC5pbmNsdWRlLm1vc3Rfc2F2ZWRfZ2VucmVzKSB7CiAgICAgICAgICAgICAgZGF0YS50b3BTYXZlZCA9IHt9OwogICAgICAgICAgICAgIGlmIChwYXlsb2FkLmluY2x1ZGUubW9zdF9zYXZlZF9hcnRpc3RzKSBkYXRhLnRvcFNhdmVkLmFydGlzdHMgPSBjb250ZXh0LnN0YXRlLnRvcFNhdmVkLmFydGlzdHMuc2xpY2UoMCwgMjApOwogICAgICAgICAgICAgIGlmIChwYXlsb2FkLmluY2x1ZGUubW9zdF9zYXZlZF9nZW5yZXMpIGRhdGEudG9wU2F2ZWQuZ2VucmVzID0gY29udGV4dC5zdGF0ZS50b3BTYXZlZC5nZW5yZXMuc2xpY2UoMCwgMjApOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAocGF5bG9hZC5pbmNsdWRlLm1vc3RfcGxheWVkX3RyYWNrcyB8fCBwYXlsb2FkLmluY2x1ZGUubW9zdF9wbGF5ZWRfYXJ0aXN0cykgewogICAgICAgICAgICAgIGRhdGEudG9wUGxheWVkID0ge307CiAgICAgICAgICAgICAgaWYgKHBheWxvYWQuaW5jbHVkZS5tb3N0X3BsYXllZF90cmFja3MpIGRhdGEudG9wUGxheWVkLnRyYWNrcyA9IFtdOwogICAgICAgICAgICAgIGRhdGEudG9wUGxheWVkLnRyYWNrc1swXSA9IGNvbnRleHQuc3RhdGUudG9wUGxheWVkLnRyYWNrc1swXS5zbGljZSgwLCAyMCk7CiAgICAgICAgICAgICAgZGF0YS50b3BQbGF5ZWQudHJhY2tzWzFdID0gY29udGV4dC5zdGF0ZS50b3BQbGF5ZWQudHJhY2tzWzFdLnNsaWNlKDAsIDIwKTsKICAgICAgICAgICAgICBkYXRhLnRvcFBsYXllZC50cmFja3NbMl0gPSBjb250ZXh0LnN0YXRlLnRvcFBsYXllZC50cmFja3NbMl0uc2xpY2UoMCwgMjApOwogICAgICAgICAgICAgIGlmIChwYXlsb2FkLmluY2x1ZGUubW9zdF9wbGF5ZWRfYXJ0aXN0cykgZGF0YS50b3BQbGF5ZWQuYXJ0aXN0cyA9IFtdOwogICAgICAgICAgICAgIGRhdGEudG9wUGxheWVkLmFydGlzdHNbMF0gPSBjb250ZXh0LnN0YXRlLnRvcFBsYXllZC5hcnRpc3RzWzBdLnNsaWNlKDAsIDIwKTsKICAgICAgICAgICAgICBkYXRhLnRvcFBsYXllZC5hcnRpc3RzWzFdID0gY29udGV4dC5zdGF0ZS50b3BQbGF5ZWQuYXJ0aXN0c1sxXS5zbGljZSgwLCAyMCk7CiAgICAgICAgICAgICAgZGF0YS50b3BQbGF5ZWQuYXJ0aXN0c1syXSA9IGNvbnRleHQuc3RhdGUudG9wUGxheWVkLmFydGlzdHNbMl0uc2xpY2UoMCwgMjApOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAocGF5bG9hZC5pbmNsdWRlLmF1ZGlvX2ZlYXR1cmVzIHx8IHBheWxvYWQuaW5jbHVkZS5udW1lcmljYWxfZmVhdHVyZXMgfHwgcGF5bG9hZC5pbmNsdWRlLmV4dHJlbWVzIHx8IHBheWxvYWQuaW5jbHVkZS5wcm9iYWJpbGl0eV9mZWF0dXJlcykgewogICAgICAgICAgICAgIGRhdGEuYXVkaW9GZWF0dXJlcyA9IHsKICAgICAgICAgICAgICAgIGFjb3VzdGljbmVzczoge30sCiAgICAgICAgICAgICAgICBkYW5jZWFiaWxpdHk6IHt9LAogICAgICAgICAgICAgICAgZW5lcmd5OiB7fSwKICAgICAgICAgICAgICAgIGluc3RydW1lbnRhbG5lc3M6IHt9LAogICAgICAgICAgICAgICAgbGl2ZW5lc3M6IHt9LAogICAgICAgICAgICAgICAgbG91ZG5lc3M6IHt9LAogICAgICAgICAgICAgICAgc3BlZWNoaW5lc3M6IHt9LAogICAgICAgICAgICAgICAgdGVtcG86IHt9LAogICAgICAgICAgICAgICAgdmFsZW5jZToge30sCiAgICAgICAgICAgICAgICBiYW5nZXI6IHt9CiAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgaWYgKHBheWxvYWQuaW5jbHVkZS5hdWRpb19mZWF0dXJlcykgewogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLnZhbGVuY2UudmFsdWUgPSBjb250ZXh0LnN0YXRlLmF1ZGlvRmVhdHVyZXMudmFsZW5jZS52YWx1ZTsKICAgICAgICAgICAgICAgIGRhdGEuYXVkaW9GZWF0dXJlcy5lbmVyZ3kudmFsdWUgPSBjb250ZXh0LnN0YXRlLmF1ZGlvRmVhdHVyZXMuZW5lcmd5LnZhbHVlOwogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLmRhbmNlYWJpbGl0eS52YWx1ZSA9IGNvbnRleHQuc3RhdGUuYXVkaW9GZWF0dXJlcy5kYW5jZWFiaWxpdHkudmFsdWU7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAocGF5bG9hZC5pbmNsdWRlLm51bWVyaWNhbF9mZWF0dXJlcykgewogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLnRlbXBvLnZhbHVlID0gY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzLnRlbXBvLnZhbHVlOwogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLmxvdWRuZXNzLnZhbHVlID0gY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzLmxvdWRuZXNzLnZhbHVlOwogICAgICAgICAgICAgICAgZGF0YS5tb2RlID0gY29udGV4dC5zdGF0ZS5tb2RlLnZhbHVlOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHBheWxvYWQuaW5jbHVkZS5wcm9iYWJpbGl0eV9mZWF0dXJlcykgewogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLmFjb3VzdGljbmVzcy52YWx1ZSA9IGNvbnRleHQuc3RhdGUuYXVkaW9GZWF0dXJlcy5hY291c3RpY25lc3MudmFsdWU7CiAgICAgICAgICAgICAgICBkYXRhLmF1ZGlvRmVhdHVyZXMuaW5zdHJ1bWVudGFsbmVzcy52YWx1ZSA9IGNvbnRleHQuc3RhdGUuYXVkaW9GZWF0dXJlcy5pbnN0cnVtZW50YWxuZXNzLnZhbHVlOwogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLmxpdmVuZXNzLnZhbHVlID0gY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzLmxpdmVuZXNzLnZhbHVlOwogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLnNwZWVjaGluZXNzLnZhbHVlID0gY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzLnNwZWVjaGluZXNzLnZhbHVlOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHBheWxvYWQuaW5jbHVkZS5leHRyZW1lcykgewogICAgICAgICAgICAgICAgX2tleXMgPSBPYmplY3Qua2V5cyhkYXRhLmF1ZGlvRmVhdHVyZXMpOwogICAgICAgICAgICAgICAgX2NoYXJ0cyA9IFsibWluY2hhcnQiLCAibWF4Y2hhcnQiXTsKCiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgX2tleXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IF9jaGFydHMubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgICAgICBkYXRhLmF1ZGlvRmVhdHVyZXNbX2tleXNbaV1dW19jaGFydHNbal1dID0gY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzW19rZXlzW2ldXVtfY2hhcnRzW2pdXS5zbGljZSgwLCAxMCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmIChwYXlsb2FkLmluY2x1ZGUuaGFwcGluZXNzX2Rpc3RyaWJ1dGlvbikgewogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLnZhbGVuY2UucGxvdCA9IGNvbnRleHQuc3RhdGUuYXVkaW9GZWF0dXJlcy52YWxlbmNlLnBsb3Q7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAocGF5bG9hZC5pbmNsdWRlLmVuZXJneV9kaXN0cmlidXRpb24pIHsKICAgICAgICAgICAgICAgIGRhdGEuYXVkaW9GZWF0dXJlcy5lbmVyZ3kucGxvdCA9IGNvbnRleHQuc3RhdGUuYXVkaW9GZWF0dXJlcy5lbmVyZ3kucGxvdDsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmIChwYXlsb2FkLmluY2x1ZGUuZGFuY2VhYmlsaXR5X2Rpc3RyaWJ1dGlvbikgewogICAgICAgICAgICAgICAgZGF0YS5hdWRpb0ZlYXR1cmVzLmRhbmNlYWJpbGl0eS5wbG90ID0gY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzLmRhbmNlYWJpbGl0eS5wbG90OwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHBheWxvYWQuaW5jbHVkZS5iYW5nZXJfZGlzdHJpYnV0aW9uKSB7CiAgICAgICAgICAgICAgICBkYXRhLmF1ZGlvRmVhdHVyZXMuYmFuZ2VyLnBsb3QgPSBjb250ZXh0LnN0YXRlLmF1ZGlvRmVhdHVyZXMuYmFuZ2VyLnBsb3Q7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAocGF5bG9hZC5pbmNsdWRlLmFkZGVkX3RpbWVsaW5lKSBkYXRhLmRhdGVBZGRlZCA9IGNvbnRleHQuc3RhdGUuZGF0ZUFkZGVkOwoKICAgICAgICAgICAgaWYgKHBheWxvYWQuaW5jbHVkZS5oYXBwaW5lc3NfdGltZWxpbmUpIHsKICAgICAgICAgICAgICBkYXRhLmhhcHBpbmVzc1RpbWVsaW5lID0gY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzLnZhbGVuY2UudGltZWxpbmU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE0LmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUxNCk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gc2F2ZUxpYnJhcnkoX3gyMSwgX3gyMikgewogICAgcmV0dXJuIF9yZWYxNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gSW5jbHVkZSBPYmplY3QKCgp2YXIgY29udmVydFRyYWNrcyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMTUgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE1KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHZhciByZXFUcmFja3MsIGFkZFRyYWNrcywgbm9uUmVwZWF0ZWRUcmFja3MsIGksIGlkcywgX2kyOwoKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTUkKF9jb250ZXh0MTUpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTUucHJldiA9IF9jb250ZXh0MTUubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICByZXFUcmFja3MgPSB7fTsKICAgICAgICAgICAgYWRkVHJhY2tzID0gW107CgogICAgICAgICAgICBpZiAoIXBheWxvYWQubW9zdF9wbGF5ZWRfdHJhY2tzKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQxNS5uZXh0ID0gODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQxNS50MCA9IGFkZFRyYWNrczsKICAgICAgICAgICAgX2NvbnRleHQxNS5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dhdGhlck1vc3RQbGF5ZWRUcmFja3MnKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0MTUudDEgPSBfY29udGV4dDE1LnNlbnQ7CiAgICAgICAgICAgIGFkZFRyYWNrcyA9IF9jb250ZXh0MTUudDAuY29uY2F0LmNhbGwoX2NvbnRleHQxNS50MCwgX2NvbnRleHQxNS50MSk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBpZiAoIXBheWxvYWQuZXh0cmVtZXMpIHsKICAgICAgICAgICAgICBfY29udGV4dDE1Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQxNS50MiA9IGFkZFRyYWNrczsKICAgICAgICAgICAgX2NvbnRleHQxNS5uZXh0ID0gMTI7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdnYXRoZXJFeHRyZW1lcycpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIF9jb250ZXh0MTUudDMgPSBfY29udGV4dDE1LnNlbnQ7CiAgICAgICAgICAgIGFkZFRyYWNrcyA9IF9jb250ZXh0MTUudDIuY29uY2F0LmNhbGwoX2NvbnRleHQxNS50MiwgX2NvbnRleHQxNS50Myk7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgbm9uUmVwZWF0ZWRUcmFja3MgPSB7fTsKCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBhZGRUcmFja3MubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICBpZiAoIShhZGRUcmFja3NbaV0gaW4gbm9uUmVwZWF0ZWRUcmFja3MpKSBub25SZXBlYXRlZFRyYWNrc1thZGRUcmFja3NbaV1dID0gMDtlbHNlIHsKICAgICAgICAgICAgICAgIG5vblJlcGVhdGVkVHJhY2tzW2FkZFRyYWNrc1tpXV0gKz0gMTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlkcyA9IE9iamVjdC5rZXlzKG5vblJlcGVhdGVkVHJhY2tzKTsKICAgICAgICAgICAgX2kyID0gMDsKCiAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICBpZiAoIShfaTIgPCBpZHMubGVuZ3RoKSkgewogICAgICAgICAgICAgIF9jb250ZXh0MTUubmV4dCA9IDI1OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dDE1Lm5leHQgPSAyMTsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goImNvbXByZXNzVHJhY2siLCBjb250ZXh0LnN0YXRlLnRyYWNrc1tpZHNbX2kyXV0pOwoKICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgIHJlcVRyYWNrc1tpZHNbX2kyXV0gPSBfY29udGV4dDE1LnNlbnQ7CgogICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgX2kyKys7CiAgICAgICAgICAgIF9jb250ZXh0MTUubmV4dCA9IDE4OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI1OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNS5hYnJ1cHQoInJldHVybiIsIHJlcVRyYWNrcyk7CgogICAgICAgICAgY2FzZSAyNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUxNSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gY29udmVydFRyYWNrcyhfeDIzLCBfeDI0KSB7CiAgICByZXR1cm4gX3JlZjE1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBOb3RoaW5nCgoKdmFyIGdhdGhlck1vc3RQbGF5ZWRUcmFja3MgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjE2ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNihjb250ZXh0KSB7CiAgICB2YXIgaWRzLCBpLCBqOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNiQoX2NvbnRleHQxNikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNi5wcmV2ID0gX2NvbnRleHQxNi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGlkcyA9IFtdOwoKICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNvbnRleHQuc3RhdGUudG9wUGxheWVkLnRyYWNrcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBjb250ZXh0LnN0YXRlLnRvcFBsYXllZC50cmFja3NbaV0ubGVuZ3RoICYmIGogPCAyMDsgaisrKSB7CiAgICAgICAgICAgICAgICBpZHMucHVzaChjb250ZXh0LnN0YXRlLnRvcFBsYXllZC50cmFja3NbaV1bal0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTYuYWJydXB0KCJyZXR1cm4iLCBpZHMpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE2LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUxNik7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2F0aGVyTW9zdFBsYXllZFRyYWNrcyhfeDI1KSB7CiAgICByZXR1cm4gX3JlZjE2LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBOb3RoaW5nCgoKdmFyIGdhdGhlckV4dHJlbWVzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYxNyA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTcoY29udGV4dCkgewogICAgdmFyIGtleXMsIGNoYXJ0cywgaWRzLCBpLCBqLCBrOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNyQoX2NvbnRleHQxNykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNy5wcmV2ID0gX2NvbnRleHQxNy5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGtleXMgPSBPYmplY3Qua2V5cyhjb250ZXh0LnN0YXRlLmF1ZGlvRmVhdHVyZXMpOwogICAgICAgICAgICBjaGFydHMgPSBbIm1pbmNoYXJ0IiwgIm1heGNoYXJ0Il07CiAgICAgICAgICAgIGlkcyA9IFtdOwoKICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgY2hhcnRzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICBmb3IgKGsgPSAwOyBrIDwgY29udGV4dC5zdGF0ZS5hdWRpb0ZlYXR1cmVzW2tleXNbaV1dW2NoYXJ0c1tqXV0ubGVuZ3RoICYmIGsgPCAxMDsgaysrKSB7CiAgICAgICAgICAgICAgICAgIGlkcy5wdXNoKGNvbnRleHQuc3RhdGUuYXVkaW9GZWF0dXJlc1trZXlzW2ldXVtjaGFydHNbal1dW2tdKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE3LmFicnVwdCgicmV0dXJuIiwgaWRzKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNy5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMTcpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdhdGhlckV4dHJlbWVzKF94MjYpIHsKICAgIHJldHVybiBfcmVmMTcuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIFRyYWNrIG9iamVjdAoKCnZhciBjb21wcmVzc1RyYWNrID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYxOCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTgoY29udGV4dCwgcGF5bG9hZCkgewogICAgdmFyIG5ld0FydGlzdHMsIGk7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE4JChfY29udGV4dDE4KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDE4LnByZXYgPSBfY29udGV4dDE4Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgbmV3QXJ0aXN0cyA9IFtdOwoKICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHBheWxvYWQuYXJ0aXN0cy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGlmIChfdHlwZW9mKHBheWxvYWQuYXJ0aXN0c1tpXSkgPT0gJ29iamVjdCcpIG5ld0FydGlzdHMucHVzaCh7CiAgICAgICAgICAgICAgICBpZDogcGF5bG9hZC5hcnRpc3RzW2ldLAogICAgICAgICAgICAgICAgbmFtZTogcGF5bG9hZC5hcnRpc3RzW2ldLm5hbWUKICAgICAgICAgICAgICB9KTtlbHNlIG5ld0FydGlzdHMucHVzaCh7CiAgICAgICAgICAgICAgICBpZDogcGF5bG9hZC5hcnRpc3RzW2ldLAogICAgICAgICAgICAgICAgbmFtZTogY29udGV4dC5zdGF0ZS5hcnRpc3RzW3BheWxvYWQuYXJ0aXN0c1tpXV0ubmFtZQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxOC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICBpZDogcGF5bG9hZC5pZCwKICAgICAgICAgICAgICBuYW1lOiBwYXlsb2FkLm5hbWUsCiAgICAgICAgICAgICAgaW1hZ2U6IHBheWxvYWQuYWxidW0uaW1hZ2VzWzBdLnVybCwKICAgICAgICAgICAgICBhcnRpc3RzOiBuZXdBcnRpc3RzCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE4LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUxOCk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gY29tcHJlc3NUcmFjayhfeDI3LCBfeDI4KSB7CiAgICByZXR1cm4gX3JlZjE4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBOb25lCgoKdmFyIGNvbnZlcnRBcnRpc3RzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYxOSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTkoY29udGV4dCwgcGF5bG9hZCkgewogICAgdmFyIHJlcUFydGlzdHMsIGFkZEFydGlzdHMsIG5vblJlcGVhdGVkQXJ0aXN0cywgaSwgaWRzLCBfaTM7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxOSQoX2NvbnRleHQxOSkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQxOS5wcmV2ID0gX2NvbnRleHQxOS5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJlcUFydGlzdHMgPSB7fTsKICAgICAgICAgICAgYWRkQXJ0aXN0cyA9IFtdOwoKICAgICAgICAgICAgaWYgKCFwYXlsb2FkLm1vc3RfcGxheWVkX2FydGlzdHMpIHsKICAgICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSA4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dDE5LnQwID0gYWRkQXJ0aXN0czsKICAgICAgICAgICAgX2NvbnRleHQxOS5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dhdGhlck1vc3RQbGF5ZWRBcnRpc3RzJyk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dDE5LnQxID0gX2NvbnRleHQxOS5zZW50OwogICAgICAgICAgICBhZGRBcnRpc3RzID0gX2NvbnRleHQxOS50MC5jb25jYXQuY2FsbChfY29udGV4dDE5LnQwLCBfY29udGV4dDE5LnQxKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGlmICghcGF5bG9hZC5tb3N0X3NhdmVkX2FydGlzdHMpIHsKICAgICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQxOS50MiA9IGFkZEFydGlzdHM7CiAgICAgICAgICAgIF9jb250ZXh0MTkubmV4dCA9IDEyOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgnZ2F0aGVyTW9zdFNhdmVkQXJ0aXN0cycpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIF9jb250ZXh0MTkudDMgPSBfY29udGV4dDE5LnNlbnQ7CiAgICAgICAgICAgIGFkZEFydGlzdHMgPSBfY29udGV4dDE5LnQyLmNvbmNhdC5jYWxsKF9jb250ZXh0MTkudDIsIF9jb250ZXh0MTkudDMpOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIG5vblJlcGVhdGVkQXJ0aXN0cyA9IHt9OwoKICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGFkZEFydGlzdHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICBpZiAoIShhZGRBcnRpc3RzW2ldIGluIG5vblJlcGVhdGVkQXJ0aXN0cykpIG5vblJlcGVhdGVkQXJ0aXN0c1thZGRBcnRpc3RzW2ldXSA9IDE7ZWxzZSB7CiAgICAgICAgICAgICAgICBub25SZXBlYXRlZEFydGlzdHNbYWRkQXJ0aXN0c1tpXV0gKz0gMTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlkcyA9IE9iamVjdC5rZXlzKG5vblJlcGVhdGVkQXJ0aXN0cyk7CiAgICAgICAgICAgIF9pMyA9IDA7CgogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgaWYgKCEoX2kzIDwgaWRzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSAyNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQxOS5uZXh0ID0gMjE7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCJjb21wcmVzc0FydGlzdCIsIGNvbnRleHQuc3RhdGUuYXJ0aXN0c1tpZHNbX2kzXV0pOwoKICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgIHJlcUFydGlzdHNbaWRzW19pM11dID0gX2NvbnRleHQxOS5zZW50OwoKICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgIF9pMysrOwogICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSAxODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAyNToKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTkuYWJydXB0KCJyZXR1cm4iLCByZXFBcnRpc3RzKTsKCiAgICAgICAgICBjYXNlIDI2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTkuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTE5KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBjb252ZXJ0QXJ0aXN0cyhfeDI5LCBfeDMwKSB7CiAgICByZXR1cm4gX3JlZjE5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBOb3RoaW5nCgoKdmFyIGdhdGhlck1vc3RQbGF5ZWRBcnRpc3RzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyMCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjAoY29udGV4dCkgewogICAgdmFyIGlkcywgaSwgajsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjAkKF9jb250ZXh0MjApIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MjAucHJldiA9IF9jb250ZXh0MjAubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpZHMgPSBbXTsKCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb250ZXh0LnN0YXRlLnRvcFBsYXllZC5hcnRpc3RzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGNvbnRleHQuc3RhdGUudG9wUGxheWVkLmFydGlzdHNbaV0ubGVuZ3RoICYmIGogPCAyMDsgaisrKSB7CiAgICAgICAgICAgICAgICBpZHMucHVzaChjb250ZXh0LnN0YXRlLnRvcFBsYXllZC5hcnRpc3RzW2ldW2pdKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIwLmFicnVwdCgicmV0dXJuIiwgaWRzKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMjApOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdhdGhlck1vc3RQbGF5ZWRBcnRpc3RzKF94MzEpIHsKICAgIHJldHVybiBfcmVmMjAuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIE5vdGhpbmcKCgp2YXIgZ2F0aGVyTW9zdFNhdmVkQXJ0aXN0cyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMjEgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIxKGNvbnRleHQpIHsKICAgIHZhciBpZHMsIGk7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIxJChfY29udGV4dDIxKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIxLnByZXYgPSBfY29udGV4dDIxLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWRzID0gW107CgogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY29udGV4dC5zdGF0ZS50b3BTYXZlZC5hcnRpc3RzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgaWRzLnB1c2goY29udGV4dC5zdGF0ZS50b3BTYXZlZC5hcnRpc3RzW2ldKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjEuYWJydXB0KCJyZXR1cm4iLCBpZHMpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIxLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyMSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2F0aGVyTW9zdFNhdmVkQXJ0aXN0cyhfeDMyKSB7CiAgICByZXR1cm4gX3JlZjIxLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBUcmFjayBvYmplY3QKCgp2YXIgY29tcHJlc3NBcnRpc3QgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIyID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyMihjb250ZXh0LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIyJChfY29udGV4dDIyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIyLnByZXYgPSBfY29udGV4dDIyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjIuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgaWQ6IHBheWxvYWQuaWQsCiAgICAgICAgICAgICAgbmFtZTogcGF5bG9hZC5uYW1lLAogICAgICAgICAgICAgIGltYWdlOiBwYXlsb2FkLmltYWdlLAogICAgICAgICAgICAgIGdlbnJlczogcGF5bG9hZC5nZW5yZXMsCiAgICAgICAgICAgICAgdHJhY2tzOiBwYXlsb2FkLnRyYWNrcwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMjIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGNvbXByZXNzQXJ0aXN0KF94MzMsIF94MzQpIHsKICAgIHJldHVybiBfcmVmMjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIEluY2x1ZGUgT2JqZWN0CgoKdmFyIGNvbnZlcnRHZW5yZXMgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyMyhjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgcmVxR2VucmVzLCBpOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMyQoX2NvbnRleHQyMykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMy5wcmV2ID0gX2NvbnRleHQyMy5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJlcUdlbnJlcyA9IHt9OwoKICAgICAgICAgICAgaWYgKHBheWxvYWQubW9zdF9zYXZlZF9nZW5yZXMpIHsKICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY29udGV4dC5zdGF0ZS50b3BTYXZlZC5nZW5yZXMubGVuZ3RoICYmIGkgPCAyMDsgaSsrKSB7CiAgICAgICAgICAgICAgICByZXFHZW5yZXNbY29udGV4dC5zdGF0ZS50b3BTYXZlZC5nZW5yZXNbaV1dID0gY29udGV4dC5zdGF0ZS5nZW5yZXNbY29udGV4dC5zdGF0ZS50b3BTYXZlZC5nZW5yZXNbaV1dOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjMuYWJydXB0KCJyZXR1cm4iLCByZXFHZW5yZXMpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyMyk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gY29udmVydEdlbnJlcyhfeDM1LCBfeDM2KSB7CiAgICByZXR1cm4gX3JlZjIzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCi8vIEFOQUxZU0lTIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwoKLyoNCiAgICBhbGJ1bToge2FsYnVtX3R5cGU6ICJhbGJ1bSIsIGFydGlzdHM6IEFycmF5KDEpLCBhdmFpbGFibGVfbWFya2V0czogQXJyYXkoNzgpLCBleHRlcm5hbF91cmxzOiB74oCmfSwgaHJlZjogImh0dHBzOi8vYXBpLnNwb3RpZnkuY29tL3YxL2FsYnVtcy81TW1Nb21zcGF1MVY1WXBYakhZSlJ5Iiwg4oCmfQ0KICAgIGFydGlzdHM6IFt74oCmfV0NCiAgICBhdmFpbGFibGVfbWFya2V0czogKDc4KSBbIkFEIiwgIkFFIiwgIkFSIiwgIkFUIiwgIkFVIiwgIkJFIiwgIkJHIiwgIkJIIiwgIkJPIiwgIkJSIiwgIkNBIiwgIkNIIiwgIkNMIiwgIkNPIiwgIkNSIiwgIkNZIiwgIkNaIiwgIkRFIiwgIkRLIiwgIkRPIiwgIkRaIiwgIkVDIiwgIkVFIiwgIkVHIiwgIkVTIiwgIkZJIiwgIkZSIiwgIkdCIiwgIkdSIiwgIkdUIiwgIkhLIiwgIkhOIiwgIkhVIiwgIklEIiwgIklFIiwgIklMIiwgIklOIiwgIklTIiwgIklUIiwgIkpPIiwgIktXIiwgIkxCIiwgIkxJIiwgIkxUIiwgIkxVIiwgIkxWIiwgIk1BIiwgIk1DIiwgIk1UIiwgIk1YIiwgIk1ZIiwgIk5JIiwgIk5MIiwgIk5PIiwgIk5aIiwgIk9NIiwgIlBBIiwgIlBFIiwgIlBIIiwgIlBMIiwgIlBTIiwgIlBUIiwgIlBZIiwgIlFBIiwgIlJPIiwgIlNBIiwgIlNFIiwgIlNHIiwgIlNLIiwgIlNWIiwgIlRIIiwgIlROIiwgIlRSIiwgIlRXIiwgIlVTIiwgIlVZIiwgIlZOIiwgIlpBIl0NCiAgICBkaXNjX251bWJlcjogMQ0KICAgIGR1cmF0aW9uX21zOiAyOTY4OTkNCiAgICBleHBsaWNpdDogZmFsc2UNCiAgICBleHRlcm5hbF9pZHM6IHtpc3JjOiAiR0JDRkIxMjAwMTA2In0NCiAgICBleHRlcm5hbF91cmxzOiB7c3BvdGlmeTogImh0dHBzOi8vb3Blbi5zcG90aWZ5LmNvbS90cmFjay83NENzcTVETWFPQlNoTFVoSTZOVTVBIn0NCiAgICBocmVmOiAiaHR0cHM6Ly9hcGkuc3BvdGlmeS5jb20vdjEvdHJhY2tzLzc0Q3NxNURNYU9CU2hMVWhJNk5VNUEiDQogICAgaWQ6ICI3NENzcTVETWFPQlNoTFVoSTZOVTVBIg0KICAgIGlzX2xvY2FsOiBmYWxzZQ0KICAgIG5hbWU6ICJDdXJzZSBNZSBHb29kIg0KICAgIHBvcHVsYXJpdHk6IDUwDQogICAgcHJldmlld191cmw6ICJodHRwczovL3Auc2Nkbi5jby9tcDMtcHJldmlldy9lYThhZjkxZWVmZDI4ZmFmMmFiNWM3M2I2ZGM1YTU5NmJmMGQ1YjliP2NpZD00MjkwM2VlYjJiZjk0M2M0YmQ0OTAzMzcwZjdhOTNmNSINCiAgICB0cmFja19udW1iZXI6IDINCiAgICB0eXBlOiAidHJhY2siDQogICAgdXJpOiAic3BvdGlmeTp0cmFjazo3NA0KDQoNCiAgICBhY291c3RpY25lc3M6IDAuMDEwNQ0KICAgIGFsYnVtOiB7ZXh0ZXJuYWxfdXJsczoge+KApn0sIGhyZWY6ICJodHRwczovL29wZW4uc3BvdGlmeS5jb20vYWxidW0vNU1tTW9tc3BhdTFWNVlwWGpIWUpSeSIsIGlkOiAiNU1tTW9tc3BhdTFWNVlwWGpIWUpSeSIsIGltYWdlczogQXJyYXkoMyksIG5hbWU6ICJUaGUgR2xvcmlvdXMgRGVhZCIsIOKApn0NCiAgICBhcnRpc3RzOiBbIjBiWkNhazJ0Y1JNWTFkekVJdXdGNDIiXQ0KICAgIGJhbmdlcjogMC42ODQ5OTk5OTk5OTk5OTk5DQogICAgZGFuY2VhYmlsaXR5OiAwLjgwOQ0KICAgIGRhdGU6ICIyMDE4LTA5LTIzVDIzOjM0OjMzWiINCiAgICBkdXJhdGlvbl9tczogMjk2OTAwDQogICAgZW5lcmd5OiAwLjgxNA0KICAgIGV4cGxpY2l0OiBmYWxzZQ0KICAgIGhyZWY6ICJodHRwczovL29wZW4uc3BvdGlmeS5jb20vdHJhY2svNzRDc3E1RE1hT0JTaExVaEk2TlU1QSINCiAgICBpZDogIjc0Q3NxNURNYU9CU2hMVWhJNk5VNUEiDQogICAgaW5zdHJ1bWVudGFsbmVzczogMC4wMDAwMjQ4DQogICAgaXNfbG9jYWw6IGZhbHNlDQogICAga2V5OiA2DQogICAgbGl2ZW5lc3M6IDAuMDk5DQogICAgbG91ZG5lc3M6IC02LjgyOQ0KICAgIG1vZGU6IDANCiAgICBuYW1lOiAiQ3Vyc2UgTWUgR29vZCINCiAgICBwb3B1bGFyaXR5OiA1MA0KICAgIHByZXZpZXdfdXJsOiAiaHR0cHM6Ly9wLnNjZG4uY28vbXAzLXByZXZpZXcvZWE4YWY5MWVlZmQyOGZhZjJhYjVjNzNiNmRjNWE1OTZiZjBkNWI5Yj9jaWQ9NDI5MDNlZWIyYmY5NDNjNGJkNDkwMzM3MGY3YTkzZjUiDQogICAgc3BlZWNoaW5lc3M6IDAuMDMzOA0KICAgIHRlbXBvOiAxMTgNCiAgICB0aW1lX3NpZ25hdHVyZTogNA0KICAgIHRyYWNrX251bWJlcjogMg0KICAgIHZhbGVuY2U6IDAuODA0DQoqLwoKCnZhciBzb25nQW5hbHlzaXMgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjI0ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyNChjb250ZXh0LCBpZCkgewogICAgdmFyIHRyYWNrRGF0YTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjQkKF9jb250ZXh0MjQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MjQucHJldiA9IF9jb250ZXh0MjQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDI0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgnZ2V0VHJhY2snLCBpZCk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICB0cmFja0RhdGEgPSBfY29udGV4dDI0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0MjQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdzb25nQW5hbHlzaXNGZWF0dXJlcycsIHsKICAgICAgICAgICAgICB0cmFja0RhdGE6IHRyYWNrRGF0YSwKICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICB0cmFja0RhdGEgPSBfY29udGV4dDI0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0MjQubmV4dCA9IDg7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdjbGVhbkF1ZGlvQW5hbHlzaXMnLCB7CiAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgdHJhY2tEYXRhLmF1ZGlvQW5hbHlzaXMgPSBfY29udGV4dDI0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI0LmFicnVwdCgicmV0dXJuIiwgdHJhY2tEYXRhKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTI0KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBzb25nQW5hbHlzaXMoX3gzNywgX3gzOCkgewogICAgcmV0dXJuIF9yZWYyNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8ge2lkOiBTdHJpbmd9CgoKdmFyIHNvbmdBbmFseXNpc0ZlYXR1cmVzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyNSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjUoY29udGV4dCwgcGF5bG9hZCkgewogICAgdmFyIHNvbmcsIGF1ZGlvRmVhdHVyZXM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTI1JChfY29udGV4dDI1KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDI1LnByZXYgPSBfY29udGV4dDI1Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgc29uZyA9IHBheWxvYWQudHJhY2tEYXRhOwogICAgICAgICAgICBfY29udGV4dDI1Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgnZ2V0QXVkaW9GZWF0dXJlc0ZvclRyYWNrJywgcGF5bG9hZC5pZCk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBhdWRpb0ZlYXR1cmVzID0gX2NvbnRleHQyNS5zZW50OwogICAgICAgICAgICBzb25nLmFjb3VzdGljbmVzcyA9IGF1ZGlvRmVhdHVyZXMuYWNvdXN0aWNuZXNzOwogICAgICAgICAgICBzb25nLmRhbmNlYWJpbGl0eSA9IGF1ZGlvRmVhdHVyZXMuZGFuY2VhYmlsaXR5OwogICAgICAgICAgICBzb25nLmVuZXJneSA9IGF1ZGlvRmVhdHVyZXMuZW5lcmd5OwogICAgICAgICAgICBzb25nLmluc3RydW1lbnRhbG5lc3MgPSBhdWRpb0ZlYXR1cmVzLmluc3RydW1lbnRhbG5lc3M7CiAgICAgICAgICAgIHNvbmcua2V5ID0gYXVkaW9GZWF0dXJlcy5rZXk7CiAgICAgICAgICAgIHNvbmcubGl2ZW5lc3MgPSBhdWRpb0ZlYXR1cmVzLmxpdmVuZXNzOwogICAgICAgICAgICBzb25nLmxvdWRuZXNzID0gYXVkaW9GZWF0dXJlcy5sb3VkbmVzczsKICAgICAgICAgICAgc29uZy5tb2RlID0gYXVkaW9GZWF0dXJlcy5tb2RlOwogICAgICAgICAgICBzb25nLnNwZWVjaGluZXNzID0gYXVkaW9GZWF0dXJlcy5zcGVlY2hpbmVzczsKICAgICAgICAgICAgc29uZy50ZW1wbyA9IGF1ZGlvRmVhdHVyZXMudGVtcG87CiAgICAgICAgICAgIHNvbmcudmFsZW5jZSA9IGF1ZGlvRmVhdHVyZXMudmFsZW5jZTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjUuYWJydXB0KCJyZXR1cm4iLCBzb25nKTsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjUuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTI1KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBzb25nQW5hbHlzaXNGZWF0dXJlcyhfeDM5LCBfeDQwKSB7CiAgICByZXR1cm4gX3JlZjI1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGNsZWFuQXVkaW9BbmFseXNpcyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMjYgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI2KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHZhciBhdWRpb0FuYWx5c2lzU2VnbWVudHMsIGF1ZGlvQW5hbHlzaXMsIG5ld1NlZ21lbnRzLCB3aWR0aCwgaSwgaXRlbUluZGV4LCBzdW0sIGosIGF2ZXJhZ2VQaXRjaCwgY29sb3IsIGxvdWRuZXNzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyNiQoX2NvbnRleHQyNikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyNi5wcmV2ID0gX2NvbnRleHQyNi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGF1ZGlvQW5hbHlzaXNTZWdtZW50cyA9IDgwOwogICAgICAgICAgICBfY29udGV4dDI2Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgnZ2V0QXVkaW9BbmFseXNpc0ZvclRyYWNrJywgcGF5bG9hZC5pZCk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBhdWRpb0FuYWx5c2lzID0gX2NvbnRleHQyNi5zZW50OwogICAgICAgICAgICBuZXdTZWdtZW50cyA9IFtdOwogICAgICAgICAgICBpZiAoYXVkaW9BbmFseXNpcy5zZWdtZW50cy5sZW5ndGggPCBhdWRpb0FuYWx5c2lzU2VnbWVudHMpIGF1ZGlvQW5hbHlzaXNTZWdtZW50cyA9IGF1ZGlvQW5hbHlzaXMuc2VnbWVudHMubGVuZ3RoOwogICAgICAgICAgICB3aWR0aCA9IE1hdGgucm91bmQoYXVkaW9BbmFseXNpcy5zZWdtZW50cy5sZW5ndGggLyBhdWRpb0FuYWx5c2lzU2VnbWVudHMpOwogICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGlmICghKGkgPCBhdWRpb0FuYWx5c2lzU2VnbWVudHMpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQyNi5uZXh0ID0gMjI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGl0ZW1JbmRleCA9IE1hdGgucm91bmQod2lkdGggKiBpKTsKCiAgICAgICAgICAgIGlmIChpdGVtSW5kZXggPiBhdWRpb0FuYWx5c2lzLnNlZ21lbnRzLmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgICBpdGVtSW5kZXggPSBhdWRpb0FuYWx5c2lzLnNlZ21lbnRzLmxlbmd0aCAtIDI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHN1bSA9IDA7CgogICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgYXVkaW9BbmFseXNpcy5zZWdtZW50c1tpdGVtSW5kZXhdLnBpdGNoZXMubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICBzdW0gKz0gYXVkaW9BbmFseXNpcy5zZWdtZW50c1tpdGVtSW5kZXhdLnBpdGNoZXNbal07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGF2ZXJhZ2VQaXRjaCA9IHN1bSAvIGF1ZGlvQW5hbHlzaXMuc2VnbWVudHNbaXRlbUluZGV4XS5waXRjaGVzLmxlbmd0aDsKICAgICAgICAgICAgX2NvbnRleHQyNi5uZXh0ID0gMTY7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCdIU1Z0b1JHQicsIHsKICAgICAgICAgICAgICBodWU6ICgoMSAtIGF2ZXJhZ2VQaXRjaCkgKiAyMjkgKyAtNTApIC8gMzYwLAogICAgICAgICAgICAgIHNhdHVyYXRpb246IDAuNTEsCiAgICAgICAgICAgICAgdmFsdWU6IDAuODkKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgY29sb3IgPSBfY29udGV4dDI2LnNlbnQ7CiAgICAgICAgICAgIGxvdWRuZXNzID0gTWF0aC5yb3VuZCgoYXVkaW9BbmFseXNpcy5zZWdtZW50c1tpdGVtSW5kZXhdLmxvdWRuZXNzX21heCAvIDYwICsgMSkgKiAxMDApIC8gMTAwOwogICAgICAgICAgICBuZXdTZWdtZW50cy5wdXNoKHsKICAgICAgICAgICAgICBzdGFydDogTWF0aC5yb3VuZChhdWRpb0FuYWx5c2lzLnNlZ21lbnRzW2l0ZW1JbmRleF0uc3RhcnQpLAogICAgICAgICAgICAgIGxvdWRuZXNzX21heDogbG91ZG5lc3MsCiAgICAgICAgICAgICAgcmVkOiBjb2xvci5yLAogICAgICAgICAgICAgIGdyZWVuOiBjb2xvci5nLAogICAgICAgICAgICAgIGJsdWU6IGNvbG9yLmIKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgaSsrOwogICAgICAgICAgICBfY29udGV4dDI2Lm5leHQgPSA4OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICBhdWRpb0FuYWx5c2lzLnNlZ21lbnRzID0gbnVsbDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjYuYWJydXB0KCJyZXR1cm4iLCBuZXdTZWdtZW50cyk7CgogICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI2LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyNik7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gY2xlYW5BdWRpb0FuYWx5c2lzKF94NDEsIF94NDIpIHsKICAgIHJldHVybiBfcmVmMjYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgp2YXIgZ2V0UGVyY2VudGlsZXMgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjI3ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyNyhjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgaWRzLCBrZXlzLCByZXNwb25zZSwgaSwgbG93ZXIsIGo7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTI3JChfY29udGV4dDI3KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDI3LnByZXYgPSBfY29udGV4dDI3Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWRzID0gT2JqZWN0LmtleXMoY29udGV4dC5zdGF0ZS50cmFja3MpOwogICAgICAgICAgICBrZXlzID0gT2JqZWN0LmtleXMocGF5bG9hZCk7CiAgICAgICAgICAgIHJlc3BvbnNlID0gewogICAgICAgICAgICAgIHZhbGVuY2U6IDAsCiAgICAgICAgICAgICAgZGFuY2VhYmlsaXR5OiAwLAogICAgICAgICAgICAgIGVuZXJneTogMCwKICAgICAgICAgICAgICBiYW5nZXI6IDAKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgbG93ZXIgPSAwOwoKICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgaWRzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICBpZiAoY29udGV4dC5zdGF0ZS50cmFja3NbaWRzW2pdXVtrZXlzW2ldXSA8PSBwYXlsb2FkW2tleXNbaV1dKSB7CiAgICAgICAgICAgICAgICAgIGxvd2VyICs9IDE7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXNwb25zZVtrZXlzW2ldXSA9IGxvd2VyIC8gY29udGV4dC5zdGF0ZS5wcm9ncmVzcy50b3RhbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjcuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mjcuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTI3KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBnZXRQZXJjZW50aWxlcyhfeDQzLCBfeDQ0KSB7CiAgICByZXR1cm4gX3JlZjI3LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvL3toLCBzLCB2fQoKCnZhciBIU1Z0b1JHQiA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMjggPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI4KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHZhciByLCBnLCBiLCBpLCBmLCBwLCBxLCB0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyOCQoX2NvbnRleHQyOCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyOC5wcmV2ID0gX2NvbnRleHQyOC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGkgPSBNYXRoLmZsb29yKHBheWxvYWQuaHVlICogNik7CiAgICAgICAgICAgIGYgPSBwYXlsb2FkLmh1ZSAqIDYgLSBpOwogICAgICAgICAgICBwID0gcGF5bG9hZC52YWx1ZSAqICgxIC0gcGF5bG9hZC5zYXR1cmF0aW9uKTsKICAgICAgICAgICAgcSA9IHBheWxvYWQudmFsdWUgKiAoMSAtIGYgKiBwYXlsb2FkLnNhdHVyYXRpb24pOwogICAgICAgICAgICB0ID0gcGF5bG9hZC52YWx1ZSAqICgxIC0gKDEgLSBmKSAqIHBheWxvYWQuc2F0dXJhdGlvbik7CiAgICAgICAgICAgIF9jb250ZXh0MjgudDAgPSBpICUgNjsKICAgICAgICAgICAgX2NvbnRleHQyOC5uZXh0ID0gX2NvbnRleHQyOC50MCA9PT0gMCA/IDggOiBfY29udGV4dDI4LnQwID09PSAxID8gMTAgOiBfY29udGV4dDI4LnQwID09PSAyID8gMTIgOiBfY29udGV4dDI4LnQwID09PSAzID8gMTQgOiBfY29udGV4dDI4LnQwID09PSA0ID8gMTYgOiBfY29udGV4dDI4LnQwID09PSA1ID8gMTggOiAyMDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICByID0gcGF5bG9hZC52YWx1ZSwgZyA9IHQsIGIgPSBwOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyOC5hYnJ1cHQoImJyZWFrIiwgMjApOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIHIgPSBxLCBnID0gcGF5bG9hZC52YWx1ZSwgYiA9IHA7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI4LmFicnVwdCgiYnJlYWsiLCAyMCk7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgciA9IHAsIGcgPSBwYXlsb2FkLnZhbHVlLCBiID0gdDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjguYWJydXB0KCJicmVhayIsIDIwKTsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICByID0gcCwgZyA9IHEsIGIgPSBwYXlsb2FkLnZhbHVlOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyOC5hYnJ1cHQoImJyZWFrIiwgMjApOwoKICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgIHIgPSB0LCBnID0gcCwgYiA9IHBheWxvYWQudmFsdWU7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI4LmFicnVwdCgiYnJlYWsiLCAyMCk7CgogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgciA9IHBheWxvYWQudmFsdWUsIGcgPSBwLCBiID0gcTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjguYWJydXB0KCJicmVhayIsIDIwKTsKCiAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyOC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICByOiBNYXRoLnJvdW5kKHIgKiAyNTUpLAogICAgICAgICAgICAgIGc6IE1hdGgucm91bmQoZyAqIDI1NSksCiAgICAgICAgICAgICAgYjogTWF0aC5yb3VuZChiICogMjU1KQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mjguc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTI4KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBIU1Z0b1JHQihfeDQ1LCBfeDQ2KSB7CiAgICByZXR1cm4gX3JlZjI4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGFydGlzdEFuYWx5c2lzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyOSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjkoY29udGV4dCwgcGF5bG9hZCkgewogICAgdmFyIGFydGlzdCwgYXJ0aXN0T2JqZWN0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyOSQoX2NvbnRleHQyOSkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyOS5wcmV2ID0gX2NvbnRleHQyOS5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0MjkubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCJnZXRBcnRpc3QiLCBwYXlsb2FkKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGFydGlzdCA9IF9jb250ZXh0Mjkuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQyOS5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goInByb2Nlc3NBcnRpc3QiLCBhcnRpc3QpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgYXJ0aXN0T2JqZWN0ID0gX2NvbnRleHQyOS5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyOS5hYnJ1cHQoInJldHVybiIsIGFydGlzdE9iamVjdCk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mjkuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTI5KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBhcnRpc3RBbmFseXNpcyhfeDQ3LCBfeDQ4KSB7CiAgICByZXR1cm4gX3JlZjI5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIHByb2Nlc3NBcnRpc3QgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMwID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzMChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMwJChfY29udGV4dDMwKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMwLnByZXYgPSBfY29udGV4dDMwLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcGF5bG9hZC5ocmVmID0gcGF5bG9hZC5leHRlcm5hbF91cmxzLnNwb3RpZnk7CiAgICAgICAgICAgIGRlbGV0ZSBwYXlsb2FkLmV4dGVybmFsX3VybHM7CiAgICAgICAgICAgIHBheWxvYWQuZm9sbG93ZXJzID0gcGF5bG9hZC5mb2xsb3dlcnMudG90YWw7CiAgICAgICAgICAgIHBheWxvYWQuaW1hZ2UgPSBwYXlsb2FkLmltYWdlc1swXS51cmw7CiAgICAgICAgICAgIGRlbGV0ZSBwYXlsb2FkLmltYWdlczsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MzAuYWJydXB0KCJyZXR1cm4iLCBwYXlsb2FkKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzMC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMzApOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHByb2Nlc3NBcnRpc3QoX3g0OSwgX3g1MCkgewogICAgcmV0dXJuIF9yZWYzMC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKCnZhciBhcnRpc3RUcmFja3MgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMxID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzMShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgaWRzLCB0cmFja3MsIGk7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMxJChfY29udGV4dDMxKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMxLnByZXYgPSBfY29udGV4dDMxLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKHBheWxvYWQuaWQgaW4gY29udGV4dC5zdGF0ZS5hcnRpc3RzKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQzMS5uZXh0ID0gMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MzEuYWJydXB0KCJyZXR1cm4iLCBbXSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBpZHMgPSBjb250ZXh0LnN0YXRlLmFydGlzdHNbcGF5bG9hZC5pZF0udHJhY2tzOwogICAgICAgICAgICB0cmFja3MgPSBbXTsKCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBpZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICB0cmFja3MucHVzaChjb250ZXh0LnN0YXRlLnRyYWNrc1tpZHNbaV1dKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MzEuYWJydXB0KCJyZXR1cm4iLCB0cmFja3MpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMxLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzMSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gYXJ0aXN0VHJhY2tzKF94NTEsIF94NTIpIHsKICAgIHJldHVybiBfcmVmMzEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgp2YXIgYXJ0aXN0VGltZWxpbmUgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMyID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzMihjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgYXJ0aXN0T2JqZWN0LCB0aW1lbGluZSwgdHJhY2tzLCBub3csIG5vd1RpbWUsIE1PTlRILCBhcnRpc3RTYXZlZCwgaSwgZGF0ZSwgZGF0ZVRpbWUsIGRpZmYsIGRpZmZNb250aCwgb2xkZXN0LCBuZXdlc3Q7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMyJChfY29udGV4dDMyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMyLnByZXYgPSBfY29udGV4dDMyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKHBheWxvYWQuaWQgaW4gY29udGV4dC5zdGF0ZS5hcnRpc3RzKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQzMi5uZXh0ID0gMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MzIuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgdGltZWxpbmU6IFtdLAogICAgICAgICAgICAgIG9sZGVzdDogW10sCiAgICAgICAgICAgICAgbmV3ZXN0OiBbXQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGFydGlzdE9iamVjdCA9IHBheWxvYWQ7CiAgICAgICAgICAgIHRpbWVsaW5lID0gW107CiAgICAgICAgICAgIHRyYWNrcyA9IFtdOwogICAgICAgICAgICBub3cgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICBub3dUaW1lID0gbm93LmdldFRpbWUoKTsKICAgICAgICAgICAgTU9OVEggPSAyNjI2NTYwMDAwOwogICAgICAgICAgICBhcnRpc3RTYXZlZCA9IGNvbnRleHQuc3RhdGUuYXJ0aXN0c1thcnRpc3RPYmplY3QuaWRdOwoKICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGFydGlzdFNhdmVkLnRyYWNrcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGRhdGUgPSBuZXcgRGF0ZShjb250ZXh0LnN0YXRlLnRyYWNrc1thcnRpc3RTYXZlZC50cmFja3NbaV1dLmRhdGUpOwogICAgICAgICAgICAgIGRhdGVUaW1lID0gZGF0ZS5nZXRUaW1lKCk7CiAgICAgICAgICAgICAgZGlmZiA9IG5vd1RpbWUgLSBkYXRlVGltZTsKICAgICAgICAgICAgICBkaWZmTW9udGggPSBNYXRoLmZsb29yKGRpZmYgLyBNT05USCk7CiAgICAgICAgICAgICAgdHJhY2tzLnB1c2goewogICAgICAgICAgICAgICAgaWQ6IGFydGlzdFNhdmVkLnRyYWNrc1tpXSwKICAgICAgICAgICAgICAgIHRpbWU6IGRhdGVUaW1lLAogICAgICAgICAgICAgICAgbW9udGg6IGRpZmZNb250aAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBpZiAoZGlmZk1vbnRoID49IHRpbWVsaW5lLmxlbmd0aCkgewogICAgICAgICAgICAgICAgd2hpbGUgKGRpZmZNb250aCA+PSB0aW1lbGluZS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgdGltZWxpbmUucHVzaCgwKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRpbWVsaW5lW2RpZmZNb250aF0gKz0gMTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdHJhY2tzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgICByZXR1cm4gYS50aW1lID4gYi50aW1lID8gMSA6IC0xOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgb2xkZXN0ID0gdHJhY2tzLnNsaWNlKDAsIDMpOwogICAgICAgICAgICBuZXdlc3QgPSB0cmFja3Muc2xpY2UodHJhY2tzLmxlbmd0aCAtIDMsIHRyYWNrcy5sZW5ndGgpOwoKICAgICAgICAgICAgd2hpbGUgKHRpbWVsaW5lLmxlbmd0aCA8IGNvbnRleHQuc3RhdGUuZGF0ZUFkZGVkLmxlbmd0aCkgewogICAgICAgICAgICAgIHRpbWVsaW5lLnB1c2goMCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMyLmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgIHRpbWVsaW5lOiB0aW1lbGluZSwKICAgICAgICAgICAgICBvbGRlc3Q6IG9sZGVzdCwKICAgICAgICAgICAgICBuZXdlc3Q6IG5ld2VzdAogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MzIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMyKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBhcnRpc3RUaW1lbGluZShfeDUzLCBfeDU0KSB7CiAgICByZXR1cm4gX3JlZjMyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGFydGlzdFRvcFRyYWNrcyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMzMgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMzKGNvbnRleHQsIGlkKSB7CiAgICB2YXIgdHJhY2tzLCBpZHMsIGksIGF1ZGlvRmVhdHVyZXMsIF9pNDsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMzJChfY29udGV4dDMzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMzLnByZXYgPSBfY29udGV4dDMzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQzMy5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dldEFydGlzdFRvcFRyYWNrcycsIGlkKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHRyYWNrcyA9IF9jb250ZXh0MzMuc2VudDsKICAgICAgICAgICAgaWRzID0gW107CgogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdHJhY2tzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrc1tpXS5hbGJ1bS5hbGJ1bV90eXBlOwogICAgICAgICAgICAgIGRlbGV0ZSB0cmFja3NbaV0uYWxidW0uYXJ0aXN0czsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tzW2ldLmFsYnVtLmF2YWlsYWJsZV9tYXJrZXRzOwogICAgICAgICAgICAgIGRlbGV0ZSB0cmFja3NbaV0uYWxidW0uYXZhaWxhYmxlX21hcmtldHM7CiAgICAgICAgICAgICAgdHJhY2tzW2ldLmFsYnVtLmhyZWYgPSB0cmFja3NbaV0uYWxidW0uZXh0ZXJuYWxfdXJscy5zcG90aWZ5OwogICAgICAgICAgICAgIGRlbGV0ZSB0cmFja3NbaV0uYWxidW0udHlwZTsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tzW2ldLmFsYnVtLnVyaTsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tzW2ldLmF2YWlsYWJsZV9tYXJrZXRzOwogICAgICAgICAgICAgIGRlbGV0ZSB0cmFja3NbaV0uZGlzY19udW1iZXI7CiAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrc1tpXS5leHRlcm5hbF9pZHM7CiAgICAgICAgICAgICAgdHJhY2tzW2ldLmhyZWYgPSB0cmFja3NbaV0uZXh0ZXJuYWxfdXJscy5zcG90aWZ5OwogICAgICAgICAgICAgIGRlbGV0ZSB0cmFja3NbaV0uZXh0ZXJuYWxfdXJsczsKICAgICAgICAgICAgICBkZWxldGUgdHJhY2tzW2ldLnR5cGU7CiAgICAgICAgICAgICAgZGVsZXRlIHRyYWNrc1tpXS51cmk7CiAgICAgICAgICAgICAgaWYgKHRyYWNrc1tpXS5hbGJ1bS5pbWFnZXMubGVuZ3RoID4gMSkgdHJhY2tzW2ldLmltYWdlID0gdHJhY2tzW2ldLmFsYnVtLmltYWdlc1swXS51cmw7CiAgICAgICAgICAgICAgaWRzLnB1c2godHJhY2tzW2ldLmlkKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQzMy5uZXh0ID0gNzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goJ2dldEF1ZGlvRmVhdHVyZXNGb3JUcmFja3MnLCBpZHMpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgYXVkaW9GZWF0dXJlcyA9IF9jb250ZXh0MzMuc2VudDsKCiAgICAgICAgICAgIGZvciAoX2k0ID0gMDsgX2k0IDwgdHJhY2tzLmxlbmd0aDsgX2k0KyspIHsKICAgICAgICAgICAgICB0cmFja3NbX2k0XS52YWxlbmNlID0gYXVkaW9GZWF0dXJlc1tfaTRdLnZhbGVuY2U7CiAgICAgICAgICAgICAgdHJhY2tzW19pNF0uZW5lcmd5ID0gYXVkaW9GZWF0dXJlc1tfaTRdLmVuZXJneTsKICAgICAgICAgICAgICB0cmFja3NbX2k0XS5kYW5jZWFiaWxpdHkgPSBhdWRpb0ZlYXR1cmVzW19pNF0uZGFuY2VhYmlsaXR5OwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzMy5hYnJ1cHQoInJldHVybiIsIHRyYWNrcyk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzMyk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gYXJ0aXN0VG9wVHJhY2tzKF94NTUsIF94NTYpIHsKICAgIHJldHVybiBfcmVmMzMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8gU09DSUFMIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8gQVBJIENBTExTIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCi8vIHtsaW1pdDogTnVtYmVyIDEtNTAsIHRpbWVfcmFuZ2U6ICJsb25nX3Rlcm0iIFNldmVyYWwgeWVhcnMsICJtZWRpdW1fdGVybSIgNiBNb250aHMsICJzaG9ydF90ZXJtIiA0IFdlZWtzLCBvZmZzZXQ6IEluZGV4IG9mIGZpcnN0IGVudHJ5IHRvIHJldHVybn0KCgp2YXIgZ2V0VG9wQXJ0aXN0cyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMzQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTM0KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMzQkKF9jb250ZXh0MzQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MzQucHJldiA9IF9jb250ZXh0MzQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDM0LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDM0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5zdGF0ZS5zcG90aWZ5QXBpLmdldE15VG9wQXJ0aXN0cyh7CiAgICAgICAgICAgICAgbGltaXQ6IHBheWxvYWQubGltaXQsCiAgICAgICAgICAgICAgdGltZV9yYW5nZTogcGF5bG9hZC50aW1lX3JhbmdlCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDM0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UuaXRlbXMpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQzNC5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQzNC50MCA9IF9jb250ZXh0MzRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzNCwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFRvcEFydGlzdHMoX3g1NywgX3g1OCkgewogICAgcmV0dXJuIF9yZWYzNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8ge2xpbWl0OiBOdW1iZXIgMS01MCwgdGltZV9yYW5nZTogImxvbmdfdGVybSIgU2V2ZXJhbCB5ZWFycywgIm1lZGl1bV90ZXJtIiA2IE1vbnRocywgInNob3J0X3Rlcm0iIDQgV2Vla3MsIG9mZnNldDogSW5kZXggb2YgZmlyc3QgZW50cnkgdG8gcmV0dXJufQoKCnZhciBnZXRUb3BUcmFja3MgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjM1ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzNShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTM1JChfY29udGV4dDM1KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDM1LnByZXYgPSBfY29udGV4dDM1Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQzNS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQzNS5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRNeVRvcFRyYWNrcyh7CiAgICAgICAgICAgICAgbGltaXQ6IHBheWxvYWQubGltaXQsCiAgICAgICAgICAgICAgdGltZV9yYW5nZTogcGF5bG9hZC50aW1lX3JhbmdlCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDM1LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM1LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UuaXRlbXMpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQzNS5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQzNS50MCA9IF9jb250ZXh0MzVbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM1LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzNSwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFRvcFRyYWNrcyhfeDU5LCBfeDYwKSB7CiAgICByZXR1cm4gX3JlZjM1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyB7bGltaXQ6IE51bWJlciAxLTUwLCBhZnRlcjogVW5peCB0aW1lc3RhbXAgTWlsbGlzZWNvbmRzLCBiZWZvcmU6IFVuaXggdGltZXN0YW1wIE1pbGxpc2Vjb25kcwoKCnZhciBnZXRSZWNlbnRseVBsYXllZCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMzYgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTM2KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMzYkKF9jb250ZXh0MzYpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MzYucHJldiA9IF9jb250ZXh0MzYubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDM2LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDM2Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5zdGF0ZS5zcG90aWZ5QXBpLmdldE15UmVjZW50bHlQbGF5ZWRUcmFja3MoewogICAgICAgICAgICAgIGxpbWl0OiBwYXlsb2FkLmxpbWl0CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDM2LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM2LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQzNi5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQzNi50MCA9IF9jb250ZXh0MzZbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM2LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM2LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzNiwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFJlY2VudGx5UGxheWVkKF94NjEsIF94NjIpIHsKICAgIHJldHVybiBfcmVmMzYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgp2YXIgZ2V0VHJhY2sgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjM3ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzNyhjb250ZXh0LCB0cmFja19pZCkgewogICAgdmFyIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzNyQoX2NvbnRleHQzNykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzNy5wcmV2ID0gX2NvbnRleHQzNy5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0MzcucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0MzcubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LnN0YXRlLnNwb3RpZnlBcGkuZ2V0VHJhY2sodHJhY2tfaWQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDM3LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM3LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQzNy5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQzNy50MCA9IF9jb250ZXh0MzdbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM3LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM3LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzNywgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFRyYWNrKF94NjMsIF94NjQpIHsKICAgIHJldHVybiBfcmVmMzcuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgp2YXIgZ2V0VHJhY2tzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYzOCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMzgoY29udGV4dCwgdHJhY2tfaWRzKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTM4JChfY29udGV4dDM4KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDM4LnByZXYgPSBfY29udGV4dDM4Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQzOC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQzOC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRUcmFja3ModHJhY2tfaWRzKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzOC5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzOC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0MzgucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0MzgudDAgPSBfY29udGV4dDM4WyJjYXRjaCJdKDApOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzOC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzOC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMzgsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBnZXRUcmFja3MoX3g2NSwgX3g2NikgewogICAgcmV0dXJuIF9yZWYzOC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8ge2FydGlzdElkOiBTdHJpbmd9CgoKdmFyIGdldEFydGlzdCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMzkgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTM5KGNvbnRleHQsIGlkKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTM5JChfY29udGV4dDM5KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDM5LnByZXYgPSBfY29udGV4dDM5Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQzOS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQzOS5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRBcnRpc3QoaWQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDM5LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM5LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQzOS5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQzOS50MCA9IF9jb250ZXh0MzlbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM5LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM5LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzOSwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldEFydGlzdChfeDY3LCBfeDY4KSB7CiAgICByZXR1cm4gX3JlZjM5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBbXQoKCnZhciBnZXRBcnRpc3RzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY0MCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNDAoY29udGV4dCwgaWRzKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQwJChfY29udGV4dDQwKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQwLnByZXYgPSBfY29udGV4dDQwLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0MC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0MC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRBcnRpc3RzKGlkcyk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NDAuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDAuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5hcnRpc3RzKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0NDAucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0NDAudDAgPSBfY29udGV4dDQwWyJjYXRjaCJdKDApOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0MC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0MC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNDAsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBnZXRBcnRpc3RzKF94NjksIF94NzApIHsKICAgIHJldHVybiBfcmVmNDAuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIEFycmF5IElEcwoKCnZhciBnZXRBdWRpb0ZlYXR1cmVzRm9yVHJhY2tzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY0MSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNDEoY29udGV4dCwgdHJhY2tfaWRzKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQxJChfY29udGV4dDQxKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQxLnByZXYgPSBfY29udGV4dDQxLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0MS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0MS5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRBdWRpb0ZlYXR1cmVzRm9yVHJhY2tzKHRyYWNrX2lkcyk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NDEuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDEuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5hdWRpb19mZWF0dXJlcyk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDQxLnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDQxLnQwID0gX2NvbnRleHQ0MVsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDEuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDEuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQxLCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0QXVkaW9GZWF0dXJlc0ZvclRyYWNrcyhfeDcxLCBfeDcyKSB7CiAgICByZXR1cm4gX3JlZjQxLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGdldEF1ZGlvRmVhdHVyZXNGb3JUcmFjayA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNDIgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQyKGNvbnRleHQsIHRyYWNrX2lkKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQyJChfY29udGV4dDQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQyLnByZXYgPSBfY29udGV4dDQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRBdWRpb0ZlYXR1cmVzRm9yVHJhY2tzKFt0cmFja19pZF0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQyLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQyLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UuYXVkaW9fZmVhdHVyZXNbMF0pOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQ0Mi5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ0Mi50MCA9IF9jb250ZXh0NDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQyLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0MiwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldEF1ZGlvRmVhdHVyZXNGb3JUcmFjayhfeDczLCBfeDc0KSB7CiAgICByZXR1cm4gX3JlZjQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGdldEF1ZGlvQW5hbHlzaXNGb3JUcmFjayA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNDMgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQzKGNvbnRleHQsIHRyYWNrX2lkKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQzJChfY29udGV4dDQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQzLnByZXYgPSBfY29udGV4dDQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0My5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0My5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRBdWRpb0FuYWx5c2lzRm9yVHJhY2sodHJhY2tfaWQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQzLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQ0My5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ0My50MCA9IF9jb250ZXh0NDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQzLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0MywgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldEF1ZGlvQW5hbHlzaXNGb3JUcmFjayhfeDc1LCBfeDc2KSB7CiAgICByZXR1cm4gX3JlZjQzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyB7c2VlZF90cmFja3M6IFt0cmFja19pZF0sIHRhcmdldF9kYW5jZWJpbGl0eTogTlVNLCBsaW1pdDogNiwgbWF4XyogbWluXyp9CgoKdmFyIGdldFJlY29tZW5kYXRpb25zID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY0NCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNDQoY29udGV4dCwgcGF5bG9hZCkgewogICAgdmFyIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0NCQoX2NvbnRleHQ0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0NC5wcmV2ID0gX2NvbnRleHQ0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0NDQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0NDQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LnN0YXRlLnNwb3RpZnlBcGkuZ2V0UmVjb21tZW5kYXRpb25zKHBheWxvYWQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQ0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQ0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQ0NC5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ0NC50MCA9IF9jb250ZXh0NDRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQ0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0NCwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFJlY29tZW5kYXRpb25zKF94NzcsIF94NzgpIHsKICAgIHJldHVybiBfcmVmNDQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIHtsaW1pdDogMS01MCwgb2Zmc2V0OiBmaXJzdCBpbmRleH0KCgp2YXIgZ2V0U2F2ZWRUcmFja3MgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQ1ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0NShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQ1JChfY29udGV4dDQ1KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQ1LnByZXYgPSBfY29udGV4dDQ1Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0NS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0NS5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRNeVNhdmVkVHJhY2tzKHsKICAgICAgICAgICAgICBsaW1pdDogcGF5bG9hZC5saW1pdCwKICAgICAgICAgICAgICBvZmZzZXQ6IHBheWxvYWQub2Zmc2V0CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQ1LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQ1LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQ0NS5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ0NS50MCA9IF9jb250ZXh0NDVbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQ1LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQ1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0NSwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFNhdmVkVHJhY2tzKF94NzksIF94ODApIHsKICAgIHJldHVybiBfcmVmNDUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIE5vbmUKCgp2YXIgZ2V0VXNlciA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNDYgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQ2KGNvbnRleHQpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNDYkKF9jb250ZXh0NDYpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NDYucHJldiA9IF9jb250ZXh0NDYubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQ2LnByZXYgPSAwOwoKICAgICAgICAgICAgaWYgKCFjb250ZXh0LnN0YXRlLmluaWNpYWxpemVkKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Ni5uZXh0ID0gNzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQ0Ni5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRNZSgpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQ2LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0NDYubmV4dCA9IDc7CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmNvbW1pdCgnc2V0VXNlckRhdGEnLCByZXNwb25zZSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDQ2Lm5leHQgPSAxMjsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBfY29udGV4dDQ2LnByZXYgPSA5OwogICAgICAgICAgICBfY29udGV4dDQ2LnQwID0gX2NvbnRleHQ0NlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDYuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDYuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQ2LCBudWxsLCBbWzAsIDldXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0VXNlcihfeDgxKSB7CiAgICByZXR1cm4gX3JlZjQ2LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBBcnJheSBJRHMKCgp2YXIgc2VhcmNoU3BvdGlmeSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNDcgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQ3KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNDckKF9jb250ZXh0NDcpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NDcucHJldiA9IF9jb250ZXh0NDcubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQ3LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDQ3Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gY29udGV4dC5zdGF0ZS5zcG90aWZ5QXBpLnNlYXJjaChwYXlsb2FkLnF1ZXJ5LCBbJ3RyYWNrJ10sIHsKICAgICAgICAgICAgICBsaW1pdDogMjUKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NDcuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDcuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDQ3LnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDQ3LnQwID0gX2NvbnRleHQ0N1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDcuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDcuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQ3LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gc2VhcmNoU3BvdGlmeShfeDgyLCBfeDgzKSB7CiAgICByZXR1cm4gX3JlZjQ3LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGdldEFydGlzdFRvcFRyYWNrcyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNDggPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQ4KGNvbnRleHQsIGlkKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQ4JChfY29udGV4dDQ4KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQ4LnByZXYgPSBfY29udGV4dDQ4Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0OC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0OC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuc3RhdGUuc3BvdGlmeUFwaS5nZXRBcnRpc3RUb3BUcmFja3MoaWQsICJVUyIsIHt9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0OC5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0OC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLnRyYWNrcyk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDQ4LnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDQ4LnQwID0gX2NvbnRleHQ0OFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDguYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDguc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQ4LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0QXJ0aXN0VG9wVHJhY2tzKF94ODQsIF94ODUpIHsKICAgIHJldHVybiBfcmVmNDguYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CgpleHBvcnQgZGVmYXVsdCB7CiAgaW5pY2lhbGl6ZUdldFRva2VuOiBpbmljaWFsaXplR2V0VG9rZW4sCiAgaW5pY2lhbGl6ZVBhcnNlVG9rZW46IGluaWNpYWxpemVQYXJzZVRva2VuLAogIGluaWNpYWxpemVTZXRUb2tlbjogaW5pY2lhbGl6ZVNldFRva2VuLAogIGxvYWRMaWJyYXJ5OiBsb2FkTGlicmFyeSwKICByZXRyaWV2ZVNhdmVkVHJhY2tzOiByZXRyaWV2ZVNhdmVkVHJhY2tzLAogIHByb2Nlc3NUcmFja3M6IHByb2Nlc3NUcmFja3MsCiAgaW5pY2lhbFNjYW5SZWR1Y2VJZHM6IGluaWNpYWxTY2FuUmVkdWNlSWRzLAogIGZpbmRBbmRTdG9yZUFydGlzdHM6IGZpbmRBbmRTdG9yZUFydGlzdHMsCiAgZGlzdHJpYnV0ZVRyYWNrQXVkaW9GZWF0dXJlczogZGlzdHJpYnV0ZVRyYWNrQXVkaW9GZWF0dXJlcywKICBjYWxjVHJhY2tzUGVyR2VucmU6IGNhbGNUcmFja3NQZXJHZW5yZSwKICBjYWxjRXh0cmVtZXM6IGNhbGNFeHRyZW1lcywKICByZXRyaWV2ZVRvcFBsYXllZDogcmV0cmlldmVUb3BQbGF5ZWQsCiAgcmV0cmlldmVUb3BQbGF5ZWRBcnRpc3RzOiByZXRyaWV2ZVRvcFBsYXllZEFydGlzdHMsCiAgcmV0cmlldmVUb3BQbGF5ZWRUcmFja3M6IHJldHJpZXZlVG9wUGxheWVkVHJhY2tzLAogIHNhdmVMaWJyYXJ5OiBzYXZlTGlicmFyeSwKICBjb252ZXJ0VHJhY2tzOiBjb252ZXJ0VHJhY2tzLAogIGdhdGhlck1vc3RQbGF5ZWRUcmFja3M6IGdhdGhlck1vc3RQbGF5ZWRUcmFja3MsCiAgZ2F0aGVyRXh0cmVtZXM6IGdhdGhlckV4dHJlbWVzLAogIGNvbXByZXNzVHJhY2s6IGNvbXByZXNzVHJhY2ssCiAgY29udmVydEFydGlzdHM6IGNvbnZlcnRBcnRpc3RzLAogIGdhdGhlck1vc3RQbGF5ZWRBcnRpc3RzOiBnYXRoZXJNb3N0UGxheWVkQXJ0aXN0cywKICBnYXRoZXJNb3N0U2F2ZWRBcnRpc3RzOiBnYXRoZXJNb3N0U2F2ZWRBcnRpc3RzLAogIGNvbXByZXNzQXJ0aXN0OiBjb21wcmVzc0FydGlzdCwKICBjb252ZXJ0R2VucmVzOiBjb252ZXJ0R2VucmVzLAogIHNvbmdBbmFseXNpczogc29uZ0FuYWx5c2lzLAogIHNvbmdBbmFseXNpc0ZlYXR1cmVzOiBzb25nQW5hbHlzaXNGZWF0dXJlcywKICBjbGVhbkF1ZGlvQW5hbHlzaXM6IGNsZWFuQXVkaW9BbmFseXNpcywKICBnZXRQZXJjZW50aWxlczogZ2V0UGVyY2VudGlsZXMsCiAgSFNWdG9SR0I6IEhTVnRvUkdCLAogIGFydGlzdEFuYWx5c2lzOiBhcnRpc3RBbmFseXNpcywKICBwcm9jZXNzQXJ0aXN0OiBwcm9jZXNzQXJ0aXN0LAogIGFydGlzdFRyYWNrczogYXJ0aXN0VHJhY2tzLAogIGFydGlzdFRpbWVsaW5lOiBhcnRpc3RUaW1lbGluZSwKICBhcnRpc3RUb3BUcmFja3M6IGFydGlzdFRvcFRyYWNrcywKICBiYW5nZXJDYWxjOiBiYW5nZXJDYWxjLAogIGdldFRvcEFydGlzdHM6IGdldFRvcEFydGlzdHMsCiAgZ2V0VG9wVHJhY2tzOiBnZXRUb3BUcmFja3MsCiAgZ2V0UmVjZW50bHlQbGF5ZWQ6IGdldFJlY2VudGx5UGxheWVkLAogIGdldFRyYWNrOiBnZXRUcmFjaywKICBnZXRUcmFja3M6IGdldFRyYWNrcywKICBnZXRBcnRpc3Q6IGdldEFydGlzdCwKICBnZXRBcnRpc3RzOiBnZXRBcnRpc3RzLAogIGdldEF1ZGlvRmVhdHVyZXNGb3JUcmFja3M6IGdldEF1ZGlvRmVhdHVyZXNGb3JUcmFja3MsCiAgZ2V0QXVkaW9GZWF0dXJlc0ZvclRyYWNrOiBnZXRBdWRpb0ZlYXR1cmVzRm9yVHJhY2ssCiAgZ2V0QXVkaW9BbmFseXNpc0ZvclRyYWNrOiBnZXRBdWRpb0FuYWx5c2lzRm9yVHJhY2ssCiAgZ2V0UmVjb21lbmRhdGlvbnM6IGdldFJlY29tZW5kYXRpb25zLAogIGdldFNhdmVkVHJhY2tzOiBnZXRTYXZlZFRyYWNrcywKICBnZXRVc2VyOiBnZXRVc2VyLAogIGdldEFydGlzdFRvcFRyYWNrczogZ2V0QXJ0aXN0VG9wVHJhY2tzLAogIHNlYXJjaFNwb3RpZnk6IHNlYXJjaFNwb3RpZnkKfTs="},{"version":3,"sources":["C:/Users/andre/Documents/GitHub/Spotify-Features/my-music-taste/src/store/actions.js"],"names":["inicializeGetToken","context","authEndpoint","clientId","redirectUri","state","dev","scopes","access_token","window","location","join","inicializeParseToken","token","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","dispatch","inicializeSetToken","spotifyApi","setAccessToken","commit","loadLibrary","limit","offset","retrieveSavedTracks","payload","response","total","items","length","keys","Object","audioFeatures","i","processTracks","ids","trackAudioFeatures","now","Date","nowTime","getTime","MONTH","tempo","energy","danceability","banger","addedDate","tracks","id","date","addedDateTime","month","Math","floor","value","valence","inicialScanReduceIds","artistsToFind","trackObject","track","j","artists","includes","push","map","artist","added_at","album","album_type","available_markets","href","external_urls","spotify","type","uri","disc_number","external_ids","images","image","url","findAndStoreArtists","values","trackSets","sectionIds","splice","newArtists","concat","artistObject","followers","genres","name","tracknum","distributeTrackAudioFeatures","acousticness","instrumentalness","liveness","loudness","speechiness","key","mode","properties","duration_ms","time_signature","calcTracksPerGenre","artistIds","genreTuples","entries","topGenres","sort","a","b","slice","topGenreIds","genre","artistTuples","topArtists","topArtistIds","calcExtremes","trackTuples","charts","topTracks","topTracksIds","chart","retrieveTopPlayed","retrieveTopPlayedArtists","ranges","time_range","index","retrieveTopPlayedTracks","bangerCalc","saveLibrary","private","include","numerical_data","audio_features","most_played_tracks","most_played_artists","data","progress","most_saved_artists","most_saved_genres","topSaved","topPlayed","numerical_features","extremes","probability_features","happiness_distribution","plot","energy_distribution","danceability_distribution","banger_distribution","added_timeline","dateAdded","happiness_timeline","happinessTimeline","timeline","convertTracks","reqTracks","addTracks","nonRepeatedTracks","gatherMostPlayedTracks","gatherExtremes","k","compressTrack","convertArtists","reqArtists","addArtists","nonRepeatedArtists","gatherMostPlayedArtists","gatherMostSavedArtists","compressArtist","convertGenres","reqGenres","songAnalysis","trackData","audioAnalysis","songAnalysisFeatures","song","cleanAudioAnalysis","audioAnalysisSegments","newSegments","segments","width","round","itemIndex","sum","pitches","averagePitch","hue","saturation","color","loudness_max","start","red","r","green","g","blue","getPercentiles","lower","HSVtoRGB","f","p","q","t","artistAnalysis","processArtist","artistTracks","artistTimeline","oldest","newest","artistSaved","dateTime","diff","diffMonth","time","artistTopTracks","getTopArtists","getMyTopArtists","getTopTracks","getMyTopTracks","getRecentlyPlayed","getMyRecentlyPlayedTracks","getTrack","track_id","getTracks","track_ids","getArtist","getArtists","getAudioFeaturesForTracks","getAudioFeaturesForTrack","getAudioAnalysisForTrack","getRecomendations","getRecommendations","getSavedTracks","getMySavedTracks","getUser","inicialized","getMe","searchSpotify","search","query","getArtistTopTracks"],"mappings":"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","sourcesContent":["\r\n\r\n////////////////////////////////////////////////////////////////\r\n// INICIALIZATION //////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// None\r\nconst inicializeGetToken = (context) => {\r\n    const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n    const clientId = '42903eeb2bf943c4bd4903370f7a93f5';\r\n    let redirectUri = 'http://mymusictaste.org/redirect/';\r\n    if (context.state.dev)\r\n        redirectUri = 'http://localhost:8080/redirect/';\r\n    const scopes = [\r\n        'user-read-recently-played',\r\n        'user-top-read',\r\n        'user-library-read',\r\n        'user-read-email',\r\n    ];\r\n    if (!context.state.access_token) {\r\n        window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\r\n    }\r\n};\r\n// None\r\nconst inicializeParseToken = (context) => {\r\n    let token = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\r\n        if (item) {\r\n            let parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n    }, {});\r\n    context.dispatch('inicializeSetToken', token.access_token);\r\n};\r\n// Token\r\nconst inicializeSetToken = async (context, token) => {\r\n    await context.state.spotifyApi.setAccessToken(token);\r\n    await context.commit('setInicialized', true);\r\n    context.dispatch('getUser');\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// LOAD PROGRESS ///////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// None\r\nconst loadLibrary = async (context) => {\r\n    context.commit('resetProgress');\r\n    await context.dispatch('retrieveSavedTracks', {limit: 50, offset: 0});\r\n    await context.dispatch('retrieveTopPlayed');\r\n    await context.dispatch('calcTracksPerGenre');\r\n    await context.dispatch('calcExtremes');\r\n};\r\n// {limit: Number, offset: Number}\r\nconst retrieveSavedTracks = async (context, payload) => {\r\n    let response = await context.dispatch('getSavedTracks', {limit: payload.limit, offset: payload.offset});\r\n    if (payload.offset == 0)\r\n        context.commit('setTotal', response.total);\r\n    await context.dispatch('processTracks', response.items);\r\n    if (response.items.length == payload.limit)\r\n        await context.dispatch('retrieveSavedTracks', {limit: 50, offset: payload.offset + payload.limit});\r\n    else {\r\n        let keys = Object.keys(context.state.audioFeatures);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            await context.commit('averageAudioFeatureValue', keys[i]);\r\n        }\r\n        await context.commit('averageMode');\r\n        await context.commit('averageValenceOverTime');\r\n        context.commit('setTracksLoaded');\r\n    }\r\n};\r\n// Track Array\r\nconst processTracks = async (context, payload) => {\r\n    let ids = await context.dispatch('inicialScanReduceIds', payload);\r\n    let trackAudioFeatures = await context.dispatch('getAudioFeaturesForTracks', ids);\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    for (let i = 0; i < trackAudioFeatures.length; i++) {\r\n        trackAudioFeatures[i].banger = await context.dispatch('bangerCalc', {tempo: trackAudioFeatures[i].tempo, energy: trackAudioFeatures[i].energy, danceability: trackAudioFeatures[i].danceability});\r\n        let addedDate = new Date(context.state.tracks[trackAudioFeatures[i].id].date);\r\n        let addedDateTime = addedDate.getTime();\r\n        await context.commit('addValenceOverTime', {month: Math.floor((nowTime - addedDateTime) / MONTH), value:  trackAudioFeatures[i].valence});\r\n    }\r\n    await context.dispatch('distributeTrackAudioFeatures', trackAudioFeatures);\r\n};\r\n// Track Array\r\nconst inicialScanReduceIds = async (context, payload) => {\r\n    let ids = [];\r\n    let artistsToFind = {};\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    for (let i = 0; i < payload.length; i++) {\r\n        let trackObject = payload[i].track;\r\n        for (let j = 0; j < trackObject.artists.length; j++) {\r\n            if (!(trackObject.artists[j].id in context.state.artists)) {\r\n                if (!(trackObject.artists[j].id in artistsToFind))\r\n                    artistsToFind[trackObject.artists[j].id] = {id: trackObject.artists[j].id, tracks: [trackObject.id]};\r\n                else {\r\n                    if (!(artistsToFind[trackObject.artists[j].id].tracks.includes(trackObject.id)))\r\n                        artistsToFind[trackObject.artists[j].id].tracks.push(trackObject.id);\r\n                }\r\n            }\r\n            else\r\n                context.commit('addTrackToArtist', {id: trackObject.artists[j].id, track: trackObject.id});\r\n        }\r\n        trackObject.artists = trackObject.artists.map(artist => artist.id);\r\n        trackObject.date = payload[i].added_at;\r\n        let addedDate = new Date(trackObject.date);\r\n        let addedDateTime = addedDate.getTime();\r\n        context.commit('addDateAddedTrack', Math.floor((nowTime - addedDateTime) / MONTH));\r\n        delete trackObject.album.album_type;\r\n        delete trackObject.album.artists;\r\n        delete trackObject.album.available_markets;\r\n        delete trackObject.album.available_markets;\r\n        trackObject.album.href = trackObject.album.external_urls.spotify;\r\n        delete trackObject.album.type;\r\n        delete trackObject.album.uri;\r\n        delete trackObject.available_markets;\r\n        delete trackObject.disc_number;\r\n        delete trackObject.external_ids;\r\n        trackObject.href = trackObject.external_urls.spotify;\r\n        delete trackObject.external_urls;\r\n        delete trackObject.type;\r\n        delete trackObject.uri;\r\n        if (trackObject.album.images.length > 1)\r\n            trackObject.image = trackObject.album.images[0].url;\r\n        ids.push(trackObject.id);\r\n        context.commit('pushTrack', {id: trackObject.id, value: trackObject});\r\n        context.commit('addProcessed');\r\n    }\r\n    await context.dispatch('findAndStoreArtists', artistsToFind);\r\n    return ids;\r\n};\r\n// Array {id: String, tracks: [String]}\r\nconst findAndStoreArtists = async (context, payload) => {\r\n    let ids = Object.values(payload).map(artist => artist.id);\r\n    let trackSets = Object.values(payload);\r\n    let artists = [];\r\n    while (ids.length > 0) {\r\n        let sectionIds = ids.splice(0, 50);\r\n        let newArtists = await context.dispatch('getArtists', sectionIds);\r\n        artists = artists.concat(newArtists);\r\n    }\r\n    for (let i = 0; i < artists.length; i++) {\r\n        let artistObject = artists[i];\r\n        for (let j = 0; j < trackSets.length; j++) {\r\n            if (artistObject.id == trackSets[j].id){\r\n                artistObject.tracks = trackSets[j].tracks;\r\n                trackSets.splice(j, 1);\r\n                break;\r\n            }\r\n        }\r\n        artistObject.href = artistObject.external_urls.spotify;\r\n        delete artistObject.external_urls;\r\n        artistObject.followers = artistObject.followers.total;\r\n        for (let j = 0; j < artistObject.genres.length; j++) {\r\n            if (!(artistObject.genres[j] in context.state.genres))  \r\n                await context.commit('pushGenre', {id: artistObject.genres[j], value: {name: artistObject.genres[j], artists: [artistObject.id], tracknum: 0}});\r\n            else \r\n                await context.commit('addArtistToGenre', {id: artistObject.genres[j], artist: artistObject.id});\r\n        }\r\n        delete artistObject.type;\r\n        delete artistObject.uri;\r\n        if (artistObject.images.length > 0)\r\n            artistObject.image = artistObject.images[0].url;\r\n        delete artistObject.images;\r\n        await context.commit('pushArtist', {id: artistObject.id, value: artistObject});\r\n    }\r\n};\r\n// Audio Features Array\r\nconst distributeTrackAudioFeatures = async (context, payload) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let values = {\r\n        acousticness: 0,\r\n        danceability: 0,\r\n        energy: 0,\r\n        instrumentalness: 0,\r\n        liveness: 0,\r\n        loudness: 0,\r\n        speechiness: 0,\r\n        valence: 0,\r\n        tempo: 0,\r\n        banger: 0,\r\n    };\r\n    for (let i = 0; i < payload.length; i++) {\r\n        for (let j = 0; j < keys.length; j++) {\r\n            values[keys[j]] += payload[i][keys[j]];\r\n            context.commit('plotAudioFeatureValue', {key: keys[j], value: payload[i][keys[j]]});\r\n        }\r\n        context.commit('addMode', payload[i].mode);\r\n        await context.commit('addTrackProperties', {id: payload[i].id, properties: {\r\n            danceability: payload[i].danceability,\r\n            energy: payload[i].energy,\r\n            key: payload[i].key,\r\n            loudness: payload[i].loudness,\r\n            mode: payload[i].mode,\r\n            speechiness: payload[i].speechiness,\r\n            acousticness: payload[i].acousticness,\r\n            instrumentalness: payload[i].instrumentalness,\r\n            liveness: payload[i].liveness,\r\n            valence: payload[i].valence,\r\n            tempo: payload[i].tempo,\r\n            duration_ms: payload[i].duration_ms,\r\n            time_signature: payload[i].time_signature,\r\n            banger: payload[i].banger,\r\n        }});\r\n    }\r\n    for (let i = 0; i < keys.length; i++) {\r\n        await context.commit('addAudioFeatureValue', {key: keys[i], value: values[keys[i]]});\r\n    }   \r\n};\r\nconst calcTracksPerGenre = async (context) => {\r\n    let artistIds = Object.keys(context.state.artists);\r\n    for (let i = 0; i < artistIds.length; i++) \r\n        for (let j = 0; j < context.state.artists[artistIds[i]].genres.length; j++) \r\n            if (\"tracks\" in context.state.artists[artistIds[i]])\r\n                if (context.state.artists[artistIds[i]].tracks.length > 0)\r\n                    await context.commit('addGenreTrackNum', {id: context.state.artists[artistIds[i]].genres[j], value: context.state.artists[artistIds[i]].tracks.length});\r\n    let genreTuples = Object.entries(context.state.genres);\r\n    let topGenres = genreTuples.sort(function(a,b) {\r\n        if (!(\"tracknum\" in a[1]) && !(\"tracknum\" in b[1]))\r\n            return 0;\r\n        if (!(\"tracknum\" in b[1]))\r\n            return 0 - a[1].tracknum;\r\n        if (!(\"tracknum\" in a[1]))\r\n            return b[1].tracknum;\r\n        return b[1].tracknum - a[1].tracknum\r\n    }).slice(0,50);\r\n    let topGenreIds = topGenres.map(genre => genre[0]);\r\n    context.commit('setTopSavedGenres', topGenreIds);\r\n    let artistTuples = Object.entries(context.state.artists);\r\n    let topArtists = artistTuples.sort(function(a,b) {\r\n        if (!(\"tracks\" in a[1]) && !(\"tracks\" in b[1]))\r\n            return 0;\r\n        if (!(\"tracks\" in b[1]))\r\n            return 0 - a[1].tracks.length;\r\n        if (!(\"tracks\" in a[1]))\r\n            return b[1].tracks.length;\r\n        return b[1].tracks.length - a[1].tracks.length\r\n    }).slice(0,50);\r\n    let topArtistIds = topArtists.map(artist => artist[0]);\r\n    context.commit('setTopSavedArtists', topArtistIds);\r\n    context.commit('setArtistsLoaded');\r\n    context.commit('setGenresLoaded');\r\n};\r\nconst calcExtremes = async (context) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let trackTuples = Object.entries(context.state.tracks);\r\n    let charts = [\"minchart\", \"maxchart\"];\r\n    let topTracks;\r\n    for (let i = 0; i < keys.length; i++) \r\n        for (let j = 0; j < charts.length; j++) {\r\n            if (charts[j] == \"minchart\")\r\n                topTracks = trackTuples.sort((a,b) => a[1][keys[i]] - b[1][keys[i]]).slice(0,25);\r\n            else\r\n                topTracks = trackTuples.sort((a,b) => b[1][keys[i]] - a[1][keys[i]]).slice(0,25);\r\n            let topTracksIds = topTracks.map(track => track[0]);\r\n            context.commit('setAudioFeatureChart', {key: keys[i], chart: [charts[j]], value: topTracksIds});\r\n        }\r\n    context.commit('setExtremesLoaded');\r\n};\r\nconst retrieveTopPlayed = async (context) => {\r\n    await context.dispatch('retrieveTopPlayedArtists');\r\n    await context.dispatch('retrieveTopPlayedTracks');\r\n};\r\nconst retrieveTopPlayedArtists = async (context) => {\r\n    let ranges = ['short_term', 'medium_term', 'long_term'];\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        let artists = await context.dispatch('getTopArtists', {limit: 50, time_range: ranges[i], offset: 0});\r\n        let ids = [];\r\n        for (let j = 0; j < artists.length; j++) {\r\n            ids.push(artists[j].id);\r\n            if (!(artists[j].id in context.state.artists)) {\r\n                let artistObject = artists[j];\r\n                artistObject.href = artistObject.external_urls.spotify;\r\n                delete artistObject.external_urls;\r\n                artistObject.followers = artistObject.followers.total;\r\n                delete artistObject.type;\r\n                delete artistObject.uri;\r\n                artistObject.tracks = [];\r\n                context.commit('pushArtist', {id: artists[j].id, value: artistObject});\r\n            }\r\n        }\r\n        context.commit('setTopPlayedArtists', {index: i, value: ids});\r\n    }\r\n};\r\nconst retrieveTopPlayedTracks = async (context) => {\r\n    let ranges = ['short_term', 'medium_term', 'long_term'];\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        let tracks = await context.dispatch('getTopTracks', {limit: 50, time_range: ranges[i], offset: 0});\r\n        let ids = [];\r\n        for (let j = 0; j < tracks.length; j++) {\r\n            ids.push(tracks[j].id);\r\n            if (!(tracks[j].id in context.state.tracks)) {\r\n                let trackObject = tracks[j];\r\n                delete trackObject.album.album_type;\r\n                delete trackObject.album.artists;\r\n                delete trackObject.album.available_markets;\r\n                delete trackObject.album.available_markets;\r\n                trackObject.album.href = trackObject.album.external_urls.spotify;\r\n                delete trackObject.album.type;\r\n                delete trackObject.album.uri;\r\n                delete trackObject.available_markets;\r\n                delete trackObject.disc_number;\r\n                delete trackObject.external_ids;\r\n                trackObject.href = trackObject.external_urls.spotify;\r\n                delete trackObject.external_urls;\r\n                delete trackObject.type;\r\n                delete trackObject.uri;\r\n                context.commit('pushTrack', {id: tracks[j].id, value: trackObject});\r\n            }\r\n        }\r\n        context.commit('setTopPlayedTracks', {index: i, value: ids});\r\n    }\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// AUDIO FEATURES //////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {tempo: Number, energy: Number, danceability: Number}\r\nconst bangerCalc = async (context, payload) => {\r\n    return ((payload.tempo - 96 + (payload.energy * 100) + (payload.danceability*50)) / 210);\r\n}\r\n////////////////////////////////////////////////////////////////\r\n// SAVE LIBRARY ////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {name: String, privacy: Boolean, include: Object}\r\n// INCLUDE ITEM               KEY                        PUBLIC REQ\r\n// Numerical Data: True.      numerical_data             True\r\n// Most Saved Artists:        most_saved_artists         \r\n// Audio Features: True.      audio_features             True\r\n// Top Saved Genres:          most_saved_genres\r\n// Numerical Features:        numerical_features\r\n// Probability Features:      probability_features\r\n// Date Added Timeline:       added_timeline\r\n// Happiness Distribution:    happiness_distribution\r\n// Energy Distribution:       energy_distribution\r\n// Danceability Distribution: danceability_distribution\r\n// Banger Distribution:       banger_distribution\r\n// Happiness Timeline         happiness_timeline\r\n// Top 30 Songs:              most_played_tracks          True\r\n// Top 30 Artists:            most_played_artists         True\r\n// Extremes Top 10:           extremes\r\n\r\nconst saveLibrary = async (context, payload) => {\r\n    if (!payload.private && !payload.include.numerical_data && !payload.include.audio_features && !payload.include.most_played_tracks && !payload.include.most_played_artists)\r\n        return null;\r\n    let data = {};\r\n    data.include = payload.include;\r\n    data.name = payload.name;\r\n    data.private = payload.private;\r\n    data.tracks = await context.dispatch('convertTracks', payload.include);\r\n    data.artists = await context.dispatch('convertArtists', payload.include);\r\n    data.genres = await context.dispatch('convertGenres', payload.include);\r\n    if (payload.include.numerical_data)\r\n        data.numerical_data = {total: context.state.progress.total, artists: (Object.keys(context.state.artists)).length, genres: (Object.keys(context.state.genres)).length};\r\n    if (payload.include.most_saved_artists || payload.include.most_saved_genres) {\r\n        data.topSaved = {};\r\n        if (payload.include.most_saved_artists)\r\n            data.topSaved.artists = context.state.topSaved.artists.slice(0, 20);\r\n        if (payload.include.most_saved_genres)\r\n            data.topSaved.genres = context.state.topSaved.genres.slice(0, 20);\r\n    }\r\n    if (payload.include.most_played_tracks || payload.include.most_played_artists) {\r\n        data.topPlayed = {};\r\n        if (payload.include.most_played_tracks) \r\n            data.topPlayed.tracks = [];\r\n            data.topPlayed.tracks[0] = context.state.topPlayed.tracks[0].slice(0, 20);\r\n            data.topPlayed.tracks[1] = context.state.topPlayed.tracks[1].slice(0, 20);\r\n            data.topPlayed.tracks[2] = context.state.topPlayed.tracks[2].slice(0, 20);\r\n        if (payload.include.most_played_artists) \r\n            data.topPlayed.artists = [];\r\n            data.topPlayed.artists[0] = context.state.topPlayed.artists[0].slice(0, 20);\r\n            data.topPlayed.artists[1] = context.state.topPlayed.artists[1].slice(0, 20);\r\n            data.topPlayed.artists[2] = context.state.topPlayed.artists[2].slice(0, 20);\r\n    }\r\n    if (payload.include.audio_features || payload.include.numerical_features || payload.include.extremes || payload.include.probability_features) {\r\n        data.audioFeatures = {\r\n            acousticness: {},\r\n            danceability: {},\r\n            energy: {},\r\n            instrumentalness: {},\r\n            liveness: {},\r\n            loudness: {},\r\n            speechiness: {},\r\n            tempo: {},\r\n            valence: {},\r\n            banger: {},\r\n        };\r\n        if (payload.include.audio_features) {\r\n            data.audioFeatures.valence.value = context.state.audioFeatures.valence.value;\r\n            data.audioFeatures.energy.value = context.state.audioFeatures.energy.value;\r\n            data.audioFeatures.danceability.value = context.state.audioFeatures.danceability.value;\r\n        }\r\n        if (payload.include.numerical_features) {\r\n            data.audioFeatures.tempo.value = context.state.audioFeatures.tempo.value;\r\n            data.audioFeatures.loudness.value = context.state.audioFeatures.loudness.value;\r\n            data.mode = context.state.mode.value;\r\n        }\r\n        if (payload.include.probability_features) {\r\n            data.audioFeatures.acousticness.value = context.state.audioFeatures.acousticness.value;\r\n            data.audioFeatures.instrumentalness.value = context.state.audioFeatures.instrumentalness.value;\r\n            data.audioFeatures.liveness.value = context.state.audioFeatures.liveness.value;\r\n            data.audioFeatures.speechiness.value = context.state.audioFeatures.speechiness.value;\r\n        }\r\n        if (payload.include.extremes) {\r\n            let keys = Object.keys(data.audioFeatures);\r\n            let charts = [\"minchart\", \"maxchart\"]\r\n            for (let i = 0; i < keys.length; i++) {\r\n                for (let j = 0; j < charts.length; j++) {\r\n                    data.audioFeatures[keys[i]][charts[j]] = context.state.audioFeatures[keys[i]][charts[j]].slice(0, 10);\r\n                }\r\n            }\r\n        }\r\n        if (payload.include.happiness_distribution) {\r\n            data.audioFeatures.valence.plot = context.state.audioFeatures.valence.plot;\r\n        }\r\n        if (payload.include.energy_distribution) {\r\n            data.audioFeatures.energy.plot = context.state.audioFeatures.energy.plot;\r\n        }\r\n        if (payload.include.danceability_distribution) {\r\n            data.audioFeatures.danceability.plot = context.state.audioFeatures.danceability.plot;\r\n        }\r\n        if (payload.include.banger_distribution) {\r\n            data.audioFeatures.banger.plot = context.state.audioFeatures.banger.plot;\r\n        }\r\n    }\r\n    if (payload.include.added_timeline) \r\n        data.dateAdded = context.state.dateAdded;\r\n    if (payload.include.happiness_timeline) {\r\n        data.happinessTimeline = context.state.audioFeatures.valence.timeline;\r\n    }\r\n    return data;\r\n};\r\n// Include Object\r\nconst convertTracks = async (context, payload) => {\r\n    let reqTracks = {};\r\n    let addTracks = [];\r\n    if (payload.most_played_tracks)\r\n        addTracks = addTracks.concat(await context.dispatch('gatherMostPlayedTracks'));\r\n    if (payload.extremes) \r\n        addTracks = addTracks.concat(await context.dispatch('gatherExtremes'));\r\n    let nonRepeatedTracks = {};\r\n    for (let i = 0; i < addTracks.length; i++) {\r\n        if (!(addTracks[i] in nonRepeatedTracks))\r\n            nonRepeatedTracks[addTracks[i]] = 0;\r\n        else {\r\n            nonRepeatedTracks[addTracks[i]] += 1;\r\n        }\r\n    }\r\n    let ids = Object.keys(nonRepeatedTracks);\r\n    for (let i = 0; i < ids.length; i++) {\r\n        reqTracks[ids[i]] = await context.dispatch(\"compressTrack\", context.state.tracks[ids[i]]);\r\n    }\r\n    return reqTracks;\r\n};\r\n// Nothing\r\nconst gatherMostPlayedTracks = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topPlayed.tracks.length; i++) {\r\n        for (let j = 0; (j < context.state.topPlayed.tracks[i].length && j < 20); j++) {\r\n            ids.push(context.state.topPlayed.tracks[i][j]);\r\n        }\r\n    }\r\n    return ids;\r\n}\r\n// Nothing\r\nconst gatherExtremes = async (context) => {\r\n    let keys = Object.keys(context.state.audioFeatures);\r\n    let charts = [\"minchart\", \"maxchart\"];\r\n    let ids = [];\r\n    for (let i = 0; i < keys.length; i++) {\r\n        for (let j = 0; j < charts.length; j++) {\r\n            for (let k = 0; k < (context.state.audioFeatures[keys[i]][charts[j]].length) && k < 10; k++) {\r\n                ids.push(context.state.audioFeatures[keys[i]][charts[j]][k]);\r\n            }\r\n        }\r\n    }\r\n    return ids;\r\n}\r\n// Track object\r\nconst compressTrack = async (context, payload) => {\r\n    let newArtists = [];\r\n    for (let i = 0; i < payload.artists.length; i++) {\r\n        if (typeof(payload.artists[i]) == 'object')\r\n            newArtists.push({id: payload.artists[i], name: payload.artists[i].name});\r\n        else \r\n            newArtists.push({id: payload.artists[i], name: context.state.artists[payload.artists[i]].name});\r\n    }\r\n    return {id: payload.id, name: payload.name, image: payload.album.images[0].url, artists: newArtists};\r\n};\r\n// None\r\nconst convertArtists = async (context, payload) => {\r\n    let reqArtists = {};\r\n    let addArtists = [];\r\n    if (payload.most_played_artists)\r\n        addArtists = addArtists.concat(await context.dispatch('gatherMostPlayedArtists'));\r\n    if (payload.most_saved_artists) \r\n        addArtists = addArtists.concat(await context.dispatch('gatherMostSavedArtists'));\r\n    let nonRepeatedArtists = {};\r\n    for (let i = 0; i < addArtists.length; i++) {\r\n        if (!(addArtists[i] in nonRepeatedArtists))\r\n            nonRepeatedArtists[addArtists[i]] = 1;\r\n        else {\r\n            nonRepeatedArtists[addArtists[i]] += 1;\r\n        }\r\n    }\r\n    let ids = Object.keys(nonRepeatedArtists);\r\n    for (let i = 0; i < ids.length; i++) {\r\n        reqArtists[ids[i]] = await context.dispatch(\"compressArtist\", context.state.artists[ids[i]]);\r\n    }\r\n    return reqArtists;\r\n};\r\n// Nothing\r\nconst gatherMostPlayedArtists = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topPlayed.artists.length; i++) {\r\n        for (let j = 0; (j < context.state.topPlayed.artists[i].length && j < 20); j++) {\r\n            ids.push(context.state.topPlayed.artists[i][j]);\r\n        }\r\n    }\r\n    return ids;\r\n};\r\n// Nothing\r\nconst gatherMostSavedArtists = async (context) => {\r\n    let ids = [];\r\n    for (let i = 0; i < context.state.topSaved.artists.length; i++) {\r\n        ids.push(context.state.topSaved.artists[i]);\r\n    }\r\n    return ids;\r\n};\r\n// Track object\r\nconst compressArtist = async (context, payload) => {\r\n    return {id: payload.id, name: payload.name, image: payload.image, genres: payload.genres, tracks: payload.tracks};\r\n};\r\n// Include Object\r\nconst convertGenres = async (context, payload) => {\r\n    let reqGenres = {};\r\n    if (payload.most_saved_genres) {\r\n        for (let i = 0; (i < context.state.topSaved.genres.length && i < 20); i++) {\r\n            reqGenres[context.state.topSaved.genres[i]] = context.state.genres[context.state.topSaved.genres[i]];\r\n        }\r\n    }\r\n    return reqGenres;\r\n};\r\n\r\n////////////////////////////////////////////////////////////////\r\n// ANALYSIS ////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n/*\r\n    album: {album_type: \"album\", artists: Array(1), available_markets: Array(78), external_urls: {…}, href: \"https://api.spotify.com/v1/albums/5MmMomspau1V5YpXjHYJRy\", …}\r\n    artists: [{…}]\r\n    available_markets: (78) [\"AD\", \"AE\", \"AR\", \"AT\", \"AU\", \"BE\", \"BG\", \"BH\", \"BO\", \"BR\", \"CA\", \"CH\", \"CL\", \"CO\", \"CR\", \"CY\", \"CZ\", \"DE\", \"DK\", \"DO\", \"DZ\", \"EC\", \"EE\", \"EG\", \"ES\", \"FI\", \"FR\", \"GB\", \"GR\", \"GT\", \"HK\", \"HN\", \"HU\", \"ID\", \"IE\", \"IL\", \"IN\", \"IS\", \"IT\", \"JO\", \"KW\", \"LB\", \"LI\", \"LT\", \"LU\", \"LV\", \"MA\", \"MC\", \"MT\", \"MX\", \"MY\", \"NI\", \"NL\", \"NO\", \"NZ\", \"OM\", \"PA\", \"PE\", \"PH\", \"PL\", \"PS\", \"PT\", \"PY\", \"QA\", \"RO\", \"SA\", \"SE\", \"SG\", \"SK\", \"SV\", \"TH\", \"TN\", \"TR\", \"TW\", \"US\", \"UY\", \"VN\", \"ZA\"]\r\n    disc_number: 1\r\n    duration_ms: 296899\r\n    explicit: false\r\n    external_ids: {isrc: \"GBCFB1200106\"}\r\n    external_urls: {spotify: \"https://open.spotify.com/track/74Csq5DMaOBShLUhI6NU5A\"}\r\n    href: \"https://api.spotify.com/v1/tracks/74Csq5DMaOBShLUhI6NU5A\"\r\n    id: \"74Csq5DMaOBShLUhI6NU5A\"\r\n    is_local: false\r\n    name: \"Curse Me Good\"\r\n    popularity: 50\r\n    preview_url: \"https://p.scdn.co/mp3-preview/ea8af91eefd28faf2ab5c73b6dc5a596bf0d5b9b?cid=42903eeb2bf943c4bd4903370f7a93f5\"\r\n    track_number: 2\r\n    type: \"track\"\r\n    uri: \"spotify:track:74\r\n\r\n\r\n    acousticness: 0.0105\r\n    album: {external_urls: {…}, href: \"https://open.spotify.com/album/5MmMomspau1V5YpXjHYJRy\", id: \"5MmMomspau1V5YpXjHYJRy\", images: Array(3), name: \"The Glorious Dead\", …}\r\n    artists: [\"0bZCak2tcRMY1dzEIuwF42\"]\r\n    banger: 0.6849999999999999\r\n    danceability: 0.809\r\n    date: \"2018-09-23T23:34:33Z\"\r\n    duration_ms: 296900\r\n    energy: 0.814\r\n    explicit: false\r\n    href: \"https://open.spotify.com/track/74Csq5DMaOBShLUhI6NU5A\"\r\n    id: \"74Csq5DMaOBShLUhI6NU5A\"\r\n    instrumentalness: 0.0000248\r\n    is_local: false\r\n    key: 6\r\n    liveness: 0.099\r\n    loudness: -6.829\r\n    mode: 0\r\n    name: \"Curse Me Good\"\r\n    popularity: 50\r\n    preview_url: \"https://p.scdn.co/mp3-preview/ea8af91eefd28faf2ab5c73b6dc5a596bf0d5b9b?cid=42903eeb2bf943c4bd4903370f7a93f5\"\r\n    speechiness: 0.0338\r\n    tempo: 118\r\n    time_signature: 4\r\n    track_number: 2\r\n    valence: 0.804\r\n*/\r\nconst songAnalysis = async (context, id) => {\r\n    let trackData;\r\n    trackData = await context.dispatch('getTrack', id);\r\n    trackData = await context.dispatch('songAnalysisFeatures', {trackData: trackData, id: id});\r\n    trackData.audioAnalysis = await context.dispatch('cleanAudioAnalysis', {id: id});\r\n    return trackData;\r\n};\r\n// {id: String}\r\nconst songAnalysisFeatures = async (context, payload) => {\r\n    let song = payload.trackData;\r\n    let audioFeatures = await context.dispatch('getAudioFeaturesForTrack', payload.id);\r\n    song.acousticness = audioFeatures.acousticness;\r\n    song.danceability = audioFeatures.danceability;\r\n    song.energy = audioFeatures.energy;\r\n    song.instrumentalness = audioFeatures.instrumentalness;\r\n    song.key = audioFeatures.key;\r\n    song.liveness = audioFeatures.liveness;\r\n    song.loudness = audioFeatures.loudness;\r\n    song.mode = audioFeatures.mode;\r\n    song.speechiness = audioFeatures.speechiness;\r\n    song.tempo = audioFeatures.tempo;\r\n    song.valence = audioFeatures.valence;\r\n    return song;\r\n};\r\nconst cleanAudioAnalysis = async (context, payload) => {\r\n    let audioAnalysisSegments = 80;\r\n    let audioAnalysis = await context.dispatch('getAudioAnalysisForTrack', payload.id);\r\n    let newSegments = [];\r\n    if (audioAnalysis.segments.length < audioAnalysisSegments)\r\n        audioAnalysisSegments = audioAnalysis.segments.length;\r\n    let width = Math.round(audioAnalysis.segments.length / audioAnalysisSegments);\r\n    \r\n    for (var i = 0; i < audioAnalysisSegments; i++)\r\n    {\r\n        let itemIndex = Math.round(width * i);\r\n        if (itemIndex > audioAnalysis.segments.length - 1)\r\n        {\r\n            itemIndex = audioAnalysis.segments.length - 2;\r\n        }\r\n        let sum = 0;\r\n        for (var j = 0; j < audioAnalysis.segments[itemIndex].pitches.length; j++)\r\n        {\r\n            sum += audioAnalysis.segments[itemIndex].pitches[j];\r\n        }\r\n        let averagePitch = sum / audioAnalysis.segments[itemIndex].pitches.length; \r\n        let color = await context.dispatch('HSVtoRGB', {hue: (((1 - averagePitch) * 229 + -50) / 360), saturation: 0.51, value: 0.89});\r\n        let loudness = (Math.round(((audioAnalysis.segments[itemIndex].loudness_max / 60) + 1) * 100) / 100);\r\n\r\n        newSegments.push({\r\n            start: Math.round(audioAnalysis.segments[itemIndex].start),\r\n            loudness_max: loudness, \r\n            red: color.r,\r\n            green: color.g,\r\n            blue: color.b,\r\n        });\r\n    }\r\n    audioAnalysis.segments = null;\r\n    return newSegments\r\n};\r\nconst getPercentiles = async (context, payload) => {\r\n    let ids = Object.keys(context.state.tracks);\r\n    let keys = Object.keys(payload);\r\n    let response = {valence: 0, danceability: 0, energy: 0, banger: 0};\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let lower = 0;\r\n        for (let j = 0; j < ids.length; j++) {\r\n            if (context.state.tracks[ids[j]][keys[i]] <= payload[keys[i]]) {\r\n                lower += 1;\r\n            }\r\n        }\r\n        response[keys[i]] = lower / context.state.progress.total;\r\n    }\r\n    return response;\r\n};\r\n//{h, s, v}\r\nconst HSVtoRGB = async (context, payload) => {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(payload.hue * 6);\r\n    f = payload.hue * 6 - i;\r\n    p = payload.value * (1 - payload.saturation);\r\n    q = payload.value * (1 - f * payload.saturation);\r\n    t = payload.value * (1 - (1 - f) * payload.saturation);\r\n    switch (i % 6) {\r\n        case 0: r = payload.value, g = t, b = p; break;\r\n        case 1: r = q, g = payload.value, b = p; break;\r\n        case 2: r = p, g = payload.value, b = t; break;\r\n        case 3: r = p, g = q, b = payload.value; break;\r\n        case 4: r = t, g = p, b = payload.value; break;\r\n        case 5: r = payload.value, g = p, b = q; break;\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n};\r\nconst artistAnalysis = async (context, payload) => {\r\n    let artist = await context.dispatch(\"getArtist\", payload);\r\n    let artistObject = await context.dispatch(\"processArtist\", artist);\r\n    return artistObject;\r\n};\r\nconst processArtist = async (context, payload) => {\r\n    payload.href = payload.external_urls.spotify;\r\n    delete payload.external_urls;\r\n    payload.followers = payload.followers.total;\r\n    payload.image = payload.images[0].url;\r\n    delete payload.images;\r\n    return payload;\r\n};\r\nconst artistTracks = async (context, payload) => {\r\n    if (!(payload.id in context.state.artists))\r\n        return [];\r\n    let ids = context.state.artists[payload.id].tracks;\r\n    let tracks = [];\r\n    for (let i = 0; i < ids.length; i++) {\r\n        tracks.push(context.state.tracks[ids[i]]);\r\n    }\r\n    return tracks;\r\n};\r\nconst artistTimeline = async (context, payload) => {\r\n    if (!(payload.id in context.state.artists))\r\n        return {timeline: [], oldest: [], newest: []};\r\n    let artistObject = payload;\r\n    let timeline = [];\r\n    let tracks = [];\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    const MONTH = 2626560000;\r\n    let artistSaved = context.state.artists[artistObject.id];\r\n    for (let i = 0; i < artistSaved.tracks.length; i++) {\r\n        let date = new Date(context.state.tracks[artistSaved.tracks[i]].date);\r\n        let dateTime = date.getTime();\r\n        let diff = nowTime - dateTime;\r\n        let diffMonth = Math.floor(diff / MONTH);\r\n        tracks.push({id: artistSaved.tracks[i], time: dateTime, month: diffMonth});\r\n        if (diffMonth >= timeline.length) {\r\n            while (diffMonth >= timeline.length) {\r\n                timeline.push(0);\r\n            }\r\n        }\r\n        timeline[diffMonth] += 1;\r\n    }\r\n    tracks.sort((a, b) => (a.time > b.time) ? 1 : -1);\r\n    let oldest = tracks.slice(0, 3);\r\n    let newest = tracks.slice(tracks.length - 3, tracks.length);\r\n    while (timeline.length < context.state.dateAdded.length) {\r\n        timeline.push(0);\r\n    }\r\n    return {timeline: timeline, oldest: oldest, newest: newest};\r\n};\r\nconst artistTopTracks = async (context, id) => {\r\n    let tracks = await context.dispatch('getArtistTopTracks', id);\r\n    let ids = [];\r\n    for (let i = 0; i < tracks.length; i++) {\r\n        delete tracks[i].album.album_type;\r\n        delete tracks[i].album.artists;\r\n        delete tracks[i].album.available_markets;\r\n        delete tracks[i].album.available_markets;\r\n        tracks[i].album.href = tracks[i].album.external_urls.spotify;\r\n        delete tracks[i].album.type;\r\n        delete tracks[i].album.uri;\r\n        delete tracks[i].available_markets;\r\n        delete tracks[i].disc_number;\r\n        delete tracks[i].external_ids;\r\n        tracks[i].href = tracks[i].external_urls.spotify;\r\n        delete tracks[i].external_urls;\r\n        delete tracks[i].type;\r\n        delete tracks[i].uri;\r\n        if (tracks[i].album.images.length > 1)\r\n            tracks[i].image = tracks[i].album.images[0].url;\r\n        ids.push(tracks[i].id);\r\n    }\r\n    let audioFeatures = await context.dispatch('getAudioFeaturesForTracks', ids);\r\n\r\n    for (let i = 0; i < tracks.length; i++) {\r\n        tracks[i].valence = audioFeatures[i].valence;\r\n        tracks[i].energy = audioFeatures[i].energy;\r\n        tracks[i].danceability = audioFeatures[i].danceability;\r\n    }\r\n\r\n    return tracks;\r\n};\r\n////////////////////////////////////////////////////////////////\r\n// SOCIAL //////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////\r\n// API CALLS ///////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopArtists = async (context, payload) => {\r\n    try { \r\n        let response = await context.state.spotifyApi.getMyTopArtists({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    } \r\n};\r\n// {limit: Number 1-50, time_range: \"long_term\" Several years, \"medium_term\" 6 Months, \"short_term\" 4 Weeks, offset: Index of first entry to return}\r\nconst getTopTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyTopTracks({limit: payload.limit, time_range: payload.time_range});\r\n        return response.items;\r\n    } catch (error) {\r\n        return;\r\n    }  \r\n};\r\n// {limit: Number 1-50, after: Unix timestamp Milliseconds, before: Unix timestamp Milliseconds\r\nconst getRecentlyPlayed = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMyRecentlyPlayedTracks({limit: payload.limit});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\nconst getTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTrack(track_id);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\nconst getTracks = async (context, track_ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getTracks(track_ids);\r\n      return response;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// {artistId: String}\r\nconst getArtist = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtist(id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n}; \r\n// []\r\nconst getArtists = async (context, ids) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getArtists(ids);\r\n      return response.artists;\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\n// Array IDs\r\nconst getAudioFeaturesForTracks = async (context, track_ids) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioFeaturesForTracks(track_ids);\r\n        return response.audio_features;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\nconst getAudioFeaturesForTrack = async (context, track_id) => {\r\n  try {\r\n      let response = await context.state.spotifyApi.getAudioFeaturesForTracks([track_id]);\r\n      return response.audio_features[0];\r\n  } catch (error) {\r\n      return;\r\n  }\r\n};\r\nconst getAudioAnalysisForTrack = async (context, track_id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getAudioAnalysisForTrack(track_id);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {seed_tracks: [track_id], target_dancebility: NUM, limit: 6, max_* min_*}\r\nconst getRecomendations = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getRecommendations(payload);\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// {limit: 1-50, offset: first index}\r\nconst getSavedTracks = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getMySavedTracks({limit: payload.limit, offset: payload.offset});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// None\r\nconst getUser = async (context) => {\r\n    try {\r\n      if (context.state.inicialized)\r\n      {\r\n        let response = await context.state.spotifyApi.getMe();\r\n        await context.commit('setUserData', response);\r\n      }\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n// Array IDs\r\nconst searchSpotify = async (context, payload) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.search(payload.query, ['track'], {limit: 25});\r\n        return response;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\nconst getArtistTopTracks = async (context, id) => {\r\n    try {\r\n        let response = await context.state.spotifyApi.getArtistTopTracks(id, \"US\", {});\r\n        return response.tracks;\r\n    } catch (error) {\r\n        return;\r\n    }\r\n};\r\n\r\n  \r\nexport default {\r\n    inicializeGetToken,\r\n    inicializeParseToken,\r\n    inicializeSetToken,\r\n\r\n    loadLibrary,\r\n    retrieveSavedTracks,\r\n    processTracks,\r\n    inicialScanReduceIds,\r\n    findAndStoreArtists,\r\n    distributeTrackAudioFeatures,\r\n    calcTracksPerGenre,\r\n    calcExtremes,\r\n    retrieveTopPlayed,\r\n    retrieveTopPlayedArtists,\r\n    retrieveTopPlayedTracks,\r\n\r\n    saveLibrary,\r\n    convertTracks,\r\n    gatherMostPlayedTracks,\r\n    gatherExtremes,\r\n    compressTrack,\r\n    convertArtists,\r\n    gatherMostPlayedArtists,\r\n    gatherMostSavedArtists,\r\n    compressArtist,\r\n    convertGenres,\r\n\r\n    songAnalysis,\r\n    songAnalysisFeatures,\r\n    cleanAudioAnalysis,\r\n    getPercentiles,\r\n    HSVtoRGB,\r\n\r\n    artistAnalysis,\r\n    processArtist,\r\n    artistTracks,\r\n    artistTimeline,\r\n    artistTopTracks,\r\n\r\n    bangerCalc,\r\n\r\n    getTopArtists,\r\n    getTopTracks,\r\n    getRecentlyPlayed,\r\n    getTrack,\r\n    getTracks,\r\n    getArtist,\r\n    getArtists,\r\n    getAudioFeaturesForTracks,\r\n    getAudioFeaturesForTrack,\r\n    getAudioAnalysisForTrack,\r\n    getRecomendations,\r\n    getSavedTracks,\r\n    getUser,\r\n    getArtistTopTracks,\r\n    searchSpotify\r\n};"]}]}