{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\src\\views\\Analysis\\ArtistAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\src\\views\\Analysis\\ArtistAnalysis.vue","mtime":1572983813318},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\my-music-taste\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ArtistAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"main-flex\" class=\"artistanalysis\">\r\n    <NavBar/>    \r\n    <div id=\"main\">\r\n      <GoBackSearch/>\r\n      <div class=\"windows\">\r\n\r\n        <div class=\"window\" :style=\"{'--delay': 0}\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" :style=\"{backgroundImage: 'url(\\'' + artistData.image + '\\')'}\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">{{artistData.name}}</h1>\r\n                <h2>{{Math.round(artistData.popularity)}} / 100 Popularity</h2>\r\n                <h2>{{formatNumber(artistData.followers)}} Followers</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': 1}\" v-if=\"progress.tracksLoaded\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" class=\"library\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">Liked Songs:</h1>\r\n                <h2 v-if=\"timelineReady && !noneTimeline\">First Liked: {{oldestLiked}}</h2>\r\n                <h2 v-if=\"progress.tracksLoaded && !noneTimeline\">{{songsSaved}}</h2>\r\n                <h2 v-if=\"!progress.tracksLoaded\">Finding Saved Songs...</h2>\r\n                <h4 id=\"nosongs\" v-if=\"noneTimeline\">No Songs Liked</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n\r\n        \r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 3}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Top Track's Characteristics:</h3>\r\n          <div v-if=\"topTracksReady\">\r\n            <div>\r\n              <PercentBar title=\"Happiness\" :percent=\"sumTop('valence')\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"sumTop('energy')\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"sumTop('danceability')\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <Spotlight :delay=\"2\" :numOff=\"true\" :override=\"artistData != null\" title=\"Artist Genres:\" :list=\"genresComputed\" image=\"\"/>\r\n\r\n        <FeaturedTracks :style=\"{'--delay': + 4}\" class=\"featuredtracks\" :saved=\"false\" :none=\"false\" :override=\"topTracksReady\" title=\"Artist Top Tracks:\" :ids=\"topTracks\"/>\r\n\r\n        <Timeline :none=\"noneTimeline\" :small=\"true\" :override=\"timelineReady\" title=\"When You Liked Tracks:\" instructions=\"\" :max=\"-1\" :delay=\"5\" :bars=\"datesAdded\" y_axis=\"Number of Songs\" :color=\"{red: 74, green: 189, blue: 180}\"/>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 6}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Liked Track's Characteristics:</h3>\r\n          <div v-if=\"audioFeaturesReady\">\r\n            <div v-if=\"!none\">\r\n              <PercentBar title=\"Happiness\" :percent=\"artistData.valence\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"artistData.energy\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"artistData.danceability\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n            <h4 v-else>No Songs Liked</h4>\r\n          </div>\r\n          <Loading class=\"displace\" v-else/>\r\n        </div>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Happiness:\" :delay=\"7\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.valence)\" max_tag=\"Happy\" min_tag=\"Sad\" y_axis=\"Number of Songs\" :color=\"audioFeatures.valence.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Energy:\" :delay=\"8\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.energy)\" max_tag=\"Hyper\" min_tag=\"Peaceful\" y_axis=\"Number of Songs\" :color=\"audioFeatures.energy.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Danceability:\" :delay=\"9\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.danceability)\" max_tag=\"Let's dance!\" min_tag=\"Couch Potato\" y_axis=\"Number of Songs\" :color=\"audioFeatures.danceability.color\"/>\r\n\r\n        <FeaturedTracks :style=\"{'--delay': + 10}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"First Liked Tracks:\" :ids=\"oldestTracks\"/>\r\n\r\n        <FeaturedTracks :style=\"{'--delay': + 11}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"Recently Liked Tracks:\" :ids=\"newestTracks\"/>\r\n        \r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport NavBar from '@/components/General/NavBar.vue'\r\nimport Loading from '@/components/General/Loading.vue'\r\nimport GoBackSearch from '@/components/Library/GoBackSearch.vue'\r\nimport Timeline from '@/components/Analysis/Timeline.vue'\r\nimport FeaturedTracks from '@/components/Analysis/FeaturedTracks.vue'\r\nimport PercentBar from '@/components/Analysis/PercentBar.vue'\r\nimport Spotlight from '@/components/Library/Spotlight.vue'\r\nimport Graph from '@/components/Analysis/Graph.vue'\r\n\r\nexport default {\r\n  name: 'artistanalysis',\r\n  components: {\r\n      NavBar,\r\n      Loading,\r\n      GoBackSearch,\r\n      Timeline,\r\n      FeaturedTracks,\r\n      PercentBar,\r\n      Spotlight,\r\n      Graph\r\n  },\r\n  data() {\r\n      return {\r\n        artistData: null,\r\n        libraryLoaded: false,\r\n        interval: null,\r\n        timelineReady: false,\r\n        audioFeaturesReady: false,\r\n        topTracksReady: false,\r\n        audioFeaturesGraphs: {\r\n          valence: [0,0,0,0,0,0,0,0,0,0],\r\n          energy: [0,0,0,0,0,0,0,0,0,0],\r\n          danceability: [0,0,0,0,0,0,0,0,0,0],\r\n        }\r\n      }\r\n  },\r\n  methods: {\r\n    cleanGraphDataForwards(bars) {\r\n      let graphData = [];\r\n      for (let i = 0; i < bars.length; i++) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    formatNumber(num) {\r\n      let millions = Math.floor(num / 1000000);\r\n      let thousands = Math.floor(num / 1000) % 1000;\r\n      let remainder = num % 1000;\r\n      let zeros = \"\";\r\n      let zeros2 = \"\";\r\n      if (thousands < 100)\r\n          zeros2 += \"0\"\r\n      if (thousands < 10)\r\n          zeros2 += \"0\"\r\n      if (remainder < 100)\r\n          zeros += \"0\"\r\n      if (remainder < 10)\r\n          zeros += \"0\"\r\n      if (millions > 0)\r\n        return millions + \",\" + zeros2 + thousands + \",\" + zeros + remainder;\r\n      if (thousands > 0) \r\n          return thousands + \",\" + zeros + remainder;\r\n      return remainder;\r\n    },\r\n    async checkTracksLoaded() {\r\n      if (this.progress.tracksLoaded) {\r\n        let response = await this.$store.dispatch('artistTracks', this.artistData);\r\n        this.artistData.tracks = response;\r\n        this.processTracks();\r\n        response = await this.$store.dispatch('artistTimeline', this.artistData);\r\n        this.artistData.timeline = response.timeline;\r\n        this.artistData.oldest = response.oldest;\r\n        this.artistData.newest = response.newest;\r\n        clearInterval(this.interval);\r\n        this.timelineReady = true;\r\n      }\r\n    },\r\n    sumTop(type) {\r\n      let sum = 0;\r\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\r\n        sum += this.artistData.topSongs[i][type];\r\n      }\r\n      return sum / this.artistData.topSongs.length;\r\n    },\r\n    cleanGraphData(bars) {\r\n      let graphData = [];\r\n      for (let i = bars.length - 1; i >= 0; i--) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    reverse(arr) {\r\n      let newArr = [];\r\n      for (let i = arr.length - 1; i >= 0; i--) {\r\n        newArr.push(arr[i]);\r\n      }\r\n      return newArr;\r\n    },\r\n    processTracks() {\r\n      let averages = {valence: 0, danceability: 0, energy: 0};\r\n      let keys = Object.keys(averages);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (this.artistData.tracks.length == 0)\r\n          break;\r\n        for (let j = 0; j < this.artistData.tracks.length; j++) {\r\n          averages[keys[i]] += this.artistData.tracks[j][keys[i]];\r\n          this.audioFeaturesGraphs[keys[i]][Math.floor(this.artistData.tracks[j][keys[i]] * 10)] += 1;\r\n        }\r\n        this.artistData[keys[i]] = averages[keys[i]] / this.artistData.tracks.length;\r\n      }\r\n      this.audioFeaturesReady = true;\r\n    },\r\n    async getTopSongs() {\r\n      this.artistData.topSongs = await this.$store.dispatch('artistTopTracks', this.artistData.id);\r\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\r\n        try {\r\n          this.artistData.topSongs[i].image = this.artistData.topSongs[i].album.images[0].url;\r\n        } catch(error) {\r\n          this.artistData.topSongs[i].image = \"\";\r\n        }\r\n      }\r\n      this.topTracksReady = true;\r\n    },\r\n  },\r\n  computed: {\r\n    topTracks() {\r\n      if (this.topTracksReady) {\r\n        return this.artistData.topSongs.slice(0, 3);\r\n      }\r\n      return [];\r\n    },\r\n    oldestLiked() {\r\n      let month = this.oldestTracks[0].month;\r\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n      let now = new Date();\r\n      let nowMonth = now.getMonth();\r\n      let year = 0;\r\n      nowMonth -= month;\r\n      nowMonth -= 1;\r\n      while (nowMonth < 0) {\r\n          year += 1;\r\n          nowMonth = 12 + nowMonth;\r\n      } \r\n      let returnYear = (now.getFullYear() - year);\r\n      return months[nowMonth] + \", \" + returnYear;\r\n    },\r\n    inicialized() {\r\n      return this.$store.state.inicialized;\r\n    },\r\n    progress() {\r\n      return this.$store.state.progress;\r\n    },\r\n    notSaved() {\r\n      if (!this.progress.tracksLoaded)\r\n        return false;\r\n      if (!(this.artistData.id in this.$store.state.artists))\r\n        return true;\r\n      return this.$store.state.artists[this.artistData.id].tracks.length == 0;\r\n    },\r\n    songsSaved() {\r\n      if (this.artistData.id in this.$store.state.artists) {\r\n        return this.$store.state.artists[this.artistData.id].tracks.length + \" Songs Liked\";\r\n      }\r\n      return \"\";\r\n    },\r\n    datesAdded() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.cleanGraphData(this.artistData.timeline);\r\n    },\r\n    oldestTracks() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.artistData.oldest;\r\n    },\r\n    newestTracks() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.reverse(this.artistData.newest);\r\n    },\r\n    audioFeatures() {\r\n      return this.$store.state.audioFeatures;\r\n    },\r\n    none() {\r\n      if (this.audioFeaturesReady) {\r\n        if (this.artistData.tracks.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    noneTimeline() {\r\n      if (this.timelineReady) {\r\n        if (this.artistData.timeline.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    genresComputed() {\r\n      if (this.artistData != null)\r\n        return this.artistData.genres.slice(0, 4);\r\n      return [];\r\n    },\r\n  },  \r\n  async created() {\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'auto'\r\n    });\r\n    if (!this.inicialized)\r\n      this.$router.push(\"/login\");\r\n    this.artistData = await this.$store.dispatch('artistAnalysis', this.$route.params.id);\r\n    this.getTopSongs();\r\n    if (this.progress.tracksLoaded) {\r\n      let response = await this.$store.dispatch('artistTracks', this.artistData);\r\n      this.artistData.tracks = response;\r\n      this.processTracks();\r\n      response = await this.$store.dispatch('artistTimeline', this.artistData);\r\n      this.artistData.timeline = response.timeline;\r\n      this.artistData.oldest = response.oldest;\r\n      this.artistData.newest = response.newest;\r\n      this.timelineReady = true;\r\n    }\r\n    else {\r\n      this.interval = setInterval(this.checkTracksLoaded, 2000);\r\n    }  \r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.displace {\r\n  transform: translateY(-25px);\r\n}\r\n\r\n\r\n.featuredtracks {\r\n  --delay: 0;\r\n  animation: slide-up .5s ease calc(var(--delay) * .1s), hide calc(var(--delay) * .1s);\r\n}\r\n.library {\r\n  background-image: url('../../assets/icons/library.svg');\r\n}\r\n#nosongs {\r\n  margin-bottom: 10px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n.nomargin {\r\n  margin-bottom: 0px;\r\n}\r\n.windows {\r\n  align-items: top !important;\r\n}\r\n\r\n.window {\r\n  margin: 25px 25px;\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  #artist-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .fit {\r\n    width: calc(100% - 90px) !important;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  .windows {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  #track-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 1.2em !important;\r\n    \r\n  }\r\n\r\n  h2 {\r\n      font-size: .8em !important;\r\n      margin: 2px !important;\r\n  }\r\n\r\n  h4 {\r\n    font-size: .9em !important;\r\n  }\r\n\r\n  .window {\r\n      margin: 18px 18px !important;\r\n  }\r\n}\r\n\r\nh4 {\r\n  margin-bottom: 0px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n\r\n#artist-image {\r\n  display: block;\r\n  width: 100px;\r\n  height: 100px;\r\n  background-size: auto 100%;\r\n  background-position: center center;\r\n  margin-right: 20px;\r\n}\r\n\r\n\r\nh1 {\r\n  font-size: 1.7em;\r\n  \r\n  display: block;\r\n  color: white;\r\n  text-align: left;\r\n  margin: 0px 0px;\r\n  line-height: 30px;\r\n  display: block;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  margin-top: 3px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1em;\r\n  color: rgba(255, 255, 255, 0.568);\r\n  text-align: left;\r\n  margin: 0;\r\n  margin-top: 10px;\r\n  max-width: calc(100% - 5px);\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.fit {\r\n  display: block;\r\n  width: calc(100% - 120px);\r\n}\r\n\r\n.flex {\r\n  width: 100%;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/views/Analysis"}]}