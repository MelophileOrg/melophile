{"remainingRequest":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\src\\views\\Analysis\\ArtistAnalysis.vue?vue&type=style&index=0&id=29c7b6ac&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\src\\views\\Analysis\\ArtistAnalysis.vue","mtime":1573118359194},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Documents\\GitHub\\Spotify-Features\\front-end3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KDQouZGlzcGxhY2Ugew0KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTI1cHgpOw0KfQ0KDQoNCi5mZWF0dXJlZHRyYWNrcyB7DQogIC0tZGVsYXk6IDA7DQogIGFuaW1hdGlvbjogc2xpZGUtdXAgLjVzIGVhc2UgY2FsYyh2YXIoLS1kZWxheSkgKiAuMXMpLCBoaWRlIGNhbGModmFyKC0tZGVsYXkpICogLjFzKTsNCn0NCi5saWJyYXJ5IHsNCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaWNvbnMvbGlicmFyeS5zdmcnKTsNCn0NCiNub3NvbmdzIHsNCiAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zMzYpOw0KICBwYWRkaW5nOiAxMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDcsIDcsIDcsIDAuMzM2KTsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCn0NCi5ub21hcmdpbiB7DQogIG1hcmdpbi1ib3R0b206IDBweDsNCn0NCi53aW5kb3dzIHsNCiAgYWxpZ24taXRlbXM6IHRvcCAhaW1wb3J0YW50Ow0KfQ0KDQoud2luZG93IHsNCiAgbWFyZ2luOiAyNXB4IDI1cHg7DQp9DQoNCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcyMHB4KSB7DQogICNhcnRpc3QtaW1hZ2Ugew0KICAgIHdpZHRoOiA3MHB4ICFpbXBvcnRhbnQ7DQogICAgaGVpZ2h0OiA3MHB4ICFpbXBvcnRhbnQ7DQogICAgbWFyZ2luLXJpZ2h0OiAyMHB4Ow0KICB9DQoNCiAgLmZpdCB7DQogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDkwcHgpICFpbXBvcnRhbnQ7DQogIH0NCn0NCg0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzIwcHgpIHsNCiAgLndpbmRvd3Mgew0KICAgIG1hcmdpbi10b3A6IDE1cHg7DQogIH0NCg0KICAjdHJhY2staW1hZ2Ugew0KICAgIHdpZHRoOiA3MHB4ICFpbXBvcnRhbnQ7DQogICAgaGVpZ2h0OiA3MHB4ICFpbXBvcnRhbnQ7DQogICAgbWFyZ2luLXJpZ2h0OiAyMHB4Ow0KICB9DQoNCiAgaDEgew0KICAgIGZvbnQtc2l6ZTogMS4yZW0gIWltcG9ydGFudDsNCiAgICANCiAgfQ0KDQogIGgyIHsNCiAgICAgIGZvbnQtc2l6ZTogLjhlbSAhaW1wb3J0YW50Ow0KICAgICAgbWFyZ2luOiAycHggIWltcG9ydGFudDsNCiAgfQ0KDQogIGg0IHsNCiAgICBmb250LXNpemU6IC45ZW0gIWltcG9ydGFudDsNCiAgfQ0KDQogIC53aW5kb3cgew0KICAgICAgbWFyZ2luOiAxOHB4IDE4cHggIWltcG9ydGFudDsNCiAgfQ0KfQ0KDQpoNCB7DQogIG1hcmdpbi1ib3R0b206IDBweDsNCiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zMzYpOw0KICBwYWRkaW5nOiAxMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDcsIDcsIDcsIDAuMzM2KTsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCn0NCg0KI2FydGlzdC1pbWFnZSB7DQogIGRpc3BsYXk6IGJsb2NrOw0KICB3aWR0aDogMTAwcHg7DQogIGhlaWdodDogMTAwcHg7DQogIGJhY2tncm91bmQtc2l6ZTogYXV0byAxMDAlOw0KICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOw0KICBtYXJnaW4tcmlnaHQ6IDIwcHg7DQp9DQoNCg0KaDEgew0KICBmb250LXNpemU6IDEuN2VtOw0KICANCiAgZGlzcGxheTogYmxvY2s7DQogIGNvbG9yOiB3aGl0ZTsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCiAgbWFyZ2luOiAwcHggMHB4Ow0KICBsaW5lLWhlaWdodDogMzBweDsNCiAgZGlzcGxheTogYmxvY2s7DQogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOw0KICBvdmVyZmxvdzogaGlkZGVuOw0KICB3aGl0ZS1zcGFjZTogbm93cmFwOw0KICBtYXJnaW4tdG9wOiAzcHg7DQp9DQoNCmgyIHsNCiAgZm9udC1zaXplOiAxZW07DQogIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNTY4KTsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCiAgbWFyZ2luOiAwOw0KICBtYXJnaW4tdG9wOiAxMHB4Ow0KICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDVweCk7DQogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOw0KICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCn0NCg0KLmZpdCB7DQogIGRpc3BsYXk6IGJsb2NrOw0KICB3aWR0aDogY2FsYygxMDAlIC0gMTIwcHgpOw0KfQ0KDQouZmxleCB7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQo="},{"version":3,"sources":["ArtistAnalysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuUA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ArtistAnalysis.vue","sourceRoot":"src/views/Analysis","sourcesContent":["<template>\r\n  <div id=\"main-flex\" class=\"artistanalysis\">\r\n    <NavBar/>    \r\n    <div id=\"main\">\r\n      <GoBackSearch/>\r\n      <div class=\"windows\">\r\n\r\n        <div class=\"window\" :style=\"{'--delay': 0}\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" :style=\"{backgroundImage: 'url(\\'' + artistData.image + '\\')'}\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">{{artistData.name}}</h1>\r\n                <h2>{{Math.round(artistData.popularity)}} / 100 Popularity</h2>\r\n                <h2>{{formatNumber(artistData.followers)}} Followers</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': 1}\" v-if=\"progress.tracksLoaded\">\r\n          <div v-if=\"artistData != null\" class=\"flex\">\r\n            <div class=\"flex\">\r\n              <div class=\"col\">\r\n                <div id=\"artist-image\" class=\"library\"/>\r\n              </div>\r\n              <div class=\"col fit\">\r\n                <h1 id=\"artist-name\">Liked Songs:</h1>\r\n                <h2 v-if=\"timelineReady && !noneTimeline\">First Liked: {{oldestLiked}}</h2>\r\n                <h2 v-if=\"progress.tracksLoaded && !noneTimeline\">{{songsSaved}}</h2>\r\n                <h2 v-if=\"!progress.tracksLoaded\">Finding Saved Songs...</h2>\r\n                <h4 id=\"nosongs\" v-if=\"noneTimeline\">No Songs Liked</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n\r\n        \r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 3}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Top Track's Characteristics:</h3>\r\n          <div v-if=\"topTracksReady\">\r\n            <div>\r\n              <PercentBar title=\"Happiness\" :percent=\"sumTop('valence')\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"sumTop('energy')\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"sumTop('danceability')\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n          </div>\r\n          <Loading v-else/>\r\n        </div>\r\n\r\n        <Spotlight :delay=\"2\" :numOff=\"true\" :override=\"artistData != null\" title=\"Artist Genres:\" :list=\"genresComputed\" image=\"\"/>\r\n\r\n        <FeaturedTracks :style=\"{'--delay': + 4}\" class=\"featuredtracks\" :saved=\"false\" :none=\"false\" :override=\"topTracksReady\" title=\"Artist Top Tracks:\" :ids=\"topTracks\"/>\r\n\r\n        <Timeline :none=\"noneTimeline\" :small=\"true\" :override=\"timelineReady\" title=\"When You Liked Tracks:\" instructions=\"\" :max=\"-1\" :delay=\"5\" :bars=\"datesAdded\" y_axis=\"Number of Songs\" :color=\"{red: 74, green: 189, blue: 180}\"/>\r\n\r\n        <div class=\"window\" :style=\"{'--delay': + 6}\">\r\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Liked Track's Characteristics:</h3>\r\n          <div v-if=\"audioFeaturesReady\">\r\n            <div v-if=\"!none\">\r\n              <PercentBar title=\"Happiness\" :percent=\"artistData.valence\" :color=\"audioFeatures.valence.color\" />\r\n              <PercentBar title=\"Energy\" :percent=\"artistData.energy\" :color=\"audioFeatures.energy.color\" />\r\n              <PercentBar title=\"Danceability\" :percent=\"artistData.danceability\" :color=\"audioFeatures.danceability.color\" />\r\n            </div>\r\n            <h4 v-else>No Songs Liked</h4>\r\n          </div>\r\n          <Loading class=\"displace\" v-else/>\r\n        </div>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Happiness:\" :delay=\"7\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.valence)\" max_tag=\"Happy\" min_tag=\"Sad\" y_axis=\"Number of Songs\" :color=\"audioFeatures.valence.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Energy:\" :delay=\"8\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.energy)\" max_tag=\"Hyper\" min_tag=\"Peaceful\" y_axis=\"Number of Songs\" :color=\"audioFeatures.energy.color\"/>\r\n\r\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Danceability:\" :delay=\"9\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.danceability)\" max_tag=\"Let's dance!\" min_tag=\"Couch Potato\" y_axis=\"Number of Songs\" :color=\"audioFeatures.danceability.color\"/>\r\n\r\n        <FeaturedTracks :style=\"{'--delay': + 10}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"First Liked Tracks:\" :ids=\"oldestTracks\"/>\r\n\r\n        <FeaturedTracks :style=\"{'--delay': + 11}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"Recently Liked Tracks:\" :ids=\"newestTracks\"/>\r\n        \r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport NavBar from '@/components/General/NavBar.vue'\r\nimport Loading from '@/components/General/Loading.vue'\r\nimport GoBackSearch from '@/components/Library/GoBackSearch.vue'\r\nimport Timeline from '@/components/Analysis/Timeline.vue'\r\nimport FeaturedTracks from '@/components/Analysis/FeaturedTracks.vue'\r\nimport PercentBar from '@/components/Analysis/PercentBar.vue'\r\nimport Spotlight from '@/components/Library/Spotlight.vue'\r\nimport Graph from '@/components/Analysis/Graph.vue'\r\n\r\nexport default {\r\n  name: 'artistanalysis',\r\n  components: {\r\n      NavBar,\r\n      Loading,\r\n      GoBackSearch,\r\n      Timeline,\r\n      FeaturedTracks,\r\n      PercentBar,\r\n      Spotlight,\r\n      Graph\r\n  },\r\n  data() {\r\n      return {\r\n        artistData: null,\r\n        libraryLoaded: false,\r\n        interval: null,\r\n        timelineReady: false,\r\n        audioFeaturesReady: false,\r\n        topTracksReady: false,\r\n        audioFeaturesGraphs: {\r\n          valence: [0,0,0,0,0,0,0,0,0,0],\r\n          energy: [0,0,0,0,0,0,0,0,0,0],\r\n          danceability: [0,0,0,0,0,0,0,0,0,0],\r\n        }\r\n      }\r\n  },\r\n  methods: {\r\n    cleanGraphDataForwards(bars) {\r\n      let graphData = [];\r\n      for (let i = 0; i < bars.length; i++) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    formatNumber(num) {\r\n      let millions = Math.floor(num / 1000000);\r\n      let thousands = Math.floor(num / 1000) % 1000;\r\n      let remainder = num % 1000;\r\n      let zeros = \"\";\r\n      let zeros2 = \"\";\r\n      if (thousands < 100)\r\n          zeros2 += \"0\"\r\n      if (thousands < 10)\r\n          zeros2 += \"0\"\r\n      if (remainder < 100)\r\n          zeros += \"0\"\r\n      if (remainder < 10)\r\n          zeros += \"0\"\r\n      if (millions > 0)\r\n        return millions + \",\" + zeros2 + thousands + \",\" + zeros + remainder;\r\n      if (thousands > 0) \r\n          return thousands + \",\" + zeros + remainder;\r\n      return remainder;\r\n    },\r\n    async checkTracksLoaded() {\r\n      if (this.progress.tracksLoaded) {\r\n        let response = await this.$store.dispatch('artistTracks', this.artistData);\r\n        this.artistData.tracks = response;\r\n        this.processTracks();\r\n        response = await this.$store.dispatch('artistTimeline', this.artistData);\r\n        this.artistData.timeline = response.timeline;\r\n        this.artistData.oldest = response.oldest;\r\n        this.artistData.newest = response.newest;\r\n        clearInterval(this.interval);\r\n        this.timelineReady = true;\r\n      }\r\n    },\r\n    sumTop(type) {\r\n      let sum = 0;\r\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\r\n        sum += this.artistData.topSongs[i][type];\r\n      }\r\n      return sum / this.artistData.topSongs.length;\r\n    },\r\n    cleanGraphData(bars) {\r\n      let graphData = [];\r\n      for (let i = bars.length - 1; i >= 0; i--) {\r\n        graphData.push({value: bars[i], tag: bars[i]});\r\n      }\r\n      return graphData;\r\n    },\r\n    reverse(arr) {\r\n      let newArr = [];\r\n      for (let i = arr.length - 1; i >= 0; i--) {\r\n        newArr.push(arr[i]);\r\n      }\r\n      return newArr;\r\n    },\r\n    processTracks() {\r\n      let averages = {valence: 0, danceability: 0, energy: 0};\r\n      let keys = Object.keys(averages);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (this.artistData.tracks.length == 0)\r\n          break;\r\n        for (let j = 0; j < this.artistData.tracks.length; j++) {\r\n          averages[keys[i]] += this.artistData.tracks[j][keys[i]];\r\n          this.audioFeaturesGraphs[keys[i]][Math.floor(this.artistData.tracks[j][keys[i]] * 10)] += 1;\r\n        }\r\n        this.artistData[keys[i]] = averages[keys[i]] / this.artistData.tracks.length;\r\n      }\r\n      this.audioFeaturesReady = true;\r\n    },\r\n    async getTopSongs() {\r\n      this.artistData.topSongs = await this.$store.dispatch('artistTopTracks', this.$route.params.id);\r\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\r\n        try {\r\n          this.artistData.topSongs[i].image = this.artistData.topSongs[i].album.images[0].url;\r\n        } catch(error) {\r\n          this.artistData.topSongs[i].image = \"\";\r\n        }\r\n      }\r\n      this.topTracksReady = true;\r\n    },\r\n  },\r\n  computed: {\r\n    topTracks() {\r\n      if (this.topTracksReady) {\r\n        return this.artistData.topSongs.slice(0, 3);\r\n      }\r\n      return [];\r\n    },\r\n    oldestLiked() {\r\n      let month = this.oldestTracks[0].month;\r\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n      let now = new Date();\r\n      let nowMonth = now.getMonth();\r\n      let year = 0;\r\n      nowMonth -= month;\r\n      nowMonth -= 1;\r\n      while (nowMonth < 0) {\r\n          year += 1;\r\n          nowMonth = 12 + nowMonth;\r\n      } \r\n      let returnYear = (now.getFullYear() - year);\r\n      return months[nowMonth] + \", \" + returnYear;\r\n    },\r\n    inicialized() {\r\n      return this.$store.state.inicialized;\r\n    },\r\n    progress() {\r\n      return this.$store.state.progress;\r\n    },\r\n    notSaved() {\r\n      if (!this.progress.tracksLoaded)\r\n        return false;\r\n      if (!(this.$route.params.id in this.$store.state.artists))\r\n        return true;\r\n      return this.$store.state.artists[this.$route.params.id].tracks.length == 0;\r\n    },\r\n    songsSaved() {\r\n      if (this.$route.params.id in this.$store.state.artists) {\r\n        return this.$store.state.artists[this.$route.params.id].tracks.length + \" Songs Liked\";\r\n      }\r\n      return \"\";\r\n    },\r\n    datesAdded() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.cleanGraphData(this.artistData.timeline);\r\n    },\r\n    oldestTracks() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.artistData.oldest;\r\n    },\r\n    newestTracks() {\r\n      if (!this.timelineReady)\r\n        return [];\r\n      return this.reverse(this.artistData.newest);\r\n    },\r\n    audioFeatures() {\r\n      return this.$store.state.audioFeatures;\r\n    },\r\n    none() {\r\n      if (this.audioFeaturesReady) {\r\n        if (this.artistData.tracks.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    noneTimeline() {\r\n      if (this.timelineReady) {\r\n        if (this.artistData.timeline.length == 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    genresComputed() {\r\n      if (this.artistData != null)\r\n        return this.artistData.genres.slice(0, 4);\r\n      return [];\r\n    },\r\n  },  \r\n  async created() {\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'auto'\r\n    });\r\n    if (!this.inicialized)\r\n      this.$router.push(\"/login\");\r\n    this.artistData = await this.$store.dispatch('artistAnalysis', this.$route.params.id);\r\n    this.getTopSongs();\r\n    if (this.progress.tracksLoaded) {\r\n      let response = await this.$store.dispatch('artistTracks', this.artistData);\r\n      this.artistData.tracks = response;\r\n      this.processTracks();\r\n      response = await this.$store.dispatch('artistTimeline', this.artistData);\r\n      this.artistData.timeline = response.timeline;\r\n      this.artistData.oldest = response.oldest;\r\n      this.artistData.newest = response.newest;\r\n      this.timelineReady = true;\r\n    }\r\n    else {\r\n      this.interval = setInterval(this.checkTracksLoaded, 2000);\r\n    }  \r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.displace {\r\n  transform: translateY(-25px);\r\n}\r\n\r\n\r\n.featuredtracks {\r\n  --delay: 0;\r\n  animation: slide-up .5s ease calc(var(--delay) * .1s), hide calc(var(--delay) * .1s);\r\n}\r\n.library {\r\n  background-image: url('../../assets/icons/library.svg');\r\n}\r\n#nosongs {\r\n  margin-bottom: 10px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n.nomargin {\r\n  margin-bottom: 0px;\r\n}\r\n.windows {\r\n  align-items: top !important;\r\n}\r\n\r\n.window {\r\n  margin: 25px 25px;\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  #artist-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .fit {\r\n    width: calc(100% - 90px) !important;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 720px) {\r\n  .windows {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  #track-image {\r\n    width: 70px !important;\r\n    height: 70px !important;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 1.2em !important;\r\n    \r\n  }\r\n\r\n  h2 {\r\n      font-size: .8em !important;\r\n      margin: 2px !important;\r\n  }\r\n\r\n  h4 {\r\n    font-size: .9em !important;\r\n  }\r\n\r\n  .window {\r\n      margin: 18px 18px !important;\r\n  }\r\n}\r\n\r\nh4 {\r\n  margin-bottom: 0px;\r\n  color: rgba(255, 255, 255, 0.336);\r\n  padding: 10px;\r\n  background-color: rgba(7, 7, 7, 0.336);\r\n  border-radius: 10px;\r\n}\r\n\r\n#artist-image {\r\n  display: block;\r\n  width: 100px;\r\n  height: 100px;\r\n  background-size: auto 100%;\r\n  background-position: center center;\r\n  margin-right: 20px;\r\n}\r\n\r\n\r\nh1 {\r\n  font-size: 1.7em;\r\n  \r\n  display: block;\r\n  color: white;\r\n  text-align: left;\r\n  margin: 0px 0px;\r\n  line-height: 30px;\r\n  display: block;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  margin-top: 3px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1em;\r\n  color: rgba(255, 255, 255, 0.568);\r\n  text-align: left;\r\n  margin: 0;\r\n  margin-top: 10px;\r\n  max-width: calc(100% - 5px);\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.fit {\r\n  display: block;\r\n  width: calc(100% - 120px);\r\n}\r\n\r\n.flex {\r\n  width: 100%;\r\n}\r\n\r\n</style>"]}]}