{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/src/components/TrackAnalysis.vue?vue&type=style&index=0&id=577a15c7&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/src/components/TrackAnalysis.vue","mtime":1571842688668},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#instructions {\n    --delay: 0;\n    animation: slide-up .5s ease calc(var(--delay) * .1s), peekaboo calc(var(--delay) * .1s);\n    display: block;\n    width: 400px;\n    height: 80px;\n    padding-top: 68px;\n    text-overflow: clip;\n    line-height: 40px;\n    color: rgba(255, 255, 255, 0.219);\n    text-align: center;\n    overflow: hidden;\n    white-space:normal;\n}\n.loading {\n  margin-top: 30px;\n}\n\n.graph-key {\n    position: absolute;\n    width: calc(100% - 40px);\n    bottom: 10px;\n    text-align: center;\n    font-size: .8em;\n    color:rgba(255, 255, 255, 0.267);\n}\n#banger-conclusion {\n    margin: 0 auto;\n    text-align: center;\n    color: rgb(252, 140, 142);\n    font-size: 3em;\n}\n#track-image {\n    display: block;\n    width: 100px;\n    height: 100px;\n    background-size: 100% auto;\n    background-position: center center;\n    margin-right: 20px;\n}\n\n@keyframes slide-up {\n  from {\n    transform: translateY(100px);\n    opacity: 0;\n  }\n}\n\n.nomargin {\n    margin: 0 !important;\n}\n\n.graph {\n    --numBars: 0;\n    display: flex;\n    flex-wrap: nowrap;\n    width: 400px;\n    height: 187px;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.graph-bar {\n    --height: 0;\n    --red: 240;\n    --green: 193;\n    --blue: 111;\n    display: block;\n    width: calc((100% / var(--numBars)) - 1px);\n    height: calc(125px * var(--height));\n    background-color: rgba(var(--red), var(--green), var(--blue), .9);\n    border-radius: 3px;\n    position: relative;\n}\n\n.graph-bar p {\n    display: none;\n    position: absolute;\n    font-size: 1em;\n    color: white;\n    text-align: center;\n    top: calc(((125px * var(--height)) / 2) + -80px);\n    transform: translateX(-15px);\n}\n\n.graph-bar:hover p {\n    display: block;\n}\n.fit {\n    width: calc(100% - 120px);\n}\n\n\n#analysis {\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n    width: calc(100% - 64px);\n    margin: 32px;\n    animation: slide-up .5s ease;\n}\n\nh1 {\n    font-size: 1.4em;\n    color: white;\n    text-align: left;\n    margin: 0px 0px;\n    line-height: 30px;\n    display: block;\n    max-width: calc(100% - 5px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n}\n\nh2 {\n    font-size: 1em;\n    color: rgba(255, 255, 255, 0.568);\n    text-align: left;\n    margin: 0;\n    margin-top: 10px;\n    max-width: calc(100% - 5px);\n    text-transform: capitalize;\n        text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n}\n\n#artists {\n    display: flex;\n    max-width: calc(100% - 5px);\n    overflow: hidden;\n}\n\n#artists h3 {\n    font-size: 1em;\n    color: rgba(255, 255, 255, 0.927);\n    text-align: left;\n    margin: 0px 0px;\n    margin-right: 5px;\n    margin-top: 10px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n}\n\n.window h3 {\n  text-align: left;\n  animation: none;\n  font-size: 1.6em;\n  margin: 0;\n  color: white;\n  margin-bottom: 15px;\n}\n\nh4 {\n  color: white;\n  display: flex;\n  align-items: center;\n  margin: 0;\n  text-align: left;\n}\n\np {\n    margin: 0;\n    color: white;\n    text-align: left;\n}\n\n.window {\n  --delay: 0;\n  animation: slide-up .5s ease calc(var(--delay) * .1s), peekaboo calc(var(--delay) * .1s);\n  display: inline-block;\n  position: relative;\n  width: 75%;\n  margin: 20px 20px;\n  padding: 20px;\n  max-width: 400px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.247);\n}\n\n\n\n.flex {\n    display: flex;\n}\n\n.bar-title {\n  width: 115px;\n}\n\n.stat-bar {\n    display: flex;\n    border-radius: 5px;\n    overflow: hidden;\n    width: 200px;\n    max-height: 10px;\n    background-color: rgba(255, 255, 255, 0.247);\n}\n\n.stat-bar .fill {\n    --percent: 0;\n    --red: 255;\n    --green: 255;\n    --blue: 255;\n    display: block;\n    width: calc(var(--percent) * 100%);\n    height: 10px;\n    background: rgb(var(--red), var(--green), var(--blue));\n    animation: slow-fill 1s ease;\n}\n\n.stat-bar .fill.excess {\n    border-left: 2px solid rgb(37, 37, 37);\n    background: rgba(var(--red), var(--green), var(--blue), .5);\n    width: calc((var(--percent) * 100%) - 2px);\n    animation: border-throb 1s ease-in-out infinite;\n}\n\n@keyframes border-throb {\n    50% {\n        border-left: 2px solid rgb(255, 255, 255);\n    }\n}\n\n\n.stat {\n  margin-bottom: 15px;\n  justify-content: space-between;\n}\n\n@keyframes slow-fill {\n  from {\n    width: calc(var(--percent) * 0%);\n  }\n}\n\n.row {\n  display: flex;\n  align-items: center;\n}\n",{"version":3,"sources":["TrackAnalysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"TrackAnalysis.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"TrackAnalysis\">\n\n        <div id=\"analysis\">\n            <div id=\"song\" class=\"window flex\" :style=\"{'--delay': 0}\">\n                <div class=\"col\">\n                    <div id=\"track-image\" :style=\"{backgroundImage: 'url(\\'' + trackData.album.images[0].url + '\\')'}\"/>\n                </div>\n                <div class=\"col fit\">\n                    <h1>{{trackData.name}}</h1>\n                    <div id=\"artists\">\n                        <h3 v-for=\"artist in trackData.artists\" :key=\"artist.name\">{{artist.name}}</h3>\n                    </div>\n                    <h2>{{trackData.album.name}}</h2>\n                </div>\n            </div>\n            <div id=\"artist\" class=\"window\" :style=\"{'--delay': 1}\">\n                <div v-if=\"artistDone\" class=\"flex\">\n                    <div class=\"col\">\n                        <div id=\"track-image\" :style=\"{backgroundImage: 'url(\\'' + artist.images[0].url + '\\')'}\"/>\n                    </div>\n                    <div class=\"col fit\">\n                        <h1>{{artist.name}}</h1>\n                        <h2>{{artist.followers.total}} Followers</h2>\n                        <h2 v-if=\"libraryData != null\">{{findArtistSongsSaved(artist.name)}} Songs Saved</h2>\n                        <h2>{{artist.genres[0]}}</h2>\n                    </div>\n                </div>\n            </div>\n\n            <div id=\"characteristics\" class=\"window\" :style=\"{'--delay': 2}\">\n                <h3>Song Characteristics</h3>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Happiness</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + trackData.audioFeatures.valence, '--red': + barColors[0].red, '--green': + barColors[0].green, '--blue': + barColors[0].blue}\"/>\n                    </div>\n                    <h4 class=\"value\">{{percent(trackData.audioFeatures.valence)}}</h4>\n                </div>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Energy</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + trackData.audioFeatures.energy, '--red': + barColors[1].red, '--green': + barColors[1].green, '--blue': + barColors[1].blue}\"/>\n                    </div>\n                    <h4 class=\"value\">{{percent(trackData.audioFeatures.energy)}}</h4>\n                </div>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Danceability</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + trackData.audioFeatures.danceability, '--red': + barColors[2].red, '--green': + barColors[2].green, '--blue': + barColors[2].blue}\"/>\n                    </div>\n                    <h4 class=\"value\">{{percent(trackData.audioFeatures.danceability)}}</h4>\n                </div>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Popularity</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + (trackData.popularity / 100), '--red': + barColors[4].red, '--green': + barColors[4].green, '--blue': + barColors[4].blue}\"/>\n                    </div>\n                    <h4 class=\"value\">{{trackData.popularity}}%</h4>\n                </div>\n            </div>\n\n            <div id=\"stats\" class=\"window\" :style=\"{'--delay': 3}\">\n                <h3>Song Statistics</h3>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Tempo:</h4>\n                    <h4 class=\"value\">{{trackData.audioFeatures.tempo}} BPM</h4>\n                </div>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Key:</h4>\n                    <h4 class=\"value\">{{keyTell(trackData.audioFeatures.key)}}</h4>\n                </div>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Mode:</h4>\n                    <h4 class=\"value\">{{mode(trackData.audioFeatures.mode)}}</h4>\n                </div>\n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Duration:</h4>\n                    <h4 class=\"value\">{{Math.round(trackData.audioFeatures.duration_ms / 6000) / 10}} min</h4>\n                </div>\n            </div>\n\n            <div id=\"banger\" class=\"window\" :style=\"{'--delay': 4}\">\n                <h3>Is This a Banger?</h3>  \n                <div class=\"row stat\">\n                    <h4 class=\"bar-title\">Banger-Level</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + banger, '--red': + barColors[3].red, '--green': + barColors[3].green, '--blue': + barColors[3].blue}\"/>\n                    </div>\n                    <h4 class=\"value\">{{Math.round(banger * 100)}}%</h4>\n                </div>\n                <h3 id=\"banger-conclusion\">{{bangerConclusion}}</h3>\n            </div>\n\n            <div id=\"banger\" class=\"window\"  :style=\"{'--delay': 5}\">\n                <div class=\"loading\" v-if=\"!audioAnalysisReady\">\n                    <div v-for=\"bar in 4\" :key=\"'loadingbar'+bar\" class=\"bar\" :style=\"{'--delay': + (bar - 1)}\"/>\n                </div>\n                <h3 class=\"nomargin\">Audio Analysis</h3>  \n                <div v-if=\"audioAnalysisReady\" class=\"graph\" :style=\"{'--numBars': + audioAnalysisSegments}\">\n                    <div class=\"graph-bar\" v-for=\"(bar, index) in trackData.audioAnalysis.segments\" :style=\"{'--height': + bar.loudness_max, '--red': + bar.red, '--green': + bar.green, '--blue': + bar.blue,}\" :key=\"'audio-analysis'+index\">\n                        <p>{{time(bar.start)}}</p>\n                    </div>\n                </div>\n                <p v-if=\"audioAnalysisReady\" class=\"graph-key\">Height: Volume - Color: Pitch</p>\n            </div>\n\n            <div v-if=\"libraryData != null\" id=\"comparisons\" class=\"window\" :style=\"{'--delay': 6}\">\n                <h3>Compaired to Your Saved (Percentile)</h3>\n                <div v-if=\"percentileDataReady\" class=\"row stat\">\n                    <h4 class=\"bar-title\">Happier Than</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + percentileData.valence, '--red': + barColors[0].red + 20, '--green': + barColors[0].green + 20, '--blue': + barColors[0].blue + 20}\"/>\n                        <div class=\"fill excess\" :style=\"{'--percent': + 1 - percentileData.valence, '--red': + barColors[0].red - 20, '--green': + barColors[0].green - 20, '--blue': + barColors[0].blue - 20}\"/>\n                    </div>\n                    <h4 class=\"value\">{{percent(percentileData.valence)}}</h4>\n                </div>\n                <div v-if=\"percentileDataReady\" class=\"row stat\">\n                    <h4 class=\"bar-title\">Energy</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + percentileData.energy, '--red': + barColors[1].red + 20, '--green': + barColors[1].green + 20, '--blue': + barColors[1].blue + 20}\"/>\n                        <div class=\"fill excess\" :style=\"{'--percent': + 1 - percentileData.energy, '--red': + barColors[1].red - 20, '--green': + barColors[1].green - 20, '--blue': + barColors[1].blue - 20}\"/>\n                    </div>\n                    <h4 class=\"value\">{{percent(percentileData.energy)}}</h4>\n                </div>\n                 <div v-if=\"percentileDataReady\" class=\"row stat\">\n                    <h4 class=\"bar-title\">Danceable</h4>\n                    <div class=\"stat-bar\">\n                        <div class=\"fill\" :style=\"{'--percent': + percentileData.danceability, '--red': + barColors[2].red + 20, '--green': + barColors[2].green + 20, '--blue': + barColors[2].blue + 20}\"/>\n                        <div class=\"fill excess\" :style=\"{'--percent': + 1 - percentileData.danceability, '--red': + barColors[2].red - 20, '--green': + barColors[2].green - 20, '--blue': + barColors[2].blue - 20}\"/>\n                    </div>\n                    <h4 class=\"value\">{{percent(percentileData.danceability)}}</h4>\n                </div>\n            </div>\n            <h1 id=\"instructions\" :style=\"{'--delay': 7}\" v-if=\"libraryData == null\">Run Library Analysis for Personalized Data</h1>\n      </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TrackAnalysis',\n    props: {\n        trackData: Object,\n    },\n    data() {\n        return {\n            length: 300,\n            background: 25,\n            barColors: [\n                {red: 242, green: 142, blue: 43},\n                {red: 89, green: 161, blue: 79},\n                {red: 78, green: 121, blue: 167},\n                {red: 225, green: 87, blue: 89},\n                {red: 74, green: 189, blue: 180},\n                {red: 237, green: 201, blue: 72},\n                {red: 255, green: 157, blue: 167},\n                {red: 176, green: 122, blue: 161},\n                {red: 156, green: 117, blue: 95},\n                {red: 180, green: 189, blue: 74},\n            ],\n            artist: null,\n            artistDone: false,\n            audioAnalysisReady: false,\n            audioAnalysisSegments: 80,\n            percentileData: {\n                valence: 0,\n                danceability: 0,\n                energy: 0,\n            },\n            percentileDataReady: false,\n        }\n    },\n    methods: {\n        findArtistSongsSaved(artist) {\n            if (\"artists\" in this.libraryData)\n                if (artist in this.libraryData.artists)\n                    return this.libraryData.artists[artist].num;\n            return \"0\";\n        },\n        time(seconds) {\n            let zero = \"\";\n            if (seconds % 60 < 10)\n            {\n                zero = \"0\";\n            }\n            if (seconds < 60)\n            {\n                return \"0:\" + zero + seconds;\n            }\n            return Math.floor(seconds / 60) + \":\" + zero + (seconds % 60);\n        },\n        mode(val) {\n            if (val)\n                return \"Major\";\n            return \"Minor\";\n        \n        },\n        keyTell(val) {\n            let keys = [\"C\", \"C#/Db\", \"D\", \"D#/Eb\", \"E\", \"F\", \"F#/Gb\", \"G\", \"G#/Ab\", \"A\", \"A#/Bb\", \"B\"];\n            if (val == -1)\n                return \"Not Found\";\n            return keys[val % 12];\n        },\n        percent(value) {\n            return Math.round(value * 100) + \"%\";\n        },\n        async getArtistDetails() {\n            this.artist = await this.$store.dispatch('getArtist', this.trackData.artists[0].id);\n            this.artistDone = true;\n        },\n        cleanAudioAnalysis() {\n            let newSegments = [];\n            if (this.trackData.audioAnalysis.segments.length < this.audioAnalysisSegments)\n                this.audioAnalysisSegments = this.trackData.audioAnalysis.segments.length;\n            let width = Math.round(this.trackData.audioAnalysis.segments.length / this.audioAnalysisSegments);\n            \n            for (var i = 0; i < this.audioAnalysisSegments; i++)\n            {\n                let itemIndex = Math.round(width * i);\n                if (itemIndex > this.trackData.audioAnalysis.segments.length - 1)\n                {\n                    itemIndex = this.trackData.audioAnalysis.segments.length - 2;\n                }\n                let sum = 0;\n                for (var j = 0; j < this.trackData.audioAnalysis.segments[itemIndex].pitches.length; j++)\n                {\n                    sum += this.trackData.audioAnalysis.segments[itemIndex].pitches[j];\n                }\n                let averagePitch = sum / this.trackData.audioAnalysis.segments[itemIndex].pitches.length;\n                let color = this.HSVtoRGB(((1 - averagePitch) *229 + -50) / 360,.51,.89);\n                let loudness = (Math.round(((this.trackData.audioAnalysis.segments[itemIndex].loudness_max / 60) + 1) * 100) / 100);\n\n                newSegments.push({\n                    start: Math.round(this.trackData.audioAnalysis.segments[itemIndex].start),\n                    loudness_max: loudness, \n                    red: color.r,\n                    green: color.g,\n                    blue: color.b,\n                });\n            }\n            this.trackData.audioAnalysis.segments = null;\n            this.trackData.audioAnalysis.segments = newSegments;\n            this.audioAnalysisReady = true;\n        },\n        HSVtoRGB(h, s, v) {\n            var r, g, b, i, f, p, q, t;\n            if (arguments.length === 1) {\n                s = h.s, v = h.v, h = h.h;\n            }\n            i = Math.floor(h * 6);\n            f = h * 6 - i;\n            p = v * (1 - s);\n            q = v * (1 - f * s);\n            t = v * (1 - (1 - f) * s);\n            switch (i % 6) {\n                case 0: r = v, g = t, b = p; break;\n                case 1: r = q, g = v, b = p; break;\n                case 2: r = p, g = v, b = t; break;\n                case 3: r = p, g = q, b = v; break;\n                case 4: r = t, g = p, b = v; break;\n                case 5: r = v, g = p, b = q; break;\n            }\n            return {\n                r: Math.round(r * 255),\n                g: Math.round(g * 255),\n                b: Math.round(b * 255)\n            };\n        },\n        calculatePercentiles() {\n            let keys = Object.keys(this.percentileData);\n            for (var i = 0; i < keys.length; i++)\n            {\n                let less = 0;\n                for (var j = 0; j < this.libraryData.tracks.length; j++)\n                {\n                    if (this.libraryData.tracks[j][keys[i]] < this.trackData.audioFeatures[keys[i]])\n                        less += 1;\n                }\n                this.percentileData[keys[i]] = less / this.libraryData.tracks.length;\n            }\n            this.percentileDataReady = true;\n        },\n    },\n    computed: {\n        banger() {\n            return (this.trackData.audioFeatures.tempo - 96 + (this.trackData.audioFeatures.energy*100) + (this.trackData.audioFeatures.danceability * 50)) / 210;\n        },\n        bangerConclusion() {\n            let results = [\"Banger? More like Bummer\", \"Nah Bruh\", \"Not Banger.\", \"Cool, but not Banger\", \"Like Sorta Banger?\", \"Got A Semi-Banger\", \"Almost Banger\", \"What a Banger!\", \"Absolute Banger Bro\", \"Banger of all Bangers\"];\n            if (Math.floor(this.banger * 10) < results.length)\n                return results[Math.floor(this.banger * 10)];\n            return \"Banger of all Bangers\";\n        },\n        libraryData() {\n            return this.$store.state.libraryData;\n        }\n    },\n    async created() {\n        this.getArtistDetails();\n        this.trackData.audioAnalysis = await this.$store.dispatch('getAudioAnalysisForTrack', this.trackData.id);\n        this.cleanAudioAnalysis();\n        this.calculatePercentiles();\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#instructions {\n    --delay: 0;\n    animation: slide-up .5s ease calc(var(--delay) * .1s), peekaboo calc(var(--delay) * .1s);\n    display: block;\n    width: 400px;\n    height: 80px;\n    padding-top: 68px;\n    text-overflow: clip;\n    line-height: 40px;\n    color: rgba(255, 255, 255, 0.219);\n    text-align: center;\n    overflow: hidden;\n    white-space:normal;\n}\n.loading {\n  margin-top: 30px;\n}\n\n.graph-key {\n    position: absolute;\n    width: calc(100% - 40px);\n    bottom: 10px;\n    text-align: center;\n    font-size: .8em;\n    color:rgba(255, 255, 255, 0.267);\n}\n#banger-conclusion {\n    margin: 0 auto;\n    text-align: center;\n    color: rgb(252, 140, 142);\n    font-size: 3em;\n}\n#track-image {\n    display: block;\n    width: 100px;\n    height: 100px;\n    background-size: 100% auto;\n    background-position: center center;\n    margin-right: 20px;\n}\n\n@keyframes slide-up {\n  from {\n    transform: translateY(100px);\n    opacity: 0;\n  }\n}\n\n.nomargin {\n    margin: 0 !important;\n}\n\n.graph {\n    --numBars: 0;\n    display: flex;\n    flex-wrap: nowrap;\n    width: 400px;\n    height: 187px;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.graph-bar {\n    --height: 0;\n    --red: 240;\n    --green: 193;\n    --blue: 111;\n    display: block;\n    width: calc((100% / var(--numBars)) - 1px);\n    height: calc(125px * var(--height));\n    background-color: rgba(var(--red), var(--green), var(--blue), .9);\n    border-radius: 3px;\n    position: relative;\n}\n\n.graph-bar p {\n    display: none;\n    position: absolute;\n    font-size: 1em;\n    color: white;\n    text-align: center;\n    top: calc(((125px * var(--height)) / 2) + -80px);\n    transform: translateX(-15px);\n}\n\n.graph-bar:hover p {\n    display: block;\n}\n.fit {\n    width: calc(100% - 120px);\n}\n\n\n#analysis {\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n    width: calc(100% - 64px);\n    margin: 32px;\n    animation: slide-up .5s ease;\n}\n\nh1 {\n    font-size: 1.4em;\n    color: white;\n    text-align: left;\n    margin: 0px 0px;\n    line-height: 30px;\n    display: block;\n    max-width: calc(100% - 5px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n}\n\nh2 {\n    font-size: 1em;\n    color: rgba(255, 255, 255, 0.568);\n    text-align: left;\n    margin: 0;\n    margin-top: 10px;\n    max-width: calc(100% - 5px);\n    text-transform: capitalize;\n        text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n}\n\n#artists {\n    display: flex;\n    max-width: calc(100% - 5px);\n    overflow: hidden;\n}\n\n#artists h3 {\n    font-size: 1em;\n    color: rgba(255, 255, 255, 0.927);\n    text-align: left;\n    margin: 0px 0px;\n    margin-right: 5px;\n    margin-top: 10px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n}\n\n.window h3 {\n  text-align: left;\n  animation: none;\n  font-size: 1.6em;\n  margin: 0;\n  color: white;\n  margin-bottom: 15px;\n}\n\nh4 {\n  color: white;\n  display: flex;\n  align-items: center;\n  margin: 0;\n  text-align: left;\n}\n\np {\n    margin: 0;\n    color: white;\n    text-align: left;\n}\n\n.window {\n  --delay: 0;\n  animation: slide-up .5s ease calc(var(--delay) * .1s), peekaboo calc(var(--delay) * .1s);\n  display: inline-block;\n  position: relative;\n  width: 75%;\n  margin: 20px 20px;\n  padding: 20px;\n  max-width: 400px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.247);\n}\n\n\n\n.flex {\n    display: flex;\n}\n\n.bar-title {\n  width: 115px;\n}\n\n.stat-bar {\n    display: flex;\n    border-radius: 5px;\n    overflow: hidden;\n    width: 200px;\n    max-height: 10px;\n    background-color: rgba(255, 255, 255, 0.247);\n}\n\n.stat-bar .fill {\n    --percent: 0;\n    --red: 255;\n    --green: 255;\n    --blue: 255;\n    display: block;\n    width: calc(var(--percent) * 100%);\n    height: 10px;\n    background: rgb(var(--red), var(--green), var(--blue));\n    animation: slow-fill 1s ease;\n}\n\n.stat-bar .fill.excess {\n    border-left: 2px solid rgb(37, 37, 37);\n    background: rgba(var(--red), var(--green), var(--blue), .5);\n    width: calc((var(--percent) * 100%) - 2px);\n    animation: border-throb 1s ease-in-out infinite;\n}\n\n@keyframes border-throb {\n    50% {\n        border-left: 2px solid rgb(255, 255, 255);\n    }\n}\n\n\n.stat {\n  margin-bottom: 15px;\n  justify-content: space-between;\n}\n\n@keyframes slow-fill {\n  from {\n    width: calc(var(--percent) * 0%);\n  }\n}\n\n.row {\n  display: flex;\n  align-items: center;\n}\n</style>"]}]}