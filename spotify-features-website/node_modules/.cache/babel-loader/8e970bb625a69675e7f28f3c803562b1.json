{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/babel-loader/lib/index.js!/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/eslint-loader/index.js??ref--13-0!/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/src/store.js","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/src/store.js","mtime":1572016026301},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\n\nvar SpotifyWebApi = require('spotify-web-api-js');\n\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    testing: true,\n    spotifyApi: new SpotifyWebApi(),\n    accessToken: \"\",\n    user: null,\n    inicialized: false,\n    userData: null,\n    apps: [{\n      title: \"Song Analysis\",\n      path: \"songanalysis\",\n      auth: false,\n      description: [\"View in-depth information about a track including it's happiness, energy and danceability!\", \"After running Library Analysis, Song Analisis will provide additional information based on your Library's statistics.\"],\n      img: \"search\",\n      color: {\n        red: 238,\n        green: 126,\n        blue: 137\n      },\n      state: true\n    }, {\n      title: \"My Charts\",\n      path: \"mycharts\",\n      auth: true,\n      description: [\"View your personalized top tracks and artists.\", \"View either with a time range of your choice! View your top tracks of all time, or your favorite artists over the last few weeks.\"],\n      img: \"chart\",\n      color: {\n        red: 230,\n        green: 224,\n        blue: 60\n      },\n      state: true\n    }, {\n      title: \"Library Analysis\",\n      path: \"libraryanalysis\",\n      auth: true,\n      description: [\"How happy is your library? Who is your top saved artist? What are you slowest songs?\", \"Discover the averages and extremes within your library.\", \"Library Analysis gathers all data relavant to your library and process' out some cool statistics!\"],\n      img: \"library\",\n      color: {\n        red: 240,\n        green: 100,\n        blue: 50\n      },\n      state: true\n    }, {\n      title: \"My Music Mood\",\n      path: \"mymusicmood\",\n      auth: true,\n      description: [\"What does your music say about you?\", \"Based on either your most recently played, or recent top tracks, My Music Mood will attempt to analyse tracks you've been into lately and determine your mood!\"],\n      img: \"musicmood\",\n      color: {\n        red: 255,\n        green: 165,\n        blue: 30\n      },\n      state: false\n    }, {\n      title: \"Boring-Radar\",\n      path: \"boring\",\n      auth: true,\n      description: [\"Is your music taste BORING?\", \"The Boring-Radar will either confirm or rebute your greatest fears by analysing data from Library Analysis to determine the standard deviation of your library through multiple variables.\"],\n      img: \"boring\",\n      color: {\n        red: 180,\n        green: 100,\n        blue: 240\n      },\n      state: false\n    }, {\n      title: \"Power Recommends\",\n      path: \"recommends\",\n      auth: true,\n      description: [\"I like this song, but I want one like it but happier. DONE.\", \"Taylor your recommends to fit your exact wishes, and find songs more accuratly attuned to what you're looking for.\", \"Get recommends based on a track, but specify what statistics you'd like your new songs to maintain, or change.\"],\n      img: \"power\",\n      color: {\n        red: 180,\n        green: 230,\n        blue: 100\n      },\n      state: false\n    }],\n    index: 0,\n    libraryData: {\n      topPlayed: [],\n      topArtists: [],\n      complete: {\n        done: false,\n        audioFeaturesDone: false,\n        artistsDone: false,\n        genresDone: false\n      },\n      tracks: [],\n      artists: {},\n      favoriteArtists: [],\n      genres: {},\n      favoriteGenres: [],\n      dates: [],\n      audio_features: {\n        acousticness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        danceability: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        energy: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        instrumentalness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        liveness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        mode: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [-1]\n        },\n        speechiness: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        tempo: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [-1]\n        },\n        total: 0,\n        valence: {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }\n      },\n      bangers: {\n        value: 0,\n        plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        maxchart: [],\n        minchart: []\n      }\n    },\n    progress: {\n      num: 0,\n      message: \"Pluggin in headphones.\",\n      total: 0\n    },\n    tempBanger: 0,\n    publicUsers: null\n  },\n  mutations: {\n    setUserData: function setUserData(state, userData) {\n      state.userData = userData;\n    },\n    setPublicUsers: function setPublicUsers(state, publicUsers) {\n      state.publicUsers = publicUsers;\n    },\n    setIndex: function setIndex(state, index) {\n      state.index = index;\n    },\n    setInicialized: function setInicialized(state, inicialized) {\n      state.inicialized = inicialized;\n    },\n    setToken: function setToken(state, token) {\n      state.accessToken = token;\n    },\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    setLibraryData: function setLibraryData(state, data) {\n      state.libraryData = data;\n    },\n    setProgress: function setProgress(state) {\n      state.progress.num += 1;\n    },\n    setMessage: function setMessage(state, message) {\n      state.progress.message = message;\n    },\n    setTotal: function setTotal(state, total) {\n      state.progress.total = total;\n    },\n    addTracks: function addTracks(state, tracks) {\n      state.libraryData.tracks = state.libraryData.tracks.concat(tracks);\n    },\n    addBangerValue: function addBangerValue(state, val) {\n      state.libraryData.bangers.value += val;\n    },\n    plotBanger: function plotBanger(state, index) {\n      state.libraryData.bangers.plot[index] += 1;\n    },\n    spliceBanger: function spliceBanger(state, payload) {\n      if (payload.replace != null) state.libraryData.bangers[payload.type].splice(payload.index, payload.num, payload.replace);else state.libraryData.bangers[payload.type].splice(payload.index, payload.num);\n    },\n    pushBanger: function pushBanger(state, payload) {\n      state.libraryData.bangers[payload.type].push(payload.value);\n    },\n    addAudioFeaturesTotal: function addAudioFeaturesTotal(state) {\n      state.libraryData.audio_features.total += 1;\n    },\n    addAudioFeature: function addAudioFeature(state, payload) {\n      state.libraryData.audio_features[payload.key].value += payload.value;\n    },\n    plotAudioFeature: function plotAudioFeature(state, payload) {\n      state.libraryData.audio_features[payload.key].plot[payload.index] += 1;\n    },\n    spliceAudioFeatures: function spliceAudioFeatures(state, payload) {\n      if (payload.replace != null) state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num, payload.replace);else state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num);\n    },\n    pushAudioFeatures: function pushAudioFeatures(state, payload) {\n      state.libraryData.audio_features[payload.key][payload.type].push(payload.value);\n    },\n    spliceFavoriteArtists: function spliceFavoriteArtists(state, payload) {\n      if (payload.replace != null) state.libraryData.favoriteArtists.splice(payload.index, payload.num, payload.replace);else state.libraryData.favoriteArtists.splice(payload.index, payload.num);\n    },\n    pushFavoriteArtists: function pushFavoriteArtists(state, artist) {\n      state.libraryData.favoriteArtists.push(artist);\n    },\n    pushFavoriteGenres: function pushFavoriteGenres(state, genre) {\n      state.libraryData.favoriteGenres.push(genre);\n    },\n    spliceFavoriteGenres: function spliceFavoriteGenres(state, payload) {\n      if (payload.replace != null) state.libraryData.favoriteGenres.splice(payload.index, payload.num, payload.replace);else state.libraryData.favoriteGenres.splice(payload.index, payload.num);\n    },\n    setFavoriteArtistImage: function setFavoriteArtistImage(state, image) {\n      state.libraryData.favoriteArtists[0].image = image;\n    },\n    setComplete: function setComplete(state, payload) {\n      state.libraryData.complete[payload.index] = payload.value;\n    },\n    addGenre: function addGenre(state, payload) {\n      state.libraryData.genres[payload.genre] = payload.value;\n    },\n    addArtist: function addArtist(state, payload) {\n      state.libraryData.artists[payload.name] = payload.value;\n    },\n    addToArtist: function addToArtist(state, artist) {\n      state.libraryData.artists[artist].num += 1;\n    },\n    addToGenre: function addToGenre(state, payload) {\n      state.libraryData.genres[payload.genre].num += payload.num;\n    },\n    pushDate: function pushDate(state) {\n      state.libraryData.dates.push(0);\n    },\n    addToDate: function addToDate(state, date) {\n      state.libraryData.dates[date] += 1;\n    },\n    averageAudioFeature: function averageAudioFeature(state, key) {\n      state.libraryData.audio_features[key].value /= state.progress.total;\n    },\n    setTempBanger: function setTempBanger(state, level) {\n      state.tempBanger = level;\n    },\n    setTopPlayed: function setTopPlayed(state, topPlayed) {\n      state.libraryData.topPlayed = topPlayed;\n    },\n    setTopArtists: function setTopArtists(state, topArtists) {\n      state.libraryData.topArtists = topArtists;\n    }\n  },\n  actions: {\n    getUserData: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"/api/profile/\" + payload.id);\n\n              case 3:\n                response = _context.sent;\n                context.commit('setUserData', response.data);\n                console.log(response);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      function getUserData(_x, _x2) {\n        return _getUserData.apply(this, arguments);\n      }\n\n      return getUserData;\n    }(),\n    saveLibrary: function () {\n      var _saveLibrary = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(context, payload) {\n        var library, keys, charts, j, i, ids, val, k, tracks, trackArtists;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return JSON.parse(JSON.stringify(this.state.libraryData));\n\n              case 3:\n                library = _context2.sent;\n                ;\n                library.tracks = [this.state.libraryData.tracks.length], library.artists = {\n                  num: Object.keys(this.state.libraryData.artists).length\n                }, library.genres = {\n                  num: Object.keys(this.state.libraryData.genres).length\n                }, library.name = payload.name;\n                library.privacy = payload.privacy;\n                keys = Object.keys(library.audio_features);\n                keys.push(\"bangers\");\n                charts = ['minchart', 'maxchart'];\n                j = 0;\n\n              case 11:\n                if (!(j < keys.length)) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                if (!(keys[j] == \"total\")) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                return _context2.abrupt(\"continue\", 26);\n\n              case 14:\n                i = 0;\n\n              case 15:\n                if (!(i < charts.length)) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                ids = [];\n                val = [];\n\n                if (keys[j] == \"bangers\") {\n                  for (k = 0; k < library[keys[j]][charts[i]].length; k++) {\n                    ids.push(library[keys[j]][charts[i]][k].id);\n                    val.push(this.state.libraryData.bangers[charts[i]][k].value);\n                  }\n\n                  library[keys[j]][charts[i]] = [];\n                } else {\n                  for (k = 0; k < library.audio_features[keys[j]][charts[i]].length; k++) {\n                    ids.push(library.audio_features[keys[j]][charts[i]][k].id);\n                    val.push(this.state.libraryData.audio_features[keys[j]][charts[i]][k].value);\n                  }\n\n                  library.audio_features[keys[j]][charts[i]] = [];\n                }\n\n                _context2.next = 21;\n                return this.dispatch('getTracks', ids);\n\n              case 21:\n                tracks = _context2.sent;\n\n                for (k = 0; k < 10; k++) {\n                  trackArtists = tracks.tracks[k].artists.map(function (x) {\n                    return x.name;\n                  });\n\n                  if (keys[j] == \"bangers\") {\n                    library[keys[j]][charts[i]].push({\n                      name: tracks.tracks[k].name,\n                      artists: trackArtists,\n                      image: tracks.tracks[k].album.images[0].url,\n                      value: val[k]\n                    });\n                  } else {\n                    library.audio_features[keys[j]][charts[i]].push({\n                      name: tracks.tracks[k].name,\n                      artists: trackArtists,\n                      image: tracks.tracks[k].album.images[0].url,\n                      value: val[k]\n                    });\n                  }\n                }\n\n              case 23:\n                i++;\n                _context2.next = 15;\n                break;\n\n              case 26:\n                j++;\n                _context2.next = 11;\n                break;\n\n              case 29:\n                _context2.next = 31;\n                return axios.post(\"/api/profile/\" + this.state.user.id, library);\n\n              case 31:\n                _context2.next = 36;\n                break;\n\n              case 33:\n                _context2.prev = 33;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 36:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 33]]);\n      }));\n\n      function saveLibrary(_x3, _x4) {\n        return _saveLibrary.apply(this, arguments);\n      }\n\n      return saveLibrary;\n    }(),\n    getPublicUsers: function () {\n      var _getPublicUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(context, payload) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get('/api/profile/');\n\n              case 3:\n                response = _context3.sent;\n                context.commit('setPublicUsers', response.data);\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function getPublicUsers(_x5, _x6) {\n        return _getPublicUsers.apply(this, arguments);\n      }\n\n      return getPublicUsers;\n    }(),\n    changeLibraryData: function changeLibraryData(context, payload) {\n      context.commit('setLibraryData', payload);\n    },\n    parseAccessToken: function () {\n      var _parseAccessToken = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(context) {\n        var token;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                token = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n                  if (item) {\n                    var parts = item.split('=');\n                    initial[parts[0]] = decodeURIComponent(parts[1]);\n                  }\n\n                  return initial;\n                }, {});\n                _context4.next = 3;\n                return context.commit('setToken', token.access_token);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function parseAccessToken(_x7) {\n        return _parseAccessToken.apply(this, arguments);\n      }\n\n      return parseAccessToken;\n    }(),\n    getAccessToken: function getAccessToken(context) {\n      var authEndpoint = 'https://accounts.spotify.com/authorize';\n      var clientId = '42903eeb2bf943c4bd4903370f7a93f5';\n      var redirectUri = 'http://mymusic.andrewdanielyoung.com/redirect/';\n      if (this.state.testing) redirectUri = 'http://localhost:8080/redirect/';\n      var scopes = ['user-read-recently-played', 'user-top-read', 'user-library-read', 'user-read-email'];\n\n      if (!this.state.access_token) {\n        window.location = \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&scope=\").concat(scopes.join('%20'), \"&response_type=token&show_dialog=true\");\n      }\n    },\n    runLibraryAnalysis: function runLibraryAnalysis(context) {\n      this.dispatch(\"retriveData\", {\n        offset: 0,\n        limit: 50\n      });\n    },\n    retriveData: function () {\n      var _retriveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(context, payload) {\n        var now, nt, month, response, ids, i, date, t, diff, j, tracks, keys, topPlayed, topArtists, newTopPlayed, newTopArtists, _i, trackArtists, _i2;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                now = new Date();\n                nt = now.getTime();\n                month = 2626560000;\n                _context5.next = 5;\n                return this.dispatch('getSavedTracks', {\n                  limit: payload.limit,\n                  offset: payload.offset\n                });\n\n              case 5:\n                response = _context5.sent;\n                context.commit('setTotal', response.total);\n                if (this.state.progress.num / this.state.progress.total > .8) context.commit('setMessage', \"♪┏(・o･)┛♪┗ ( ･o･) ┓♪\");else if (this.state.progress.num / this.state.progress.total > .6) context.commit('setMessage', \"Sick beats dude.\");else if (this.state.progress.num / this.state.progress.total > .4) context.commit('setMessage', \"Jamming out to your tunes.\");else if (this.state.progress.num / this.state.progress.total > .2) context.commit('setMessage', \"Beep Bop. Analyzing Data.\");\n                ids = [];\n\n                for (i = 0; i < response.items.length; i++) {\n                  ids.push(response.items[i].track.id);\n                  if (!(response.items[i].track.artists[0].name in this.state.libraryData.artists)) context.commit('addArtist', {\n                    name: response.items[i].track.artists[0].name,\n                    value: {\n                      num: 1,\n                      id: response.items[i].track.artists[0].id\n                    }\n                  });else context.commit('addToArtist', response.items[i].track.artists[0].name);\n                  date = new Date(response.items[i].added_at);\n                  t = date.getTime();\n                  response.items[i].track.date_added = t;\n                  diff = Math.floor((nt - t) / month);\n\n                  if (this.state.libraryData.dates.length - 1 < diff) {\n                    for (j = 0; j < diff - (this.state.libraryData.dates.length - 1); j++) {\n                      context.commit('pushDate');\n                    }\n\n                    context.commit('pushDate');\n                    context.commit('pushDate');\n                  }\n\n                  context.commit('addToDate', diff);\n                }\n\n                _context5.next = 12;\n                return this.dispatch('getAudioFeaturesForTracks', ids);\n\n              case 12:\n                tracks = _context5.sent;\n                _context5.next = 15;\n                return this.dispatch('analyseData', tracks);\n\n              case 15:\n                if (!(response.items.length == 50)) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                this.dispatch('retriveData', {\n                  offset: payload.offset + payload.limit,\n                  limit: payload.limit\n                });\n                _context5.next = 51;\n                break;\n\n              case 19:\n                keys = Object.keys(this.state.libraryData.audio_features);\n                i = 0;\n\n              case 21:\n                if (!(i < keys.length)) {\n                  _context5.next = 28;\n                  break;\n                }\n\n                if (!(keys[i] == \"total\")) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                return _context5.abrupt(\"continue\", 25);\n\n              case 24:\n                context.commit('averageAudioFeature', keys[i]);\n\n              case 25:\n                i++;\n                _context5.next = 21;\n                break;\n\n              case 28:\n                context.commit('setComplete', {\n                  index: \"done\",\n                  value: true\n                });\n                context.commit('setComplete', {\n                  index: \"audioFeaturesDone\",\n                  value: true\n                });\n                console.log('%c Processing Track Audio Features Complete.', 'color: purple;');\n                _context5.next = 33;\n                return this.dispatch('checkArtists');\n\n              case 33:\n                console.log('%c Processing Artists Complete.', 'color: purple;');\n                _context5.next = 36;\n                return this.dispatch('checkGenres');\n\n              case 36:\n                console.log('%c Processing Genres Complete.', 'color: purple;');\n                _context5.next = 39;\n                return this.dispatch('getTopTracks', {\n                  limit: 20,\n                  time_range: \"long_term\"\n                });\n\n              case 39:\n                topPlayed = _context5.sent;\n                _context5.next = 42;\n                return this.dispatch('getTopArtists', {\n                  limit: 20,\n                  time_range: \"long_term\"\n                });\n\n              case 42:\n                topArtists = _context5.sent;\n                newTopPlayed = [];\n                newTopArtists = [];\n\n                for (_i = 0; _i < topPlayed.length; _i++) {\n                  trackArtists = topPlayed[_i].artists.map(function (x) {\n                    return x.name;\n                  });\n                  newTopPlayed.push({\n                    name: topPlayed[_i].name,\n                    artists: trackArtists,\n                    image: topPlayed[_i].album.images[0].url\n                  });\n                }\n\n                for (_i2 = 0; _i2 < topArtists.length; _i2++) {\n                  newTopArtists.push({\n                    name: topArtists[_i2].name,\n                    image: topArtists[_i2].images[0].url,\n                    genres: topArtists[_i2].genres\n                  });\n                }\n\n                _context5.next = 49;\n                return context.commit('setTopPlayed', newTopPlayed);\n\n              case 49:\n                _context5.next = 51;\n                return context.commit('setTopArtists', newTopArtists);\n\n              case 51:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function retriveData(_x8, _x9) {\n        return _retriveData.apply(this, arguments);\n      }\n\n      return retriveData;\n    }(),\n    banger: function banger(context, payload) {\n      var bangerLevel = (payload.tempo - 96 + payload.energy * 100 + payload.danceability * 50) / 210;\n      context.commit('setTempBanger', bangerLevel);\n    },\n    analyseData: function () {\n      var _analyseData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(context, tracks) {\n        var keys, i, bangersPos, j, k, _k, bangindex, _k2, _k3;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                context.commit('addTracks', tracks);\n                keys = Object.keys(this.state.libraryData.audio_features);\n                i = 0;\n\n              case 3:\n                if (!(i < tracks.length)) {\n                  _context6.next = 78;\n                  break;\n                }\n\n                _context6.next = 6;\n                return this.dispatch('banger', {\n                  tempo: tracks[i].tempo,\n                  energy: tracks[i].energy,\n                  danceability: tracks[i].danceability\n                });\n\n              case 6:\n                context.commit('addBangerValue', this.state.tempBanger);\n                bangersPos = Math.floor(this.state.tempBanger * 10);\n                if (bangersPos < this.state.libraryData.bangers.plot.length) context.commit('plotBanger', bangersPos);else context.commit('plotBanger', this.state.libraryData.bangers.plot.length - 1);\n                j = 0;\n\n              case 10:\n                if (!(j < keys.length)) {\n                  _context6.next = 45;\n                  break;\n                }\n\n                if (!(keys[j] == \"total\")) {\n                  _context6.next = 14;\n                  break;\n                }\n\n                context.commit('addAudioFeaturesTotal');\n                return _context6.abrupt(\"continue\", 42);\n\n              case 14:\n                context.commit('addAudioFeature', {\n                  key: keys[j],\n                  value: tracks[i][keys[j]]\n                });\n                if (this.state.libraryData.audio_features[keys[j]].plot[0] != -1) context.commit('plotAudioFeature', {\n                  key: keys[j],\n                  index: Math.floor(tracks[i][keys[j]] * 10)\n                });\n                k = 0;\n\n              case 17:\n                if (!(k < this.state.libraryData.audio_features[keys[j]].minchart.length)) {\n                  _context6.next = 28;\n                  break;\n                }\n\n                if (!(this.state.libraryData.audio_features[keys[j]].minchart[k].value > tracks[i][keys[j]])) {\n                  _context6.next = 22;\n                  break;\n                }\n\n                context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  index: k,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                if (this.state.libraryData.audio_features[keys[j]].minchart.length > 20) context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 28);\n\n              case 22:\n                if (!(k == this.state.libraryData.audio_features[keys[j]].minchart.length - 1 && this.state.libraryData.audio_features[keys[j]].minchart.length < 20)) {\n                  _context6.next = 25;\n                  break;\n                }\n\n                context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                return _context6.abrupt(\"break\", 28);\n\n              case 25:\n                k++;\n                _context6.next = 17;\n                break;\n\n              case 28:\n                if (this.state.libraryData.audio_features[keys[j]].minchart.length == 0) context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                _k = 0;\n\n              case 30:\n                if (!(_k < this.state.libraryData.audio_features[keys[j]].maxchart.length)) {\n                  _context6.next = 41;\n                  break;\n                }\n\n                if (!(this.state.libraryData.audio_features[keys[j]].maxchart[_k].value < tracks[i][keys[j]])) {\n                  _context6.next = 35;\n                  break;\n                }\n\n                context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  index: _k,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                if (this.state.libraryData.audio_features[keys[j]].maxchart.length > 20) context.commit('spliceAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 41);\n\n              case 35:\n                if (!(_k == this.state.libraryData.audio_features[keys[j]].maxchart.length - 1 && this.state.libraryData.audio_features[keys[j]].maxchart.length < 20)) {\n                  _context6.next = 38;\n                  break;\n                }\n\n                context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n                return _context6.abrupt(\"break\", 41);\n\n              case 38:\n                _k++;\n                _context6.next = 30;\n                break;\n\n              case 41:\n                if (this.state.libraryData.audio_features[keys[j]].maxchart.length == 0) context.commit('pushAudioFeatures', {\n                  key: keys[j],\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: tracks[i][keys[j]]\n                  }\n                });\n\n              case 42:\n                j++;\n                _context6.next = 10;\n                break;\n\n              case 45:\n                _context6.next = 47;\n                return this.dispatch('banger', {\n                  tempo: tracks[i].tempo,\n                  energy: tracks[i].energy,\n                  danceability: tracks[i].danceability\n                });\n\n              case 47:\n                bangindex = this.state.tempBanger;\n                _k2 = 0;\n\n              case 49:\n                if (!(_k2 < this.state.libraryData.bangers.minchart.length)) {\n                  _context6.next = 60;\n                  break;\n                }\n\n                if (!(this.state.libraryData.bangers.minchart[_k2].value > bangindex)) {\n                  _context6.next = 54;\n                  break;\n                }\n\n                context.commit('spliceBanger', {\n                  type: \"minchart\",\n                  index: _k2,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                if (this.state.libraryData.bangers.minchart.length > 20) context.commit('spliceBanger', {\n                  type: \"minchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 60);\n\n              case 54:\n                if (!(_k2 == this.state.libraryData.bangers.minchart.length - 1 && this.state.libraryData.bangers.minchart.length < 20)) {\n                  _context6.next = 57;\n                  break;\n                }\n\n                context.commit('pushBanger', {\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                return _context6.abrupt(\"break\", 60);\n\n              case 57:\n                _k2++;\n                _context6.next = 49;\n                break;\n\n              case 60:\n                if (this.state.libraryData.bangers.minchart.length == 0) context.commit('pushBanger', {\n                  type: \"minchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                _k3 = 0;\n\n              case 62:\n                if (!(_k3 < this.state.libraryData.bangers.maxchart.length)) {\n                  _context6.next = 73;\n                  break;\n                }\n\n                if (!(this.state.libraryData.bangers.maxchart[_k3].value < bangindex)) {\n                  _context6.next = 67;\n                  break;\n                }\n\n                context.commit('spliceBanger', {\n                  type: \"maxchart\",\n                  index: _k3,\n                  num: 0,\n                  replace: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                if (this.state.libraryData.bangers.maxchart.length > 20) context.commit('spliceBanger', {\n                  type: \"maxchart\",\n                  index: 20,\n                  num: 1,\n                  replace: null\n                });\n                return _context6.abrupt(\"break\", 73);\n\n              case 67:\n                if (!(_k3 == this.state.libraryData.bangers.maxchart.length - 1 && this.state.libraryData.bangers.maxchart.length < 20)) {\n                  _context6.next = 70;\n                  break;\n                }\n\n                context.commit('pushBanger', {\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                return _context6.abrupt(\"break\", 73);\n\n              case 70:\n                _k3++;\n                _context6.next = 62;\n                break;\n\n              case 73:\n                if (this.state.libraryData.bangers.maxchart.length == 0) context.commit('pushBanger', {\n                  type: \"maxchart\",\n                  value: {\n                    id: tracks[i].id,\n                    value: bangindex\n                  }\n                });\n                context.commit('setProgress');\n\n              case 75:\n                i++;\n                _context6.next = 3;\n                break;\n\n              case 78:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function analyseData(_x10, _x11) {\n        return _analyseData.apply(this, arguments);\n      }\n\n      return analyseData;\n    }(),\n    checkArtists: function () {\n      var _checkArtists = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(context) {\n        var max, artist, added, i, favoriteArtist;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                max = 4;\n                _context7.t0 = regeneratorRuntime.keys(this.state.libraryData.artists);\n\n              case 2:\n                if ((_context7.t1 = _context7.t0()).done) {\n                  _context7.next = 18;\n                  break;\n                }\n\n                artist = _context7.t1.value;\n                added = false;\n                i = 0;\n\n              case 6:\n                if (!(i < this.state.libraryData.favoriteArtists.length)) {\n                  _context7.next = 15;\n                  break;\n                }\n\n                if (!(this.state.libraryData.favoriteArtists[i].num < this.state.libraryData.artists[artist].num)) {\n                  _context7.next = 11;\n                  break;\n                }\n\n                context.commit('spliceFavoriteArtists', {\n                  index: i,\n                  num: 0,\n                  replace: {\n                    name: artist,\n                    num: this.state.libraryData.artists[artist].num,\n                    id: this.state.libraryData.artists[artist].id\n                  }\n                });\n                added = true;\n                return _context7.abrupt(\"break\", 15);\n\n              case 11:\n                if (this.state.libraryData.favoriteArtists.length > max) context.commit('spliceFavoriteArtists', {\n                  index: this.state.libraryData.favoriteArtists.length - 1,\n                  num: 1,\n                  replace: null\n                });\n\n              case 12:\n                i++;\n                _context7.next = 6;\n                break;\n\n              case 15:\n                if (this.state.libraryData.favoriteArtists.length < max && !added) context.commit('pushFavoriteArtists', {\n                  name: artist,\n                  num: this.state.libraryData.artists[artist].num,\n                  id: this.state.libraryData.artists[artist].id\n                });\n                _context7.next = 2;\n                break;\n\n              case 18:\n                _context7.next = 20;\n                return this.dispatch('getArtist', this.state.libraryData.favoriteArtists[0].id);\n\n              case 20:\n                favoriteArtist = _context7.sent;\n                context.commit('setFavoriteArtistImage', favoriteArtist.images[0].url);\n                context.commit('setComplete', {\n                  index: \"artistsDone\",\n                  value: true\n                });\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function checkArtists(_x12) {\n        return _checkArtists.apply(this, arguments);\n      }\n\n      return checkArtists;\n    }(),\n    checkGenres: function () {\n      var _checkGenres = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(context) {\n        var max, querymax, artistsIds, artist, artistsData, i, j, genre, added;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                max = 4;\n                querymax = 50;\n                artistsIds = [];\n                _context8.t0 = regeneratorRuntime.keys(this.state.libraryData.artists);\n\n              case 4:\n                if ((_context8.t1 = _context8.t0()).done) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                artist = _context8.t1.value;\n\n                if (!(querymax == 0)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                _context8.next = 9;\n                return this.dispatch('getArtists', artistsIds);\n\n              case 9:\n                artistsData = _context8.sent;\n\n                for (i = 0; i < artistsData.artists.length; i++) {\n                  for (j = 0; j < artistsData.artists[i].genres.length; j++) {\n                    if (!(artistsData.artists[i].genres[j] in this.state.libraryData.genres)) context.commit('addGenre', {\n                      genre: artistsData.artists[i].genres[j],\n                      value: {\n                        num: this.state.libraryData.artists[artist].num,\n                        genre: artistsData.artists[i].genres[j]\n                      }\n                    });else context.commit('addToGenre', {\n                      genre: artistsData.artists[i].genres[j],\n                      num: this.state.libraryData.artists[artist].num\n                    });\n                  }\n                }\n\n                querymax = 50;\n                artistsIds = [];\n\n              case 13:\n                if (artist in this.state.libraryData.artists) {\n                  artistsIds.push(this.state.libraryData.artists[artist].id);\n                  querymax -= 1;\n                }\n\n                _context8.next = 4;\n                break;\n\n              case 16:\n                _context8.t2 = regeneratorRuntime.keys(this.state.libraryData.genres);\n\n              case 17:\n                if ((_context8.t3 = _context8.t2()).done) {\n                  _context8.next = 33;\n                  break;\n                }\n\n                genre = _context8.t3.value;\n                added = false;\n                i = 0;\n\n              case 21:\n                if (!(i < this.state.libraryData.favoriteGenres.length)) {\n                  _context8.next = 30;\n                  break;\n                }\n\n                if (!(this.state.libraryData.favoriteGenres[i].num < this.state.libraryData.genres[genre].num)) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                context.commit('spliceFavoriteGenres', {\n                  index: i,\n                  num: 0,\n                  replace: {\n                    genre: genre,\n                    num: this.state.libraryData.genres[genre].num\n                  }\n                });\n                added = true;\n                return _context8.abrupt(\"break\", 30);\n\n              case 26:\n                if (this.state.libraryData.favoriteGenres.length > max) context.commit('spliceFavoriteGenres', {\n                  index: this.state.libraryData.favoriteGenres.length - 1,\n                  num: 1,\n                  replace: null\n                });\n\n              case 27:\n                i++;\n                _context8.next = 21;\n                break;\n\n              case 30:\n                if (this.state.libraryData.favoriteGenres.length < max && !added) context.commit('pushFavoriteGenres', {\n                  genre: genre,\n                  num: this.state.libraryData.genres[genre].num\n                });\n                _context8.next = 17;\n                break;\n\n              case 33:\n                context.commit('setComplete', {\n                  index: \"genresDone\",\n                  value: true\n                });\n\n              case 34:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function checkGenres(_x13) {\n        return _checkGenres.apply(this, arguments);\n      }\n\n      return checkGenres;\n    }(),\n    changeIndex: function changeIndex(context, payload) {\n      context.commit('setIndex', payload.index);\n    },\n    inicializeSpotifyApi: function () {\n      var _inicializeSpotifyApi = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(context) {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                console.log('%c Inicializing Authorization.', 'color: purple;');\n                this.state.spotifyApi.setAccessToken(this.state.accessToken);\n                _context9.next = 4;\n                return context.commit('setInicialized', true);\n\n              case 4:\n                this.dispatch('getUser');\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function inicializeSpotifyApi(_x14) {\n        return _inicializeSpotifyApi.apply(this, arguments);\n      }\n\n      return inicializeSpotifyApi;\n    }()\n  }\n});",{"version":3,"sources":["/Users/andrew/Documents/Github/Spotify-Features/spotify-features-website/src/store.js"],"names":["Vue","Vuex","axios","SpotifyWebApi","require","use","Store","state","testing","spotifyApi","accessToken","user","inicialized","userData","apps","title","path","auth","description","img","color","red","green","blue","index","libraryData","topPlayed","topArtists","complete","done","audioFeaturesDone","artistsDone","genresDone","tracks","artists","favoriteArtists","genres","favoriteGenres","dates","audio_features","acousticness","value","maxchart","minchart","plot","danceability","energy","instrumentalness","liveness","mode","speechiness","tempo","total","valence","bangers","progress","num","message","tempBanger","publicUsers","mutations","setUserData","setPublicUsers","setIndex","setInicialized","setToken","token","setUser","setLibraryData","data","setProgress","setMessage","setTotal","addTracks","concat","addBangerValue","val","plotBanger","spliceBanger","payload","replace","type","splice","pushBanger","push","addAudioFeaturesTotal","addAudioFeature","key","plotAudioFeature","spliceAudioFeatures","pushAudioFeatures","spliceFavoriteArtists","pushFavoriteArtists","artist","pushFavoriteGenres","genre","spliceFavoriteGenres","setFavoriteArtistImage","image","setComplete","addGenre","addArtist","name","addToArtist","addToGenre","pushDate","addToDate","date","averageAudioFeature","setTempBanger","level","setTopPlayed","setTopArtists","actions","getUserData","context","get","id","response","commit","console","log","saveLibrary","JSON","parse","stringify","library","length","Object","keys","privacy","charts","j","i","ids","k","dispatch","trackArtists","map","x","album","images","url","post","getPublicUsers","changeLibraryData","parseAccessToken","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","getAccessToken","authEndpoint","clientId","redirectUri","scopes","join","runLibraryAnalysis","offset","limit","retriveData","now","Date","nt","getTime","month","items","track","added_at","t","date_added","diff","Math","floor","time_range","newTopPlayed","newTopArtists","banger","bangerLevel","analyseData","bangersPos","bangindex","checkArtists","max","added","favoriteArtist","checkGenres","querymax","artistsIds","artistsData","changeIndex","inicializeSpotifyApi","setAccessToken"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios';\n\nvar SpotifyWebApi = require('spotify-web-api-js');\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    testing: true,\n    spotifyApi: new SpotifyWebApi(),\n    accessToken: \"\",\n    user: null,\n    inicialized: false,\n    userData: null,\n    apps: [\n      {\n        title: \"Song Analysis\",\n        path: \"songanalysis\",\n        auth: false,\n        description: [\n          \"View in-depth information about a track including it's happiness, energy and danceability!\",\n          \"After running Library Analysis, Song Analisis will provide additional information based on your Library's statistics.\",\n        ],\n        img: \"search\",\n        color: {red: 238, green: 126, blue: 137},\n        state: true,\n      },\n      {\n        title: \"My Charts\",\n        path: \"mycharts\",\n        auth: true,\n        description: [\n          \"View your personalized top tracks and artists.\",\n          \"View either with a time range of your choice! View your top tracks of all time, or your favorite artists over the last few weeks.\"\n        ],\n        img: \"chart\",\n        color: {red: 230, green: 224, blue: 60},\n        state: true,\n      },\n      {\n        title: \"Library Analysis\",\n        path: \"libraryanalysis\",\n        auth: true,\n        description: [\n          \"How happy is your library? Who is your top saved artist? What are you slowest songs?\",\n          \"Discover the averages and extremes within your library.\",\n          \"Library Analysis gathers all data relavant to your library and process' out some cool statistics!\"\n        ],\n        img: \"library\",\n        color: {red: 240, green: 100, blue: 50},\n        state: true,\n      },\n      {\n        title: \"My Music Mood\",\n        path: \"mymusicmood\",\n        auth: true,\n        description: [\n          \"What does your music say about you?\",\n          \"Based on either your most recently played, or recent top tracks, My Music Mood will attempt to analyse tracks you've been into lately and determine your mood!\",\n        ],\n        img: \"musicmood\",\n        color: {red: 255, green: 165, blue: 30},\n        state: false,\n      },\n      {\n        title: \"Boring-Radar\",\n        path: \"boring\",\n        auth: true,\n        description: [\n          \"Is your music taste BORING?\",\n          \"The Boring-Radar will either confirm or rebute your greatest fears by analysing data from Library Analysis to determine the standard deviation of your library through multiple variables.\",\n        ],\n        img: \"boring\",\n        color: {red: 180, green: 100, blue: 240},\n        state: false,\n      },\n      {\n        title: \"Power Recommends\",\n        path: \"recommends\",\n        auth: true,\n        description: [\n          \"I like this song, but I want one like it but happier. DONE.\",\n          \"Taylor your recommends to fit your exact wishes, and find songs more accuratly attuned to what you're looking for.\",\n          \"Get recommends based on a track, but specify what statistics you'd like your new songs to maintain, or change.\",\n        ],\n        img: \"power\",\n        color: {red: 180, green: 230, blue: 100},\n        state: false,\n      }\n    ],\n    index: 0,\n    libraryData: {\n      topPlayed: [],\n      topArtists: [],\n      complete: {\n        done: false,\n        audioFeaturesDone: false, \n        artistsDone: false,\n        genresDone: false,\n      },\n      tracks: [],\n      artists: {},\n      favoriteArtists: [],\n      genres: {},\n      favoriteGenres: [],\n      dates: [],\n      audio_features: {\n        acousticness: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        danceability: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        energy: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        instrumentalness: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        liveness: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        mode: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [-1],\n        },\n        speechiness: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        tempo: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [-1],\n        },\n        total: 0,\n        valence: \n        {\n          value: 0,\n          maxchart: [],\n          minchart: [],\n          plot: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n        },\n      },\n      bangers: {\n        value: 0,\n        plot: [0,0,0,0,0,0,0,0,0,0],\n        maxchart: [],\n        minchart: [],\n      },\n    },\n    progress: {\n      num: 0,\n      message: \"Pluggin in headphones.\",\n      total: 0,\n    },\n    tempBanger: 0,\n    publicUsers: null,\n  },\n  mutations: {\n    setUserData(state, userData) {\n      state.userData = userData;\n    },\n    setPublicUsers(state, publicUsers) {\n      state.publicUsers = publicUsers;\n    },\n    setIndex(state, index) {\n      state.index = index;\n    },\n    setInicialized(state, inicialized) {\n      state.inicialized = inicialized;\n    },\n    setToken(state, token) {\n      state.accessToken = token;\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    setLibraryData(state, data) {\n      state.libraryData = data;\n    },\n    setProgress(state) {\n      state.progress.num += 1;\n    },\n    setMessage(state, message) {\n      state.progress.message = message;\n    },\n    setTotal(state, total) {\n      state.progress.total = total;\n    },\n    addTracks(state, tracks) {\n      state.libraryData.tracks = state.libraryData.tracks.concat(tracks);\n    },\n    addBangerValue(state, val) {\n      state.libraryData.bangers.value += val;\n    },\n    plotBanger(state, index) {\n      state.libraryData.bangers.plot[index] += 1;\n    },\n    spliceBanger(state, payload) {\n      if (payload.replace != null)\n        state.libraryData.bangers[payload.type].splice(payload.index, payload.num, payload.replace);\n      else \n        state.libraryData.bangers[payload.type].splice(payload.index, payload.num);\n    },\n    pushBanger(state, payload) {\n      state.libraryData.bangers[payload.type].push(payload.value);\n    },\n    addAudioFeaturesTotal(state) {\n      state.libraryData.audio_features.total += 1;\n    },\n    addAudioFeature(state, payload) {\n      state.libraryData.audio_features[payload.key].value += payload.value;\n    },\n    plotAudioFeature(state, payload) {\n      state.libraryData.audio_features[payload.key].plot[payload.index] += 1;\n    },\n    spliceAudioFeatures(state, payload) {\n      if (payload.replace != null)\n        state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num, payload.replace);\n      else \n        state.libraryData.audio_features[payload.key][payload.type].splice(payload.index, payload.num);\n    },\n    pushAudioFeatures(state, payload) {\n      state.libraryData.audio_features[payload.key][payload.type].push(payload.value);\n    },\n    spliceFavoriteArtists(state, payload) {\n      if (payload.replace != null)\n        state.libraryData.favoriteArtists.splice(payload.index, payload.num, payload.replace);\n      else\n        state.libraryData.favoriteArtists.splice(payload.index, payload.num);\n    }, \n    pushFavoriteArtists(state, artist) {\n      state.libraryData.favoriteArtists.push(artist);\n    },\n    pushFavoriteGenres(state, genre) {\n      state.libraryData.favoriteGenres.push(genre);\n    },\n    spliceFavoriteGenres(state, payload) {\n      if (payload.replace != null)\n        state.libraryData.favoriteGenres.splice(payload.index, payload.num, payload.replace);\n      else\n        state.libraryData.favoriteGenres.splice(payload.index, payload.num);\n    }, \n    setFavoriteArtistImage(state, image) {\n      state.libraryData.favoriteArtists[0].image = image;\n    },\n    setComplete(state, payload) {\n      state.libraryData.complete[payload.index] = payload.value;\n    },\n    addGenre(state, payload) {\n      state.libraryData.genres[payload.genre] = payload.value;\n    },\n    addArtist(state, payload) {\n      state.libraryData.artists[payload.name] = payload.value;\n    },\n    addToArtist(state, artist) {\n      state.libraryData.artists[artist].num += 1;\n    },\n    addToGenre(state, payload) {\n      state.libraryData.genres[payload.genre].num += payload.num;\n    },\n    pushDate(state) {\n      state.libraryData.dates.push(0);\n    },\n    addToDate(state, date) {\n      state.libraryData.dates[date] += 1;\n    },\n    averageAudioFeature(state, key){\n      state.libraryData.audio_features[key].value /= state.progress.total;\n    },\n    setTempBanger(state, level) {\n      state.tempBanger = level;\n    },\n    setTopPlayed(state, topPlayed) {\n      state.libraryData.topPlayed = topPlayed;\n    },\n    setTopArtists(state, topArtists) {\n      state.libraryData.topArtists = topArtists;\n    }\n  },\n  actions: {\n    async getUserData(context, payload) {\n      try {\n        let response = await axios.get(\"/api/profile/\" + payload.id);\n        context.commit('setUserData', response.data);\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async saveLibrary(context, payload) {\n      try {\n        let library = await JSON.parse(JSON.stringify(this.state.libraryData));;\n        library.tracks = [this.state.libraryData.tracks.length],\n        library.artists = {num: (Object.keys(this.state.libraryData.artists)).length},\n        library.genres = {num: (Object.keys(this.state.libraryData.genres)).length},\n        library.name = payload.name;\n        library.privacy = payload.privacy;\n\n        let keys = Object.keys(library.audio_features);\n        keys.push(\"bangers\");\n        let charts = ['minchart', 'maxchart'];\n\n        for (var j = 0; j < keys.length; j++)\n        {\n          if (keys[j] == \"total\")\n            continue;\n          for (var i = 0; i < charts.length; i++)\n          {\n            let ids = [];\n            let val = [];\n            if (keys[j] == \"bangers\")\n            {\n              for (var k = 0; k < library[keys[j]][charts[i]].length; k++)\n              {\n                ids.push(library[keys[j]][charts[i]][k].id);\n                val.push(this.state.libraryData.bangers[charts[i]][k].value);\n              }\n              library[keys[j]][charts[i]] = [];\n            }\n            else {\n              for (var k = 0; k < library.audio_features[keys[j]][charts[i]].length; k++)\n              {\n                ids.push(library.audio_features[keys[j]][charts[i]][k].id);\n                val.push(this.state.libraryData.audio_features[keys[j]][charts[i]][k].value);\n              }\n              library.audio_features[keys[j]][charts[i]] = [];\n            }\n            let tracks = await this.dispatch('getTracks', ids);\n            for (var k = 0; k < 10; k++)\n            {\n              let trackArtists = tracks.tracks[k].artists.map(x => x.name);\n              if (keys[j] == \"bangers\")\n              {\n                library[keys[j]][charts[i]].push({name: tracks.tracks[k].name, artists: trackArtists, image: tracks.tracks[k].album.images[0].url, value: val[k]});\n              }\n              else\n              {\n                library.audio_features[keys[j]][charts[i]].push({name: tracks.tracks[k].name, artists: trackArtists, image: tracks.tracks[k].album.images[0].url, value: val[k]});\n              }\n            }\n          }\n        }\n        await axios.post(\"/api/profile/\" + this.state.user.id, library);\n      } catch(error) {\n        console.log(error);\n      }\n    },\n    async getPublicUsers(context, payload) {\n      try {\n        let response = await axios.get('/api/profile/');\n        context.commit('setPublicUsers', response.data);\n      } catch(error) {\n        console.log(error);\n      }\n    },\n    changeLibraryData(context, payload) {\n      context.commit('setLibraryData', payload);\n    },\n    async parseAccessToken(context)\n    {\n      let token = window.location.hash.substring(1).split('&')\n      .reduce(function (initial, item) {\n        if (item) {\n          var parts = item.split('=');\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n      }, {});\n      await context.commit('setToken', token.access_token);\n    },\n    getAccessToken(context)\n    {\n      const authEndpoint = 'https://accounts.spotify.com/authorize';\n      const clientId = '42903eeb2bf943c4bd4903370f7a93f5';\n      let redirectUri = 'http://mymusic.andrewdanielyoung.com/redirect/';\n      if (this.state.testing)\n        redirectUri = 'http://localhost:8080/redirect/';\n      const scopes = [\n        'user-read-recently-played',\n        'user-top-read',\n        'user-library-read',\n        'user-read-email',\n      ];\n      if (!this.state.access_token) {\n        window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\n      }\n    },\n    runLibraryAnalysis(context) {\n      this.dispatch(\"retriveData\", {offset: 0, limit: 50});\n    },\n    async retriveData(context, payload) {\n      let now = new Date();\n      let nt = now.getTime();\n      let month = 2626560000;\n      let response = await this.dispatch('getSavedTracks',{limit: payload.limit, offset: payload.offset});\n      context.commit('setTotal', response.total);\n      if (this.state.progress.num / this.state.progress.total > .8)\n        context.commit('setMessage', \"♪┏(・o･)┛♪┗ ( ･o･) ┓♪\");\n      else if (this.state.progress.num / this.state.progress.total > .6)\n        context.commit('setMessage', \"Sick beats dude.\");\n      else if (this.state.progress.num / this.state.progress.total > .4)\n        context.commit('setMessage', \"Jamming out to your tunes.\");\n      else if (this.state.progress.num / this.state.progress.total > .2)\n        context.commit('setMessage', \"Beep Bop. Analyzing Data.\");\n      let ids = [];\n      for (var i = 0; i < response.items.length; i++)\n      {\n        ids.push(response.items[i].track.id);\n        if (!(response.items[i].track.artists[0].name in this.state.libraryData.artists))\n          context.commit('addArtist', {name: response.items[i].track.artists[0].name, value: {num: 1, id: response.items[i].track.artists[0].id}});\n        else \n          context.commit('addToArtist', response.items[i].track.artists[0].name);\n          \n        let date = new Date(response.items[i].added_at);\n        let t = date.getTime();\n        response.items[i].track.date_added = t;\n        let diff = Math.floor((nt - t) / month);\n        if (this.state.libraryData.dates.length - 1 < diff)\n        {\n          for (var j = 0; j < (diff - (this.state.libraryData.dates.length - 1)); j++)\n          {\n            context.commit('pushDate');\n          }\n          context.commit('pushDate');\n          context.commit('pushDate');\n        }\n        context.commit('addToDate', diff);\n      }\n      let tracks = await this.dispatch('getAudioFeaturesForTracks', ids);\n      await this.dispatch('analyseData', tracks);\n      if (response.items.length == 50)\n        this.dispatch('retriveData', {offset: payload.offset + payload.limit, limit: payload.limit});\n      else {\n        let keys = Object.keys(this.state.libraryData.audio_features);\n        for (var i = 0; i < keys.length; i++)\n        {\n          if (keys[i] == \"total\")\n            continue;\n          context.commit('averageAudioFeature', keys[i]);\n        }\n        context.commit('setComplete', {index: \"done\", value: true});\n        context.commit('setComplete', {index: \"audioFeaturesDone\", value: true});\n        console.log('%c Processing Track Audio Features Complete.', 'color: purple;');\n        await this.dispatch('checkArtists');\n        console.log('%c Processing Artists Complete.', 'color: purple;');\n        await this.dispatch('checkGenres');\n        console.log('%c Processing Genres Complete.', 'color: purple;');\n        let topPlayed = await this.dispatch('getTopTracks',{limit: 20, time_range: \"long_term\"});\n        let topArtists = await this.dispatch('getTopArtists',{limit: 20, time_range: \"long_term\"});\n        let newTopPlayed = [];\n        let newTopArtists = [];\n        for (let i = 0; i < topPlayed.length; i++)\n        {\n          let trackArtists = topPlayed[i].artists.map(x => x.name);\n          newTopPlayed.push({name: topPlayed[i].name, artists: trackArtists, image: topPlayed[i].album.images[0].url});\n        }\n        for (let i = 0; i < topArtists.length; i++)\n        {\n          newTopArtists.push({name: topArtists[i].name, image: topArtists[i].images[0].url, genres: topArtists[i].genres});\n        }\n        await context.commit('setTopPlayed', newTopPlayed);\n        await context.commit('setTopArtists', newTopArtists);\n      }\n    },\n    banger(context, payload) {\n      let bangerLevel = ((payload.tempo - 96 + (payload.energy * 100) + (payload.danceability*50)) / 210);\n      context.commit('setTempBanger', bangerLevel);\n    },\n    async analyseData(context, tracks) {\n      context.commit('addTracks', tracks);\n      let keys = Object.keys(this.state.libraryData.audio_features);\n      for (let i = 0; i < tracks.length; i++)\n      {\n        await this.dispatch('banger', {tempo: tracks[i].tempo, energy: tracks[i].energy, danceability: tracks[i].danceability});\n        context.commit('addBangerValue', this.state.tempBanger);\n        let bangersPos = (Math.floor(this.state.tempBanger * 10));\n        if (bangersPos < this.state.libraryData.bangers.plot.length)\n          context.commit('plotBanger', bangersPos);\n        else\n          context.commit('plotBanger', this.state.libraryData.bangers.plot.length - 1);\n        for (let j = 0; j < keys.length; j++)\n        {\n          if (keys[j] == \"total\")\n          {\n            context.commit('addAudioFeaturesTotal');\n            continue;\n          }\n          context.commit('addAudioFeature', {key: keys[j], value: tracks[i][keys[j]]})\n          if (this.state.libraryData.audio_features[keys[j]].plot[0] != -1)\n            context.commit('plotAudioFeature', {key: keys[j], index: (Math.floor(tracks[i][keys[j]] * 10))})\n          for (let k = 0; k < this.state.libraryData.audio_features[keys[j]].minchart.length; k++)\n          {\n            if (this.state.libraryData.audio_features[keys[j]].minchart[k].value > tracks[i][keys[j]])\n            {\n              context.commit('spliceAudioFeatures', {key: keys[j], type: \"minchart\", index: k, num: 0, replace: {id: tracks[i].id, value: tracks[i][keys[j]]}});\n              if (this.state.libraryData.audio_features[keys[j]].minchart.length > 20)\n                context.commit('spliceAudioFeatures', {key: keys[j], type: \"minchart\", index: 20, num: 1, replace: null});\n              break;\n            }\n            if (k == this.state.libraryData.audio_features[keys[j]].minchart.length - 1 && this.state.libraryData.audio_features[keys[j]].minchart.length < 20)\n            {\n              context.commit('pushAudioFeatures', {key: keys[j], type: \"minchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\n              break;\n            }\n          }\n          if (this.state.libraryData.audio_features[keys[j]].minchart.length == 0)\n            context.commit('pushAudioFeatures', {key: keys[j], type: \"minchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\n          for (let k = 0; k < this.state.libraryData.audio_features[keys[j]].maxchart.length; k++)\n          {\n            if (this.state.libraryData.audio_features[keys[j]].maxchart[k].value < tracks[i][keys[j]])\n            {\n              context.commit('spliceAudioFeatures', {key: keys[j], type: \"maxchart\", index: k, num: 0, replace: {id: tracks[i].id, value: tracks[i][keys[j]]}});\n              if (this.state.libraryData.audio_features[keys[j]].maxchart.length > 20)\n                context.commit('spliceAudioFeatures', {key: keys[j], type: \"maxchart\", index: 20, num: 1, replace: null});\n              break;\n            }\n            if (k == this.state.libraryData.audio_features[keys[j]].maxchart.length - 1 && this.state.libraryData.audio_features[keys[j]].maxchart.length < 20)\n            {\n              context.commit('pushAudioFeatures', {key: keys[j], type: \"maxchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\n              break;\n            }\n          }\n          if (this.state.libraryData.audio_features[keys[j]].maxchart.length == 0)\n            context.commit('pushAudioFeatures', {key: keys[j], type: \"maxchart\", value: {id: tracks[i].id, value: tracks[i][keys[j]]}});\n        }\n        await this.dispatch('banger', {tempo: tracks[i].tempo, energy: tracks[i].energy, danceability: tracks[i].danceability});\n        let bangindex = this.state.tempBanger;\n        for (let k = 0; k < this.state.libraryData.bangers.minchart.length; k++)\n        {\n          if (this.state.libraryData.bangers.minchart[k].value > bangindex)\n          {\n            context.commit('spliceBanger', {type: \"minchart\", index: k, num: 0, replace: {id: tracks[i].id, value: bangindex}});\n            if (this.state.libraryData.bangers.minchart.length > 20)\n              context.commit('spliceBanger', {type: \"minchart\", index: 20, num: 1, replace: null});\n            break;\n          }\n          if (k == this.state.libraryData.bangers.minchart.length - 1 && this.state.libraryData.bangers.minchart.length < 20)\n          {\n            context.commit('pushBanger', {type: \"minchart\", value: {id: tracks[i].id, value: bangindex}});\n            break;\n          }\n        }\n        if (this.state.libraryData.bangers.minchart.length == 0)\n          context.commit('pushBanger', {type: \"minchart\", value: {id: tracks[i].id, value: bangindex}});\n        for (let k = 0; k < this.state.libraryData.bangers.maxchart.length; k++)\n        {\n          if (this.state.libraryData.bangers.maxchart[k].value < bangindex)\n          {\n            context.commit('spliceBanger', {type: \"maxchart\", index: k, num: 0, replace: {id: tracks[i].id, value: bangindex}});\n            if (this.state.libraryData.bangers.maxchart.length > 20)\n              context.commit('spliceBanger', {type: \"maxchart\", index: 20, num: 1, replace: null});\n            break;\n          }\n          if (k == this.state.libraryData.bangers.maxchart.length - 1 && this.state.libraryData.bangers.maxchart.length < 20)\n          {\n            context.commit('pushBanger', {type: \"maxchart\", value: {id: tracks[i].id, value: bangindex}});\n            break;\n          }\n        }\n        if (this.state.libraryData.bangers.maxchart.length == 0)\n          context.commit('pushBanger', {type: \"maxchart\", value: {id: tracks[i].id, value: bangindex}});\n        context.commit('setProgress');\n      }\n    },\n    async checkArtists(context) {\n      let max = 4;\n      for (var artist in this.state.libraryData.artists) {\n        let added = false;\n        for (var i = 0; i < this.state.libraryData.favoriteArtists.length; i++)\n        {\n          if (this.state.libraryData.favoriteArtists[i].num < this.state.libraryData.artists[artist].num)\n          {\n            context.commit('spliceFavoriteArtists', {index: i, num: 0, replace: {name: artist, num: this.state.libraryData.artists[artist].num, id: this.state.libraryData.artists[artist].id}});\n            added = true;\n            break;\n          }\n          if (this.state.libraryData.favoriteArtists.length > max)\n            context.commit('spliceFavoriteArtists', {index: this.state.libraryData.favoriteArtists.length - 1, num: 1, replace: null});\n        }\n        if (this.state.libraryData.favoriteArtists.length < max && !added) \n          context.commit('pushFavoriteArtists', {name: artist, num: this.state.libraryData.artists[artist].num, id: this.state.libraryData.artists[artist].id});\n      }\n      let favoriteArtist = await this.dispatch('getArtist', this.state.libraryData.favoriteArtists[0].id);\n      context.commit('setFavoriteArtistImage', favoriteArtist.images[0].url);\n      \n      context.commit('setComplete', {index: \"artistsDone\", value: true});\n    },\n    async checkGenres(context) {\n      let max = 4;\n      let querymax = 50;\n      let artistsIds = [];\n      for (var artist in this.state.libraryData.artists) {\n        if (querymax == 0)\n        {\n          let artistsData = await this.dispatch('getArtists', artistsIds);\n          for (var i = 0; i < artistsData.artists.length; i++)\n          {\n            for (var j = 0; j < artistsData.artists[i].genres.length; j++)\n            {\n              if (!(artistsData.artists[i].genres[j] in this.state.libraryData.genres))\n                context.commit('addGenre', {genre: artistsData.artists[i].genres[j], value: {num: this.state.libraryData.artists[artist].num, genre: artistsData.artists[i].genres[j]}})\n              else \n                context.commit('addToGenre', {genre: artistsData.artists[i].genres[j], num: this.state.libraryData.artists[artist].num})\n            }\n          }\n          querymax = 50;\n          artistsIds = [];\n        }\n        if (artist in this.state.libraryData.artists)\n        { \n          artistsIds.push(this.state.libraryData.artists[artist].id);\n          querymax -= 1;\n        }\n      }\n\n      for (var genre in this.state.libraryData.genres) {\n        let added = false;\n        for (var i = 0; i < this.state.libraryData.favoriteGenres.length; i++)\n        {\n          if (this.state.libraryData.favoriteGenres[i].num < this.state.libraryData.genres[genre].num)\n          {\n            context.commit('spliceFavoriteGenres', {index: i, num: 0, replace: {genre: genre, num: this.state.libraryData.genres[genre].num}});\n            added = true;\n            break;\n          }\n          if (this.state.libraryData.favoriteGenres.length > max)\n            context.commit('spliceFavoriteGenres', {index: this.state.libraryData.favoriteGenres.length - 1, num: 1, replace: null});\n        }\n        if (this.state.libraryData.favoriteGenres.length < max && !added)\n          context.commit('pushFavoriteGenres', {genre: genre, num: this.state.libraryData.genres[genre].num})\n      }\n      context.commit('setComplete', {index: \"genresDone\", value: true});\n    },\n    changeIndex(context, payload) {\n      context.commit('setIndex', payload.index);\n    },\n    async inicializeSpotifyApi(context) {\n      console.log('%c Inicializing Authorization.', 'color: purple;');\n      this.state.spotifyApi.setAccessToken(this.state.accessToken);\n      await context.commit('setInicialized', true);\n      this.dispatch('getUser');\n    },\n    \n    \n  }\n})\n\n\n"]}]}