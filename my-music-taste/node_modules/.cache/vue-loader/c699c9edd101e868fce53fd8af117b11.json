{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/components/Library/Extremes.vue?vue&type=style&index=0&id=187c422a&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/components/Library/Extremes.vue","mtime":1573230899902},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouRXh0cmVtZXMgewogICAgbWFyZ2luLWJvdHRvbTogNzVweDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmxpc3QgewogICAgbWFyZ2luLXRvcDogMzVweDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MjBweCkgewogICAgLmxpc3QgewogICAgICAgIG1hcmdpbi10b3A6IDE1cHg7CiAgICB9CgogICAgLkV4dHJlbWVzIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7CiAgICB9Cn0KCi5zZWFyY2hJdGVtIHsKICAgIG1heC13aWR0aDogOTAwcHg7CiAgICBtYXJnaW46IDAgYXV0bzsKfQoKLmNob29zZWJ1dHRvbiB7CiAgcmlnaHQ6IDEwcHggIWltcG9ydGFudDsKICB0b3A6IC0yMHB4ICFpbXBvcnRhbnQ7Cgp9Cg=="},{"version":3,"sources":["Extremes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"Extremes.vue","sourceRoot":"src/components/Library","sourcesContent":["<template>\n    <div class=\"Extremes\">\n        <div v-if=\"progress.extremesLoaded || profile\">\n        <Selector @toggleSave=\"toggleSave2\" :save=\"save\" :state=\"state\" :items=\"selector\" :load=\"false\" :override=\"false\" @pending=\"pending\" @selection=\"select\"/>\n        <div class=\"list\" v-if=\"list.length > 0 && !save\">\n            <SearchItem :profile=\"profile\" :topsaved=\"false\" class=\"searchItem\" v-for=\"(track, index) in list\" :saved=\"true\"  :showNum=\"true\" :key=\"track.id + index\" :data=\"track\" :index=\"index\" type=\"track\"/>\n        </div>\n        <Empty class=\"list\" v-if=\"list.length <= 0 && !save\"/>\n        <div class=\"list\" v-if=\"list.length > 0 && save\">\n            <SearchItem :profile=\"profile\" :topsaved=\"false\" class=\"searchItem\" v-for=\"index in 10\" :saved=\"true\"  :showNum=\"true\" :key=\"list[index - 1].id + index\" :data=\"list[index - 1]\" :index=\"index - 1\" type=\"track\"/>\n        </div>\n        <Empty class=\"list\" v-if=\"list.length <= 0 && save\"/>\n        </div>\n        <Loading v-else/>\n        \n    </div>\n</template>\n\n<script>\nimport Selector from '@/components/Library/Selector.vue'\nimport SearchItem from '@/components/Library/SearchItem.vue'\nimport Empty from '@/components/Library/Empty.vue'\nimport Loading from '@/components/General/Loading.vue'\n\nexport default {\n    name: 'Extremes',\n    props: {\n        save: Boolean,\n        state: Boolean,\n        profile: Boolean,\n        data: Object, \n        name: String,\n    },\n    components: {\n        Selector,\n        SearchItem,\n        Empty,\n        Loading\n    },\n    data() {\n        return {\n            list: [],\n            type: \"track\",\n            selector: [\n                {type: \"text\", text: \"List My\"}, \n                {\n                    type: \"select\", \n                    options: [\n                        {value: \"maxchart\", text: \"Most\"},\n                        {value: \"minchart\", text: \"Least\"}\n                    ]\n                },\n                {\n                    type: \"select\", \n                    options: [\n                        {value: \"valence\", text: \"Happy\"},\n                        {value: \"energy\", text: \"Energetic\"},\n                        {value: \"danceability\", text: \"Danceable\"},\n                        {value: \"tempo\", text: \"Speedy\"},\n                        {value: \"banger\", text: \"Bangerific\"},\n                        {value: \"acousticness\", text: \"Accoustic\"},\n                        {value: \"instrumentalness\", text: \"Instrumental\"},\n                        {value: \"liveness\", text: \"Live\"},\n                        {value: \"speechiness\", text: \"Talking\"},\n                    ]\n                }\n            ],\n            catagory: \"\",\n            chart: \"\",\n            pendingStatus: true,\n\n        }\n    },\n    methods: {\n        toggleSave2() {\n            this.$emit('toggleSave');\n        },\n        select(val) {\n            if (val == 'maxchart' || val == 'minchart')\n                this.chart = val;\n            else \n                this.catagory = val;\n            this.checkResults();\n        },\n        checkResults() {\n            if (this.catagory != \"\" && this.chart != \"\") {\n                let ids = this.audioFeatures[this.catagory][this.chart];\n                for (var i = 0; i < ids.length; i++) {\n                    this.list.push(this.tracks[ids[i]]);\n                }\n                this.pendingStatus = false;\n            }\n        },\n        pending() {\n            this.pendingStatus = true;\n            this.list = [];\n        }\n    },\n    computed: {\n        audioFeatures() {\n        if (!this.profile)\n            return this.$store.state.audioFeatures;\n        return this.data.audioFeatures;\n        },\n        tracks() {\n            if (!this.profile)\n                return this.$store.state.tracks;\n            return this.data.tracks;\n        },\n        progress() {\n            return this.$store.state.progress;\n        }\n    },\n    created() {\n        if (this.profile)\n            this.selector.splice(0, 1, {type: \"text\", text: \"List \" + this.name + \"'s\"});\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.Extremes {\n    margin-bottom: 75px;\n    position: relative;\n}\n\n.list {\n    margin-top: 35px;\n    position: relative;\n}\n\n@media only screen and (max-width: 720px) {\n    .list {\n        margin-top: 15px;\n    }\n\n    .Extremes {\n        margin-bottom: 0px;\n    }\n}\n\n.searchItem {\n    max-width: 900px;\n    margin: 0 auto;\n}\n\n.choosebutton {\n  right: 10px !important;\n  top: -20px !important;\n\n}\n</style>\n"]}]}