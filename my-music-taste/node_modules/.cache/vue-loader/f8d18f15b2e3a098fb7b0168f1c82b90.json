{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/components/Library/TopSaved.vue?vue&type=style&index=0&id=bd1ddb54&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/components/Library/TopSaved.vue","mtime":1573230899903},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouVG9wU2F2ZWQgewogICAgbWFyZ2luLWJvdHRvbTogNzVweDsKfQoKLmxpc3QgewogICAgbWFyZ2luLXRvcDogMzVweDsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkgewogICAgLmxpc3QgewogICAgICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgICB9CgogICAgLlRvcFNhdmVkIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHggIWltcG9ydGFudDsKICAgIH0KfQoKLnNlYXJjaEl0ZW0gewogICAgbWF4LXdpZHRoOiA5MDBweDsKICAgIAogICAgbWFyZ2luOiAwIGF1dG87Cn0KCi5mYWRlIHsKICBvcGFjaXR5OiAuMzsKfQo="},{"version":3,"sources":["TopSaved.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"TopSaved.vue","sourceRoot":"src/components/Library","sourcesContent":["<template>\n    <div class=\"TopSaved\">\n        <div v-if=\"progress.extremesLoaded || profile\">\n        <Selector @toggleSave=\"toggleSave2\" :save=\"save\" :state=\"giveState\" :items=\"filterSelector\" :load=\"false\" :override=\"false\" @pending=\"pending\" @selection=\"select\"/>\n        <div class=\"list\" v-if=\"list.length > 0 && !save\">\n            <SearchItem :profile=\"profile\" :profileData=\"profileData\" :topsaved=\"true\" class=\"searchItem\" v-for=\"(track, index) in list\" :saved=\"true\" :showNum=\"true\" :key=\"'topsaved' + index\" :data=\"track\" :index=\"index\" :type=\"type\"/>\n        </div>\n        <Empty class=\"list\" v-if=\"list.length <= 0 && !save\"/>\n        <div class=\"list\" v-if=\"list.length > 0 && save\" :class=\"{fade: (type == 'artist' && !stateartists) || (type == 'genre' && !stategenres)}\">\n            <SearchItem :profile=\"profile\"  :profileData=\"profileData\" :topsaved=\"true\" class=\"searchItem\" v-for=\"index in 20\" :saved=\"true\" :showNum=\"true\" :key=\"'topsaved' + index\" :data=\"list[index - 1]\" :index=\"index - 1\" :type=\"type\"/>\n        </div>\n        <Empty class=\"list\" v-if=\"list.length <= 0 && save\"/>\n        </div>\n        <Loading v-else/>\n    </div>\n</template>\n\n<script>\nimport Selector from '@/components/Library/Selector.vue'\nimport SearchItem from '@/components/Library/SearchItem.vue'\nimport Empty from '@/components/Library/Empty.vue'\nimport Loading from '@/components/General/Loading.vue'\n\nexport default {\n  name: 'TopSaved',\n  props: {\n      save: Boolean,\n      stateartists: Boolean,\n      stategenres: Boolean,\n      profile: Boolean,\n      data: Object,\n      artistsAllowed: Boolean,\n      genresAllowed: Boolean,\n  },\n  components: {\n      Selector,\n      SearchItem,\n      Empty,\n      Loading\n  },\n  data() {\n    return {\n        list: [],\n        type: \"artists\",\n        selector: [\n            {type: \"text\", text: \"My Top Saved\"}, \n            {\n                type: \"select\", \n                options: [\n                    {value: \"artists\", text: \"Artists\"},\n                    {value: \"genres\", text: \"Genres\"}\n                ]\n            },\n        ],\n        chart: \"\",\n        pendingStatus: true,\n\n    }\n  },\n    methods: {\n        toggleSave2() {\n            this.$emit('toggleSave', \"most_saved_\" + this.type + \"s\");\n        },\n        select(val) {\n            this.chart = val;\n            if (val == \"artists\")\n                this.type = \"artist\";\n            else\n                this.type = \"genre\";\n            this.checkResults();\n        },\n        checkResults() {\n            if (this.catagory != \"\") {\n                let ids = this.topSaved[this.chart];\n                for (var i = 0; i < ids.length; i++) {\n                    if (!this.profile)\n                        this.list.push(this.$store.state[this.chart][ids[i]]);\n                    else\n                        this.list.push(this.data[this.chart][ids[i]]);\n                }\n                this.pendingStatus = false;\n            }\n        },\n        pending() {\n            this.pendingStatus = true;\n            this.list = [];\n        },\n        filter() {\n            if (!this.data.artistsAllowed) {\n                this.selector.splice(0, 2, {type: \"text\", text: this.data.name + \"'s Top Saved Genres\"});\n            }\n            else if (!this.data.genresAllowed) {\n                this.selector.splice(0, 2, {type: \"text\", text: this.data.name + \"'s Top Saved Artists\"});\n            }\n            else {\n                this.selector.splice(0, 1, {type: \"text\", text: this.data.name + \"'s Top Saved\"})\n            }\n        }\n    },\n    computed: {\n        giveState() {\n            if (this.type == 'genre')\n                return this.stategenres;\n            return this.stateartists;\n        },\n        topSaved() {\n            if (!this.profile)\n                return this.$store.state.topSaved;\n            return this.data.topSaved;\n        },\n        progress() {\n            return this.$store.state.progress;\n        },\n        filterSelector() {\n            if (!this.profile)\n                return this.selector;\n            this.filter();\n            return this.selector;\n        },\n        profileData() {\n            if (!this.profile)\n                return null;\n            return {genres: this.data.genres, artists: this.data.artists}\n        }\n\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.TopSaved {\n    margin-bottom: 75px;\n}\n\n.list {\n    margin-top: 35px;\n}\n\n@media only screen and (max-width: 500px) {\n    .list {\n        margin-top: 10px;\n    }\n\n    .TopSaved {\n        margin-bottom: 0px !important;\n    }\n}\n\n.searchItem {\n    max-width: 900px;\n    \n    margin: 0 auto;\n}\n\n.fade {\n  opacity: .3;\n}\n</style>\n"]}]}