{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/views/SearchSongs.vue?vue&type=style&index=0&id=9465a428&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/views/SearchSongs.vue","mtime":1572286240086},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sb2FkaW5nIHsKICBtYXJnaW4tdG9wOiAxMDBweDsKfQoKI25vLXJlc3VsdHMgaDEgewogIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTcxKTsKICBtYXJnaW4tdG9wOiAxMDBweDsKICBmb250LXdlaWdodDogbGlnaHRlcjsKfQo="},{"version":3,"sources":["SearchSongs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SearchSongs.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"main-flex\" class=\"searchsong\">\n    <NavBar/>\n    <div id=\"main\">\n        <SearchBar @changed=\"search\"/>\n        <SearchItem v-for=\"(track, index) in list\" :key=\"track.id + index\" :data=\"track\" :index=\"index\" type=\"track\"/>\n        <div class=\"loading\" v-if=\"!trackSelected && list.length == 0 && waiting && !empty\">\n          <div v-for=\"bar in 4\" :key=\"'loadingbar'+bar\" class=\"bar\" :style=\"{'--delay': + (bar - 1)}\"/>\n        </div>\n        <div id=\"no-results\" v-if=\"!trackSelected && list.length == 0 && !waiting && !load && !empty\">\n          <h1>No Results Found</h1>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport NavBar from '@/components/NavBar.vue'\nimport SearchBar from '@/components/SearchBar.vue'\nimport SearchItem from '@/components/SearchItem.vue'\n\nexport default {\n  name: 'searchsong',\n  components: {\n    NavBar,\n    SearchBar,\n    SearchItem\n  },\n  data() {\n      return {\n        trackSelected: false,\n      list: [],\n      trackData: null,\n      load: true,\n      waiting: false,\n      empty: true,\n      setId: 0,\n      trackPrepared: false,\n\n      trackId: \"\",\n      }\n  },\n  methods: {\n    async search(query) {\n      if (query == \"\")\n      {\n        this.empty = true;\n        this.trackPrepared = false;\n        this.trackSelected = false;\n        this.waiting = false;\n        this.list = [];\n        return;\n      }\n      this.list = [];\n      this.trackPrepared = false;\n      this.trackSelected = false;\n      this.empty = false;\n      this.load = false;\n      this.waiting = true;\n      this.setId += 1;\n      let id = this.setId;\n      let promise = await this.$store.dispatch('searchSpotify', {query: query});\n      if (id != this.setId)\n      {\n        return;\n      }\n      this.waiting = false;\n      this.trackSelected = false;\n      this.list = promise.tracks.items;\n    },\n  },\n  computed: {\n    inicialized() {\n      return this.$store.state.inicialized;\n    },\n  },\n  created() {\n    if (!this.inicialized)\n      this.$router.push(\"/login\");\n  }\n}\n</script>\n\n<style scoped>\n.loading {\n  margin-top: 100px;\n}\n\n#no-results h1 {\n  color: rgba(255, 255, 255, 0.171);\n  margin-top: 100px;\n  font-weight: lighter;\n}\n</style>"]}]}