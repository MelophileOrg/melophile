{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/views/Analysis/ArtistAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/views/Analysis/ArtistAnalysis.vue","mtime":1573230899905},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ArtistAnalysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ArtistAnalysis.vue","sourceRoot":"src/views/Analysis","sourcesContent":["<template>\n  <div id=\"main-flex\" class=\"artistanalysis\">\n    <NavBar/>    \n    <div id=\"main\">\n      <GoBackSearch/>\n      <div class=\"windows\">\n\n        <div class=\"window\" :style=\"{'--delay': 0}\">\n          <div v-if=\"artistData != null\" class=\"flex\">\n            <div class=\"flex\">\n              <div class=\"col\">\n                <div id=\"artist-image\" :style=\"{backgroundImage: 'url(\\'' + artistData.image + '\\')'}\"/>\n              </div>\n              <div class=\"col fit\">\n                <h1 id=\"artist-name\">{{artistData.name}}</h1>\n                <h2>{{Math.round(artistData.popularity)}} / 100 Popularity</h2>\n                <h2>{{formatNumber(artistData.followers)}} Followers</h2>\n              </div>\n            </div>\n          </div>\n          <Loading v-else/>\n        </div>\n\n        <div class=\"window\" :style=\"{'--delay': 1}\" v-if=\"progress.tracksLoaded\">\n          <div v-if=\"artistData != null\" class=\"flex\">\n            <div class=\"flex\">\n              <div class=\"col\">\n                <div id=\"artist-image\" class=\"library\"/>\n              </div>\n              <div class=\"col fit\">\n                <h1 id=\"artist-name\">Liked Songs:</h1>\n                <h2 v-if=\"timelineReady && !noneTimeline\">First Liked: {{oldestLiked}}</h2>\n                <h2 v-if=\"progress.tracksLoaded && !noneTimeline\">{{songsSaved}}</h2>\n                <h2 v-if=\"!progress.tracksLoaded\">Finding Saved Songs...</h2>\n                <h4 id=\"nosongs\" v-if=\"noneTimeline\">No Songs Liked</h4>\n              </div>\n            </div>\n          </div>\n          <Loading v-else/>\n        </div>\n\n\n        \n\n        <div class=\"window\" :style=\"{'--delay': + 3}\">\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Top Track's Characteristics:</h3>\n          <div v-if=\"topTracksReady\">\n            <div>\n              <PercentBar title=\"Happiness\" :percent=\"sumTop('valence')\" :color=\"audioFeatures.valence.color\" />\n              <PercentBar title=\"Energy\" :percent=\"sumTop('energy')\" :color=\"audioFeatures.energy.color\" />\n              <PercentBar title=\"Danceability\" :percent=\"sumTop('danceability')\" :color=\"audioFeatures.danceability.color\" />\n            </div>\n          </div>\n          <Loading v-else/>\n        </div>\n\n        <Spotlight :delay=\"2\" :numOff=\"true\" :override=\"artistData != null\" title=\"Artist Genres:\" :list=\"genresComputed\" image=\"\"/>\n\n        <FeaturedTracks :style=\"{'--delay': + 4}\" class=\"featuredtracks\" :saved=\"false\" :none=\"false\" :override=\"topTracksReady\" title=\"Artist Top Tracks:\" :ids=\"topTracks\"/>\n\n        <Timeline :none=\"noneTimeline\" :small=\"true\" :override=\"timelineReady\" title=\"When You Liked Tracks:\" instructions=\"\" :max=\"-1\" :delay=\"5\" :bars=\"datesAdded\" y_axis=\"Number of Songs\" :color=\"{red: 74, green: 189, blue: 180}\"/>\n\n        <div class=\"window\" :style=\"{'--delay': + 6}\">\n          <h3  class=\"window-title\" v-if=\"artistData != null\">Liked Track's Characteristics:</h3>\n          <div v-if=\"audioFeaturesReady\">\n            <div v-if=\"!none\">\n              <PercentBar title=\"Happiness\" :percent=\"artistData.valence\" :color=\"audioFeatures.valence.color\" />\n              <PercentBar title=\"Energy\" :percent=\"artistData.energy\" :color=\"audioFeatures.energy.color\" />\n              <PercentBar title=\"Danceability\" :percent=\"artistData.danceability\" :color=\"audioFeatures.danceability.color\" />\n            </div>\n            <h4 v-else>No Songs Liked</h4>\n          </div>\n          <Loading class=\"displace\" v-else/>\n        </div>\n\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Happiness:\" :delay=\"7\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.valence)\" max_tag=\"Happy\" min_tag=\"Sad\" y_axis=\"Number of Songs\" :color=\"audioFeatures.valence.color\"/>\n\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Energy:\" :delay=\"8\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.energy)\" max_tag=\"Hyper\" min_tag=\"Peaceful\" y_axis=\"Number of Songs\" :color=\"audioFeatures.energy.color\"/>\n\n        <Graph :zero=\"notSaved\" :override=\"progress.tracksLoaded\" title=\"Liked Tracks Danceability:\" :delay=\"9\" :bars=\"cleanGraphDataForwards(audioFeaturesGraphs.danceability)\" max_tag=\"Let's dance!\" min_tag=\"Couch Potato\" y_axis=\"Number of Songs\" :color=\"audioFeatures.danceability.color\"/>\n\n        <FeaturedTracks :style=\"{'--delay': + 10}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"First Liked Tracks:\" :ids=\"oldestTracks\"/>\n\n        <FeaturedTracks :style=\"{'--delay': + 11}\" class=\"featuredtracks\" :saved=\"true\" :none=\"noneTimeline\" :override=\"timelineReady\" title=\"Recently Liked Tracks:\" :ids=\"newestTracks\"/>\n        \n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport NavBar from '@/components/General/NavBar.vue'\nimport Loading from '@/components/General/Loading.vue'\nimport GoBackSearch from '@/components/Library/GoBackSearch.vue'\nimport Timeline from '@/components/Analysis/Timeline.vue'\nimport FeaturedTracks from '@/components/Analysis/FeaturedTracks.vue'\nimport PercentBar from '@/components/Analysis/PercentBar.vue'\nimport Spotlight from '@/components/Library/Spotlight.vue'\nimport Graph from '@/components/Analysis/Graph.vue'\n\nexport default {\n  name: 'artistanalysis',\n  components: {\n      NavBar,\n      Loading,\n      GoBackSearch,\n      Timeline,\n      FeaturedTracks,\n      PercentBar,\n      Spotlight,\n      Graph\n  },\n  data() {\n      return {\n        artistData: null,\n        libraryLoaded: false,\n        interval: null,\n        timelineReady: false,\n        audioFeaturesReady: false,\n        topTracksReady: false,\n        audioFeaturesGraphs: {\n          valence: [0,0,0,0,0,0,0,0,0,0],\n          energy: [0,0,0,0,0,0,0,0,0,0],\n          danceability: [0,0,0,0,0,0,0,0,0,0],\n        }\n      }\n  },\n  methods: {\n    cleanGraphDataForwards(bars) {\n      let graphData = [];\n      for (let i = 0; i < bars.length; i++) {\n        graphData.push({value: bars[i], tag: bars[i]});\n      }\n      return graphData;\n    },\n    formatNumber(num) {\n      let millions = Math.floor(num / 1000000);\n      let thousands = Math.floor(num / 1000) % 1000;\n      let remainder = num % 1000;\n      let zeros = \"\";\n      let zeros2 = \"\";\n      if (thousands < 100)\n          zeros2 += \"0\"\n      if (thousands < 10)\n          zeros2 += \"0\"\n      if (remainder < 100)\n          zeros += \"0\"\n      if (remainder < 10)\n          zeros += \"0\"\n      if (millions > 0)\n        return millions + \",\" + zeros2 + thousands + \",\" + zeros + remainder;\n      if (thousands > 0) \n          return thousands + \",\" + zeros + remainder;\n      return remainder;\n    },\n    async checkTracksLoaded() {\n      if (this.progress.tracksLoaded) {\n        let response = await this.$store.dispatch('artistTracks', this.artistData);\n        this.artistData.tracks = response;\n        this.processTracks();\n        response = await this.$store.dispatch('artistTimeline', this.artistData);\n        this.artistData.timeline = response.timeline;\n        this.artistData.oldest = response.oldest;\n        this.artistData.newest = response.newest;\n        clearInterval(this.interval);\n        this.timelineReady = true;\n      }\n    },\n    sumTop(type) {\n      let sum = 0;\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\n        sum += this.artistData.topSongs[i][type];\n      }\n      return sum / this.artistData.topSongs.length;\n    },\n    cleanGraphData(bars) {\n      let graphData = [];\n      for (let i = bars.length - 1; i >= 0; i--) {\n        graphData.push({value: bars[i], tag: bars[i]});\n      }\n      return graphData;\n    },\n    reverse(arr) {\n      let newArr = [];\n      for (let i = arr.length - 1; i >= 0; i--) {\n        newArr.push(arr[i]);\n      }\n      return newArr;\n    },\n    processTracks() {\n      let averages = {valence: 0, danceability: 0, energy: 0};\n      let keys = Object.keys(averages);\n      for (let i = 0; i < keys.length; i++) {\n        if (this.artistData.tracks.length == 0)\n          break;\n        for (let j = 0; j < this.artistData.tracks.length; j++) {\n          averages[keys[i]] += this.artistData.tracks[j][keys[i]];\n          this.audioFeaturesGraphs[keys[i]][Math.floor(this.artistData.tracks[j][keys[i]] * 10)] += 1;\n        }\n        this.artistData[keys[i]] = averages[keys[i]] / this.artistData.tracks.length;\n      }\n      this.audioFeaturesReady = true;\n    },\n    async getTopSongs() {\n      this.artistData.topSongs = await this.$store.dispatch('artistTopTracks', this.$route.params.id);\n      for (let i = 0; i < this.artistData.topSongs.length; i++) {\n        try {\n          this.artistData.topSongs[i].image = this.artistData.topSongs[i].album.images[0].url;\n        } catch(error) {\n          this.artistData.topSongs[i].image = \"\";\n        }\n      }\n      this.topTracksReady = true;\n    },\n  },\n  computed: {\n    topTracks() {\n      if (this.topTracksReady) {\n        return this.artistData.topSongs.slice(0, 3);\n      }\n      return [];\n    },\n    oldestLiked() {\n      let month = this.oldestTracks[0].month;\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let now = new Date();\n      let nowMonth = now.getMonth();\n      let year = 0;\n      nowMonth -= month;\n      nowMonth -= 1;\n      while (nowMonth < 0) {\n          year += 1;\n          nowMonth = 12 + nowMonth;\n      } \n      let returnYear = (now.getFullYear() - year);\n      return months[nowMonth] + \", \" + returnYear;\n    },\n    inicialized() {\n      return this.$store.state.inicialized;\n    },\n    progress() {\n      return this.$store.state.progress;\n    },\n    notSaved() {\n      if (!this.progress.tracksLoaded)\n        return false;\n      if (!(this.$route.params.id in this.$store.state.artists))\n        return true;\n      return this.$store.state.artists[this.$route.params.id].tracks.length == 0;\n    },\n    songsSaved() {\n      if (this.$route.params.id in this.$store.state.artists) {\n        return this.$store.state.artists[this.$route.params.id].tracks.length + \" Songs Liked\";\n      }\n      return \"\";\n    },\n    datesAdded() {\n      if (!this.timelineReady)\n        return [];\n      return this.cleanGraphData(this.artistData.timeline);\n    },\n    oldestTracks() {\n      if (!this.timelineReady)\n        return [];\n      return this.artistData.oldest;\n    },\n    newestTracks() {\n      if (!this.timelineReady)\n        return [];\n      return this.reverse(this.artistData.newest);\n    },\n    audioFeatures() {\n      return this.$store.state.audioFeatures;\n    },\n    none() {\n      if (this.audioFeaturesReady) {\n        if (this.artistData.tracks.length == 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    noneTimeline() {\n      if (this.timelineReady) {\n        if (this.artistData.timeline.length == 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    genresComputed() {\n      if (this.artistData != null)\n        return this.artistData.genres.slice(0, 4);\n      return [];\n    },\n  },  \n  async created() {\n    window.scroll({\n      top: 0,\n      behavior: 'auto'\n    });\n    if (!this.inicialized)\n      this.$router.push(\"/login\");\n    this.artistData = await this.$store.dispatch('artistAnalysis', this.$route.params.id);\n    this.getTopSongs();\n    if (this.progress.tracksLoaded) {\n      let response = await this.$store.dispatch('artistTracks', this.artistData);\n      this.artistData.tracks = response;\n      this.processTracks();\n      response = await this.$store.dispatch('artistTimeline', this.artistData);\n      this.artistData.timeline = response.timeline;\n      this.artistData.oldest = response.oldest;\n      this.artistData.newest = response.newest;\n      this.timelineReady = true;\n    }\n    else {\n      this.interval = setInterval(this.checkTracksLoaded, 2000);\n    }  \n  }\n}\n\n</script>\n\n<style scoped>\n\n.displace {\n  transform: translateY(-25px);\n}\n\n\n.featuredtracks {\n  --delay: 0;\n  animation: slide-up .5s ease calc(var(--delay) * .1s), hide calc(var(--delay) * .1s);\n}\n.library {\n  background-image: url('../../assets/icons/library.svg');\n}\n#nosongs {\n  margin-bottom: 10px;\n  color: rgba(255, 255, 255, 0.336);\n  padding: 10px;\n  background-color: rgba(7, 7, 7, 0.336);\n  border-radius: 10px;\n}\n.nomargin {\n  margin-bottom: 0px;\n}\n.windows {\n  align-items: top !important;\n}\n\n.window {\n  margin: 25px 25px;\n}\n\n@media screen and (max-width: 720px) {\n  #artist-image {\n    width: 70px !important;\n    height: 70px !important;\n    margin-right: 20px;\n  }\n\n  .fit {\n    width: calc(100% - 90px) !important;\n  }\n}\n\n@media screen and (max-width: 720px) {\n  .windows {\n    margin-top: 15px;\n  }\n\n  #track-image {\n    width: 70px !important;\n    height: 70px !important;\n    margin-right: 20px;\n  }\n\n  h1 {\n    font-size: 1.2em !important;\n    \n  }\n\n  h2 {\n      font-size: .8em !important;\n      margin: 2px !important;\n  }\n\n  h4 {\n    font-size: .9em !important;\n  }\n\n  .window {\n      margin: 18px 18px !important;\n  }\n}\n\nh4 {\n  margin-bottom: 0px;\n  color: rgba(255, 255, 255, 0.336);\n  padding: 10px;\n  background-color: rgba(7, 7, 7, 0.336);\n  border-radius: 10px;\n}\n\n#artist-image {\n  display: block;\n  width: 100px;\n  height: 100px;\n  background-size: auto 100%;\n  background-position: center center;\n  margin-right: 20px;\n}\n\n\nh1 {\n  font-size: 1.7em;\n  \n  display: block;\n  color: white;\n  text-align: left;\n  margin: 0px 0px;\n  line-height: 30px;\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin-top: 3px;\n}\n\nh2 {\n  font-size: 1em;\n  color: rgba(255, 255, 255, 0.568);\n  text-align: left;\n  margin: 0;\n  margin-top: 10px;\n  max-width: calc(100% - 5px);\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.fit {\n  display: block;\n  width: calc(100% - 120px);\n}\n\n.flex {\n  width: 100%;\n}\n\n</style>"]}]}