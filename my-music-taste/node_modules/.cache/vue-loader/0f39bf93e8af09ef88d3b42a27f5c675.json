{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/views/Analysis/GenreAnalysis.vue?vue&type=style&index=0&id=835ac7b4&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/views/Analysis/GenreAnalysis.vue","mtime":1573056014942},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZ2VucmUtaW1hZ2UgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDBweDsKICBoZWlnaHQ6IDEwMHB4OwogIGJhY2tncm91bmQtc2l6ZTogYXV0byAxMDAlOwogIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaWNvbnMvZ2VucmVzLnN2ZycpOwogIG1hcmdpbi1yaWdodDogMjBweDsKfQoKQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzIwcHgpIHsKICAud2luZG93cyB7CiAgICBtYXJnaW4tdG9wOiAxNXB4OwogIH0KCiAgI3RyYWNrLWltYWdlIHsKICAgIHdpZHRoOiA3MHB4ICFpbXBvcnRhbnQ7CiAgICBoZWlnaHQ6IDcwcHggIWltcG9ydGFudDsKICAgIG1hcmdpbi1yaWdodDogMjBweDsKICB9CgogICNnZW5yZS1pbWFnZSB7CiAgICB3aWR0aDogNzBweCAhaW1wb3J0YW50OwogICAgaGVpZ2h0OiA3MHB4ICFpbXBvcnRhbnQ7CiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgfQoKICBoMSB7CiAgICBmb250LXNpemU6IDEuMmVtICFpbXBvcnRhbnQ7CiAgICAKICB9CgogIGgyIHsKICAgICAgZm9udC1zaXplOiAuOGVtICFpbXBvcnRhbnQ7CiAgICAgIG1hcmdpbjogMnB4ICFpbXBvcnRhbnQ7CiAgfQoKICBoNCB7CiAgICBmb250LXNpemU6IC45ZW0gIWltcG9ydGFudDsKICB9CgogIC53aW5kb3cgewogICAgICBtYXJnaW46IDE4cHggMThweCAhaW1wb3J0YW50OwogIH0KfQoKaDQgewogIG1hcmdpbi1ib3R0b206IDBweDsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMzNik7CiAgcGFkZGluZzogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDcsIDcsIDcsIDAuMzM2KTsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9CgouZGlzcGxhY2UgewogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjVweCk7Cn0KCmgxIHsKICBmb250LXNpemU6IDEuN2VtOwogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwogIGRpc3BsYXk6IGJsb2NrOwogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbjogMHB4IDBweDsKICBsaW5lLWhlaWdodDogMzBweDsKICBkaXNwbGF5OiBibG9jazsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICBvdmVyZmxvdzogaGlkZGVuOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgbWFyZ2luLXRvcDogM3B4Owp9CgpoMiB7CiAgZm9udC1zaXplOiAxZW07CiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41NjgpOwogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luOiAwOwogIG1hcmdpbi10b3A6IDEwcHg7CiAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSA1cHgpOwogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIG92ZXJmbG93OiBoaWRkZW47CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKfQoKLmZpdCB7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IGNhbGMoMTAwJSAtIDEyMHB4KTsKfQoKLmZsZXggewogIHdpZHRoOiAxMDAlOwp9CgouZmVhdHVyZWR0cmFja3MgewogIC0tZGVsYXk6IDA7CiAgYW5pbWF0aW9uOiBzbGlkZS11cCAuNXMgZWFzZSBjYWxjKHZhcigtLWRlbGF5KSAqIC4xcyksIGhpZGUgY2FsYyh2YXIoLS1kZWxheSkgKiAuMXMpOwp9Ci5saWJyYXJ5IHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9pY29ucy9saWJyYXJ5LnN2ZycpOwp9CiNub3NvbmdzIHsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMzM2KTsKICBwYWRkaW5nOiAxMHB4OwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNywgNywgNywgMC4zMzYpOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7Cn0KLm5vbWFyZ2luIHsKICBtYXJnaW4tYm90dG9tOiAwcHg7Cn0KLndpbmRvd3MgewogIGFsaWduLWl0ZW1zOiB0b3AgIWltcG9ydGFudDsKfQoKLndpbmRvdyB7CiAgbWFyZ2luOiAyNXB4IDI1cHg7Cn0KCg=="},{"version":3,"sources":["GenreAnalysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"GenreAnalysis.vue","sourceRoot":"src/views/Analysis","sourcesContent":["<template>\n  <div id=\"main-flex\" class=\"genreanalysis\">\n    <NavBar/>    \n    <div id=\"main\">\n      <GoBackSearch/>\n      <div class=\"windows\">\n\n        <div class=\"window\" :style=\"{'--delay': 0}\">\n          <div v-if=\"genreData != null\" class=\"flex\">\n            <div class=\"flex\">\n              <div class=\"col\">\n                <div id=\"genre-image\"/>\n              </div>\n              <div class=\"col fit\">\n                <h1 id=\"artist-name\">{{genreData.name}}</h1>\n                <h2>{{trackNum}} Tracks</h2>\n                <h2>{{artistNum}} Artists</h2>\n              </div>\n            </div>\n          </div>\n          <Loading v-else/>\n        </div>\n\n        <div class=\"window\" :style=\"{'--delay': + 1}\">\n          <h3  class=\"window-title\" v-if=\"genreData != null\">Liked Track's Characteristics:</h3>\n          <div v-if=\"dataReady\">\n            <div v-if=\"!none\">\n              <PercentBar title=\"Happiness\" :percent=\"averages.valence\" :color=\"audioFeatures.valence.color\" />\n              <PercentBar title=\"Energy\" :percent=\"averages.energy\" :color=\"audioFeatures.energy.color\" />\n              <PercentBar title=\"Danceability\" :percent=\"averages.danceability\" :color=\"audioFeatures.danceability.color\" />\n            </div>\n          </div>\n          <h4 v-if=\"none\">No Songs Liked</h4>\n          <Loading class=\"displace\" v-if=\"!dataReady\"/>\n        </div>\n\n        <Spotlight v-if=\"!none\" :delay=\"2\" :override=\"dataReady\" title=\"Top Saved Artists:\" :list=\"topSavedArtistsObjects\" :image=\"topSavedArtistsObjects[0].image\"/>\n\n        <Timeline :none=\"none\" :small=\"true\" :override=\"dataReady\" title=\"When You Liked Tracks:\" instructions=\"\" :max=\"-1\" :delay=\"2\" :bars=\"timelineBars\" y_axis=\"Number of Songs\" :color=\"{red: 74, green: 189, blue: 180}\"/>\n\n        <Graph :zero=\"none\" :override=\"dataReady\" title=\"Liked Tracks Happiness:\" :delay=\"7\" :bars=\"cleanGraphDataForwards(audioFeatureGraphs.valence)\" max_tag=\"Happy\" min_tag=\"Sad\" y_axis=\"Number of Songs\" :color=\"audioFeatures.valence.color\"/>\n\n        <Graph :zero=\"none\" :override=\"dataReady\" title=\"Liked Tracks Energy:\" :delay=\"8\" :bars=\"cleanGraphDataForwards(audioFeatureGraphs.energy)\" max_tag=\"Hyper\" min_tag=\"Peaceful\" y_axis=\"Number of Songs\" :color=\"audioFeatures.energy.color\"/>\n\n        <Graph :zero=\"none\" :override=\"dataReady\" title=\"Liked Tracks Danceability:\" :delay=\"9\" :bars=\"cleanGraphDataForwards(audioFeatureGraphs.danceability)\" max_tag=\"Let's dance!\" min_tag=\"Couch Potato\" y_axis=\"Number of Songs\" :color=\"audioFeatures.danceability.color\"/>\n        \n        <Graph :zero=\"none\" :override=\"dataReady\" title=\"Add To Your Party Mixtape?\" :delay=\"9\" :bars=\"cleanGraphDataForwards(audioFeatureGraphs.banger)\" max_tag=\"Absolute Bangers\" min_tag=\"*Snore Snore*\" y_axis=\"Number of Songs\" :color=\"audioFeatures.banger.color\"/>\n\n        <FeaturedTracks :style=\"{'--delay': + 10}\" class=\"featuredtracks\" :saved=\"true\" :none=\"none\" :override=\"dataReady\" title=\"First Liked Tracks:\" :ids=\"oldestTracks\"/>\n\n        <FeaturedTracks :style=\"{'--delay': + 11}\" class=\"featuredtracks\" :saved=\"true\" :none=\"none\" :override=\"dataReady\" title=\"Recently Liked Tracks:\" :ids=\"newestTracks\"/>\n\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport NavBar from '@/components/General/NavBar.vue'\nimport GoBackSearch from '@/components/Library/GoBackSearch.vue'\nimport Timeline from '@/components/Analysis/Timeline.vue'\nimport PercentBar from '@/components/Analysis/PercentBar.vue'\nimport Graph from '@/components/Analysis/Graph.vue'\nimport FeaturedTracks from '@/components/Analysis/FeaturedTracks.vue'\nimport Spotlight from '@/components/Library/Spotlight.vue'\n\nexport default {\n  name: 'genreanalysis',\n  components: {\n      NavBar,\n      GoBackSearch,\n      Timeline,\n      PercentBar,\n      Graph,\n      FeaturedTracks,\n      Spotlight\n  },\n  data() {\n      return {\n        genreData: null,\n        interval: null,\n        dataReady: false,\n        timeline: [],\n        audioFeatureGraphs: {\n          valence: [0,0,0,0,0,0,0,0,0,0],\n          danceability: [0,0,0,0,0,0,0,0,0,0],\n          energy: [0,0,0,0,0,0,0,0,0,0],\n          banger: [0,0,0,0,0,0,0,0,0,0],\n        },\n        averages: {\n          valence: 0,\n          danceability: 0, \n          energy: 0,\n          banger: 0,\n        },\n        topSavedArtists: [],\n        recentlyLiked: [],\n        firstLiked: [],\n      }\n  },\n  methods: {\n    checkForData() {\n      if (this.progress.tracksLoaded) {\n        clearInterval(this.interval);\n        this.getData();\n      }\n    },\n    cleanGraphDataForwards(bars) {\n      let graphData = [];\n      for (let i = 0; i < bars.length; i++) {\n        graphData.push({value: bars[i], tag: bars[i]});\n      }\n      return graphData;\n    },\n    getData() {\n      if (this.$route.params.id in this.genres) {\n        this.genreData = this.genres[this.$route.params.id];\n        this.processData();\n      }\n      else\n        this.genreData = {name: this.$route.params.id, tracknum: 0, artists: []};\n    },\n    processData() {\n      let now = new Date();\n      let nowTime = now.getTime();\n      const MONTH = 2626560000;\n      let keys = Object.keys(this.audioFeatureGraphs);\n      for (let i = 0; i < this.genreData.artists.length; i++) {\n        let addedTop = false;\n        for (let j = 0; j < this.topSavedArtists.length; j++) {\n          if (this.artists[this.genreData.artists[i]].tracks.length > this.artists[this.topSavedArtists[j]].tracks.length) {\n            addedTop = true;\n            this.topSavedArtists.splice(j, 0, this.genreData.artists[i]);\n            break;\n          }\n        }\n        if (this.topSavedArtists.length < 4 && !addedTop)\n          this.topSavedArtists.push(this.genreData.artists[i]);\n        if (this.topSavedArtists.length > 4)\n          this.topSavedArtists = this.topSavedArtists.slice(0, 4);\n        for (let j = 0; j < this.artists[this.genreData.artists[i]].tracks.length; j++) {\n          let date = new Date(this.tracks[this.artists[this.genreData.artists[i]].tracks[j]].date);\n          let dateTime = date.getTime();\n\n          let diff = nowTime - dateTime;\n          let diffMonth = Math.floor(diff / MONTH);\n\n          let addedRecent = false;\n          let addedOld = false;\n          for (let k = 0; k < this.recentlyLiked.length; k++) {\n            let recentDate = new Date(this.tracks[this.recentlyLiked[k].id].date);\n            let recentDateTime = recentDate.getTime();\n\n            let oldDate = new Date(this.tracks[this.firstLiked[k].id].date);\n            let oldDateTime = oldDate.getTime();\n\n            if (dateTime > recentDateTime && !addedRecent) {\n              addedRecent = true;\n              this.recentlyLiked.splice(j, 0, {id: this.artists[this.genreData.artists[i]].tracks[j], month: diffMonth});\n            }\n            if (dateTime < oldDateTime && !addedOld) {\n              addedOld = true;\n              this.firstLiked.splice(j, 0, {id: this.artists[this.genreData.artists[i]].tracks[j], month: diffMonth});\n            }\n          }\n          if (this.recentlyLiked.length < 3 && !addedRecent)\n            this.recentlyLiked.push({id: this.artists[this.genreData.artists[i]].tracks[j], month: diffMonth});\n          if (this.recentlyLiked.length > 3)\n            this.recentlyLiked = this.recentlyLiked.slice(0, 3);\n          \n          if (this.firstLiked.length < 3 && !addedRecent)\n            this.firstLiked.push({id: this.artists[this.genreData.artists[i]].tracks[j], month: diffMonth});\n          if (this.firstLiked.length > 3)\n            this.firstLiked = this.firstLiked.slice(0, 3);\n\n\n          if (diffMonth >= this.timeline.length) {\n            while (diffMonth >= this.timeline.length) {\n              this.timeline.push(0);\n            }\n          }\n          this.timeline[diffMonth] += 1;\n          for (let k = 0; k < keys.length; k++) {\n            this.audioFeatureGraphs[keys[k]][Math.floor(this.tracks[this.artists[this.genreData.artists[i]].tracks[j]][keys[k]] * 10)] += 1;\n            this.averages[keys[k]] += this.tracks[this.artists[this.genreData.artists[i]].tracks[j]][keys[k]];\n          }\n        }\n        while (this.timeline.length < this.dateAdded.length) {\n            this.timeline.push(0);\n        }\n      }\n\n      for (let i = 0; i < keys.length; i++) {\n        this.averages[keys[i]] /= this.genreData.tracknum;\n      }\n      this.dataReady = true;\n    },\n    cleanGraphData(bars) {\n      let graphData = [];\n      for (let i = bars.length - 1; i >= 0; i--) {\n        graphData.push({value: bars[i], tag: bars[i]});\n      }\n      return graphData;\n    },\n    reverse(arr) {\n      let newArr = [];\n      for (let i = arr.length - 1; i >= 0; i--) {\n        newArr.push(arr[i]);\n      }\n      return newArr;\n    },\n  },\n  computed: {\n    topSavedArtistsObjects() {\n      if (!this.dataReady)\n        return;\n      let ids = this.topSavedArtists;\n      let list = [];\n      for (let i = 0; i < ids.length && i < 4; i++) {\n        list.push(this.$store.state.artists[ids[i]]);\n        list[i].value = list[i].tracks.length;\n      }\n      return list;\n    },\n    inicialized() {\n      return this.$store.state.inicialized;\n    },\n    progress() {\n      return this.$store.state.progress;\n    },\n    genres() {\n      return this.$store.state.genres;\n    },\n    tracks() {\n      return this.$store.state.tracks;\n    },\n    artists() {\n      return this.$store.state.artists;\n    },\n    trackNum() {\n      if (this.genreData != null) {\n        if (this.genreData.tracknum > 0) {\n          return this.genreData.tracknum;\n        }\n        return \"No Songs Liked\";\n      }\n      return \"Loading...\";\n    },\n    artistNum() {\n      if (this.genreData != null) {\n        if (this.genreData.artists.length > 0) {\n          return this.genreData.artists.length;\n        }\n        return \"No Artists\";\n      }\n      return \"Loading...\";\n    },\n    dateAdded() {\n      return this.$store.state.dateAdded;\n    },\n    timelineBars() {\n      return this.cleanGraphData(this.timeline);\n    },\n    none() {\n      if (this.genreData != null) {\n        if (this.genreData.tracknum == 0)\n          return true;\n      }\n      return false;\n    },\n    audioFeatures() {\n      return this.$store.state.audioFeatures;\n    },\n    oldestTracks() {\n      if (!this.dataReady)\n        return [];\n      return this.firstLiked;\n    },\n    newestTracks() {\n      if (!this.dataReady)\n        return [];\n      return this.reverse(this.recentlyLiked);\n    },\n  },  \n  async created() {\n    window.scroll({\n      top: 0,\n      behavior: 'auto'\n    });\n    if (!this.inicialized)\n      this.$router.push(\"/login\");\n    this.getData();\n    if (!this.progress.tracksLoaded)\n      this.interval = setInterval(this.checkForData, 1000);\n  }\n}\n\n</script>\n\n<style scoped>\n#genre-image {\n  display: block;\n  width: 100px;\n  height: 100px;\n  background-size: auto 100%;\n  background-position: center center;\n  background-image: url('../../assets/icons/genres.svg');\n  margin-right: 20px;\n}\n\n@media screen and (max-width: 720px) {\n  .windows {\n    margin-top: 15px;\n  }\n\n  #track-image {\n    width: 70px !important;\n    height: 70px !important;\n    margin-right: 20px;\n  }\n\n  #genre-image {\n    width: 70px !important;\n    height: 70px !important;\n    margin-right: 20px;\n  }\n\n  h1 {\n    font-size: 1.2em !important;\n    \n  }\n\n  h2 {\n      font-size: .8em !important;\n      margin: 2px !important;\n  }\n\n  h4 {\n    font-size: .9em !important;\n  }\n\n  .window {\n      margin: 18px 18px !important;\n  }\n}\n\nh4 {\n  margin-bottom: 0px;\n  color: rgba(255, 255, 255, 0.336);\n  padding: 10px;\n  background-color: rgba(7, 7, 7, 0.336);\n  border-radius: 10px;\n}\n\n.displace {\n  transform: translateY(-25px);\n}\n\nh1 {\n  font-size: 1.7em;\n  text-transform: capitalize;\n  display: block;\n  color: white;\n  text-align: left;\n  margin: 0px 0px;\n  line-height: 30px;\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin-top: 3px;\n}\n\nh2 {\n  font-size: 1em;\n  color: rgba(255, 255, 255, 0.568);\n  text-align: left;\n  margin: 0;\n  margin-top: 10px;\n  max-width: calc(100% - 5px);\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.fit {\n  display: block;\n  width: calc(100% - 120px);\n}\n\n.flex {\n  width: 100%;\n}\n\n.featuredtracks {\n  --delay: 0;\n  animation: slide-up .5s ease calc(var(--delay) * .1s), hide calc(var(--delay) * .1s);\n}\n.library {\n  background-image: url('../../assets/icons/library.svg');\n}\n#nosongs {\n  margin-bottom: 10px;\n  color: rgba(255, 255, 255, 0.336);\n  padding: 10px;\n  background-color: rgba(7, 7, 7, 0.336);\n  border-radius: 10px;\n}\n.nomargin {\n  margin-bottom: 0px;\n}\n.windows {\n  align-items: top !important;\n}\n\n.window {\n  margin: 25px 25px;\n}\n\n</style>"]}]}