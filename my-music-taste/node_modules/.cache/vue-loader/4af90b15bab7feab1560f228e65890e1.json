{"remainingRequest":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/components/Library/Averages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/src/components/Library/Averages.vue","mtime":1573230899900},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/Github/Spotify-Features/my-music-taste/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQZXJjZW50QmFyIGZyb20gJ0AvY29tcG9uZW50cy9BbmFseXNpcy9QZXJjZW50QmFyLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdBdmVyYWdlcycsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgUGVyY2VudEJhcgogICAgfSwKICAgIHByb3BzOiB7CiAgICAgICAgZGVsYXk6IE51bWJlciwKICAgICAgICBzYXZlOiBCb29sZWFuLAogICAgICAgIHN0YXRlOiBCb29sZWFuLAogICAgICAgIHByb2ZpbGU6IEJvb2xlYW4sCiAgICAgICAgZGF0YTogT2JqZWN0LAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICB0b2dnbGVTYXZlKCkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCd0b2dnbGVTYXZlJyk7CiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgYXVkaW9GZWF0dXJlcygpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLnByb2ZpbGUpCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXVkaW9GZWF0dXJlczsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5hdWRpb0ZlYXR1cmVzOwogICAgICAgIH0sCiAgICAgICAgbW9kZSgpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLnByb2ZpbGUpCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubW9kZTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5tb2RlOwogICAgICAgIH0KICAgIH0sCn0K"},{"version":3,"sources":["Averages.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Averages.vue","sourceRoot":"src/components/Library","sourcesContent":["<template>\n  <div class=\"Averages\" :style=\"{'--delay': + delay}\">\n      <h3 class=\"window-title\">Averages:</h3>\n      <PercentBar title=\"Tempo\" type=\"tempo\" :percent=\"audioFeatures.tempo.value / 208\" :color=\"audioFeatures.tempo.color\" />\n      <PercentBar title=\"Major\" :percent=\"mode.value\" :color=\"mode.major\" />\n      <PercentBar title=\"Minor\" :percent=\"1 - mode.value\" :color=\"mode.minor\" />\n      <PercentBar title=\"Volume\" type=\"volume\" :percent=\"(audioFeatures.loudness.value + 50) /  50\" :color=\"audioFeatures.loudness.color\" />\n      <div class=\"choosebutton\" v-if=\"save\" @click=\"toggleSave\" :class=\"{add: !state, remove: state}\"></div>\n  </div>\n</template>\n\n<script>\nimport PercentBar from '@/components/Analysis/PercentBar.vue'\n\nexport default {\n    name: 'Averages',\n    components: {\n        PercentBar\n    },\n    props: {\n        delay: Number,\n        save: Boolean,\n        state: Boolean,\n        profile: Boolean,\n        data: Object,\n    },\n    methods: {\n        toggleSave() {\n            this.$emit('toggleSave');\n        }\n    },\n    computed: {\n        audioFeatures() {\n            if (!this.profile)\n                return this.$store.state.audioFeatures;\n            return this.data.audioFeatures;\n        },\n        mode() {\n            if (!this.profile)\n                return this.$store.state.mode;\n            return this.data.mode;\n        }\n    },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.Averages {\n    --delay: 0;\n    animation: slide-up .5s ease calc(var(--delay) * .1s), hide calc(var(--delay) * .1s);\n    display: inline-block;\n    width: 75%;\n    margin: 30px 30px !important;\n    padding: 30px;\n    position: relative;\n    max-width: 400px;\n    border-radius: 5px;\n    margin-bottom: 20px;\n    background: rgba(255, 255, 255, 0.05);\n    border: 1px solid rgba(255, 255, 255, 0.247);\n}\n@media screen and (max-width: 720px) {\n  .Averages {\n    padding: 22px !important;\n  }\n}\n\n</style>"]}]}